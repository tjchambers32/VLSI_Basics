\o Program:		@(#)$CDS: virtuoso version 6.1.3 09/08/2008 02:56 (cic612lnx) $
\o Hierarchy:		/auto/ee2/Cadence/IC610/tools.lnx86/dfII/
\o Sub version:		sub-version IC6.1.3.1 (32-bit addresses)
\o Host name (type):	cardamom.ee.byu.edu (x86_64)
\o Operating system:	Linux 2.6.32-358.11.1.el6.x86_64 #1 SMP Wed May 15 10:48:38 EDT 2013
\o X display name (WxH):	:0.0 (1920x1200)
\o Available geometry:			TL(0:25) BR(1919:1174)
\o X server:		Red Hat, Inc.
\o Depth of Visual (Root):	24 (24)
\o Number of Planes Used:	24
\o X version:		11.0 (vendor release 11300000)
\o Qt version:		4.2.3
\o Window Manager:	gnome (metacity)
\o User Name:		lhsiao
\o Working Directory:	cardamom.ee.byu.edu:/auto/fsg/lhsiao/cadence
\o Process Id:		18539
\o 
\o COPYRIGHT © 1992-2008  CADENCE DESIGN SYSTEMS INC.  ALL RIGHTS RESERVED.
\o           © 1992-2008  UNIX SYSTEMS Laboratories INC.,
\o                          Reproduced with permission.
\o 
\o This Cadence Design Systems program and online documentation are
\o proprietary/confidential information and may be disclosed/used only
\o as authorized in a license agreement controlling such use and disclosure.
\o 
\o           RESTRICTED RIGHTS NOTICE (SHORT FORM)
\o Use/reproduction/disclosure is subject to restriction
\o set forth at FAR 1252.227-19 or its equivalent.
\o Loading geView.cxt 
\o Loading schView.cxt 
\o Loading selectSv.cxt 
\o Loading LVS.cxt 
\o Loading layerProc.cxt 
\o Loading xlUI.cxt 
\o Loading auCore.cxt 
\o Loading vhdl.cxt 
\o Loading seismic.cxt 
\o Loading ci.cxt 
\o Loading ams.cxt 
\o Loading NCSU CDK 1.5.1 customizations...
\o loading vars from /ee2/Cadence/NCSU/ncsu-cdk-1.6.0.beta/cdssetup/cdsenv for tool asimenv
\o Loading awv.cxt 
\o loading vars from /ee2/Cadence/NCSU/ncsu-cdk-1.6.0.beta/cdssetup/cdsenv for tool ddserv
\o loading vars from /ee2/Cadence/NCSU/ncsu-cdk-1.6.0.beta/cdssetup/cdsenv for tool layout
\o loading vars from /ee2/Cadence/NCSU/ncsu-cdk-1.6.0.beta/cdssetup/cdsenv for tool schematic
\o loading vars from /ee2/Cadence/NCSU/ncsu-cdk-1.6.0.beta/cdssetup/cdsenv for tool ui
\o Loading NCSU SKILL routines...
\o Done loading NCSU_CDK customizations.
\p > 
\i ddsServOpen("MYLIB" "minority" "schematic" "edit" nil)
\o *WARNING* (icLic-3) Could not get license Virtuoso_Schematic_Editor_L
\p > 
\a hiDBoxUser(_deLicenseQuestionDBox nil 1)
\r t
\o (deLicense-6) Checked out the license for Schematics XL to run Schematics L
\o Getting schematic propert bagLoading schematic.cxt 
\o Loading lo.cxt 
\o Loading le.cxt 
\w *WARNING* Parameter 'lxUseCell' already exists.
\o Loading lx.cxt 
\o Loading lce.cxt 
\i ddsServOpen("MYLIB" "minority" "layout" "edit" nil)
\o *WARNING* (icLic-3) Could not get license Virtuoso_Layout_Suite_L
\p > 
\a hiDBoxUser(_deLicenseQuestionDBox nil 1)
\r t
\o *WARNING* (icLic-3) Could not get license Virtuoso_Layout_Suite_XL
\o (deLicense-6) Checked out the license for Layout GXL to run Layout L
\o Loading leToolbox.cxt 
\o Getting layout propert bagLoading see.cxt 
\o Loading treeAssistant.cxt 
\o Loading oi.cxt 
\o Loading techComp.cxt 
\i ddsWhatsNew(nil 'Layout)
\a hiResizeWindow(window(4) list(666:311 1256:811))
\r t
\a hiResizeWindow(window(4) list(668:311 1258:811))
\r t
\a hiResizeWindow(window(4) list(673:311 1263:811))
\r t
\a hiResizeWindow(window(4) list(682:313 1272:813))
\r t
\a hiResizeWindow(window(4) list(692:313 1282:813))
\r t
\a hiResizeWindow(window(4) list(706:313 1296:813))
\r t
\a hiResizeWindow(window(4) list(720:313 1310:813))
\r t
\a hiResizeWindow(window(4) list(737:313 1327:813))
\r t
\a hiResizeWindow(window(4) list(758:313 1348:813))
\r t
\a hiResizeWindow(window(4) list(777:315 1367:815))
\r t
\a hiResizeWindow(window(4) list(798:315 1388:815))
\r t
\a hiResizeWindow(window(4) list(817:315 1407:815))
\r t
\a hiResizeWindow(window(4) list(836:315 1426:815))
\r t
\a hiResizeWindow(window(4) list(855:315 1445:815))
\r t
\a hiResizeWindow(window(4) list(870:315 1460:815))
\r t
\a hiResizeWindow(window(4) list(885:315 1475:815))
\r t
\a hiResizeWindow(window(4) list(900:315 1490:815))
\r t
\a hiResizeWindow(window(4) list(915:315 1505:815))
\r t
\a hiResizeWindow(window(4) list(926:315 1516:815))
\r t
\a hiResizeWindow(window(4) list(937:315 1527:815))
\r t
\a hiResizeWindow(window(4) list(944:317 1534:817))
\r t
\a hiResizeWindow(window(4) list(950:319 1540:819))
\r t
\a hiResizeWindow(window(4) list(952:319 1542:819))
\r t
\a hiResizeWindow(window(4) list(953:319 1543:819))
\r t
\a hiResizeWindow(window(4) list(954:319 1544:819))
\r t
\a hiResizeWindow(window(4) list(957:319 1547:819))
\r t
\a hiResizeWindow(window(4) list(961:320 1551:820))
\r t
\a hiResizeWindow(window(4) list(966:320 1556:820))
\r t
\a hiResizeWindow(window(4) list(973:320 1563:820))
\r t
\a hiResizeWindow(window(4) list(982:320 1572:820))
\r t
\a hiResizeWindow(window(4) list(992:320 1582:820))
\r t
\a hiResizeWindow(window(4) list(1001:320 1591:820))
\r t
\a hiResizeWindow(window(4) list(1011:320 1601:820))
\r t
\a hiResizeWindow(window(4) list(1020:322 1610:822))
\r t
\a hiResizeWindow(window(4) list(1030:322 1620:822))
\r t
\a hiResizeWindow(window(4) list(1040:322 1630:822))
\r t
\a hiResizeWindow(window(4) list(1050:323 1640:823))
\r t
\a hiResizeWindow(window(4) list(1060:323 1650:823))
\r t
\a hiResizeWindow(window(4) list(1070:325 1660:825))
\r t
\a hiResizeWindow(window(4) list(1078:325 1668:825))
\r t
\a hiResizeWindow(window(4) list(1086:327 1676:827))
\r t
\a hiResizeWindow(window(4) list(1095:327 1685:827))
\r t
\a hiResizeWindow(window(4) list(1103:327 1693:827))
\r t
\a hiResizeWindow(window(4) list(1109:327 1699:827))
\r t
\a hiResizeWindow(window(4) list(1114:327 1704:827))
\r t
\a hiResizeWindow(window(4) list(1115:327 1705:827))
\r t
\a hiResizeWindow(window(4) list(1116:327 1706:827))
\r t
\a hiResizeWindow(window(4) list(1117:327 1707:827))
\r t
\a hiResizeWindow(window(4) list(1118:327 1708:827))
\r t
\a hiResizeWindow(window(4) list(1119:327 1709:827))
\r t
\a hiResizeWindow(window(4) list(1120:328 1710:828))
\r t
\a hiResizeWindow(window(4) list(1121:328 1711:828))
\r t
\a hiResizeWindow(window(4) list(1123:329 1713:829))
\r t
\a hiResizeWindow(window(4) list(1125:330 1715:830))
\r t
\a hiResizeWindow(window(4) list(1126:330 1716:830))
\r t
\a hiResizeWindow(window(4) list(1128:331 1718:831))
\r t
\a hiResizeWindow(window(4) list(1129:332 1719:832))
\r t
\a hiResizeWindow(window(4) list(1131:332 1721:832))
\r t
\a hiResizeWindow(window(4) list(1132:332 1722:832))
\r t
\a hiResizeWindow(window(4) list(1134:332 1724:832))
\r t
\a hiResizeWindow(window(4) list(1135:332 1725:832))
\r t
\a hiResizeWindow(window(4) list(1136:332 1726:832))
\r t
\a hiResizeWindow(window(4) list(1137:333 1727:833))
\r t
\a hiResizeWindow(window(4) list(1138:334 1728:834))
\r t
\a hiResizeWindow(window(4) list(1140:336 1730:836))
\r t
\a hiResizeWindow(window(4) list(1142:339 1732:839))
\r t
\a hiResizeWindow(window(4) list(1143:340 1733:840))
\r t
\a hiResizeWindow(window(4) list(1144:341 1734:841))
\r t
\a hiResizeWindow(window(4) list(1145:342 1735:842))
\r t
\a hiResizeWindow(window(4) list(1146:342 1736:842))
\r t
\a hiResizeWindow(swindow(2) list(100:160 1013:919))
\r t
\a hiResizeWindow(swindow(2) list(100:160 1047:997))
\r t
\a hiResizeWindow(swindow(2) list(100:160 1081:1071))
\r t
\a hiResizeWindow(swindow(2) list(100:160 1123:1131))
\r t
\a hiResizeWindow(swindow(2) list(100:160 1184:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:160 1223:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:160 1226:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:160 1227:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:160 1228:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:158 1228:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:147 1228:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:128 1228:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:114 1229:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:101 1231:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:93 1234:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:87 1236:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:81 1239:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:75 1241:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:67 1245:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:59 1247:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:51 1248:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:47 1249:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:46 1249:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:43 1249:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:41 1249:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:40 1249:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:39 1249:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:38 1249:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1249:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:25 1249:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1249:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1251:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1264:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1267:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1264:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1224:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1176:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1162:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1136:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1102:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1099:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1096:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1085:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1075:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1067:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1058:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1056:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1053:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1040:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1039:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1041:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1046:1145))
\r t
\a hiSetCurrentWindow(window(3))
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a showClickInfo()
\i 5.1:51.9
\o 
\o metal1 drawing -> height: 4.80  width: 15.00
\r window:3
\a showClickInfo()
\i 3.6:45
\o 
\o pselect drawing -> height: 26.70  width: 10.20
\r window:3
\a showClickInfo()
\i 11.7:45.3
\o 
\o nwell drawing -> height: 34.80  width: 16.20
\r window:3
\a leHiStretch()
\p > 
\a geSingleSelectBox()
\i 13.2:44.4
\p > 
\a addPoint(hiGetCommandPoint())
\i 18:43.8
\r t
\r nil
\a leHiStretch()
\r t
\a geSingleSelectBox()
\i -16.2:62.1
\p > 
\a addPoint(hiGetCommandPoint())
\i 27.9:-14.1
\r t
\r t
\a geSingleSelectBox()
\i 12.9:30.3
\p > 
\a addPoint(hiGetCommandPoint())
\i 21.6:28.8
\r t
\r nil
\a leHiStretch()
\r t
\a geSingleSelectBox()
\i -11.7:60.9
\p > 
\a addPoint(hiGetCommandPoint())
\i 30.3:-3.9
\r t
\r t
\a mouseAddPt()
\i 11.7:28.8
\r t
\a mouseAddPt()
\i 11.7:28.8
\r t
\a leHiStretch()
\r t
\a mouseAddPt()
\i 12.9:33.3
\r t
\a mouseAddPt()
\i 12.9:32.7
\r t
\a leiMouseSetEntryLayer(3)
\r t
\a mouseAddPt()
\i 9.9:36.9
\r t
\a cancelEnterFun()
\r t
\r nil
\a showClickInfo()
\i 10.2:34.8
\o 
\o pselect drawing -> height: 26.70  width: 10.20
\r window:3
\a showClickInfo()
\i 9.9:34.8
\o 
\o nwell drawing -> height: 34.80  width: 16.20
\r window:3
\a doCreateLabels()
\o Loading layers.cxt 
\p > 
\a hiiSetCurrentForm('NCSU_createLabelForm)
\r t
\a hiFormCancel(NCSU_createLabelForm)
\r t
\r t
\a showClickInfo()
\i 6.3:53.7
\o 
\o CONTACT_M1_ACTIVE (instance "I2", library "AMI12")
\r window:3
\a showClickInfo()
\i 1.2:53.4
\o 
\o CONTACT_M1_ACTIVE (instance "I1", library "AMI12")
\r window:3
\a showClickInfo()
\i 9.6:53.1
\o 
\o CONTACT_M1_ACTIVE (instance "I3", library "AMI12")
\r window:3
\a showClickInfo()
\i 8.1:47.4
\o 
\o pselect drawing -> height: 26.70  width: 10.20
\r window:3
\a showClickInfo()
\i 9.3:18.9
\o 
\o nselect drawing -> height: 17.10  width: 10.20
\r window:3
\a showClickInfo()
\i 6.9:1.8
\o 
\o CONTACT_M1_ACTIVE (instance "I5", library "AMI12")
\r window:3
\a showClickInfo()
\i 8.1:2.1
\o 
\o metal1 drawing -> height: 4.80  width: 15.00
\r window:3
\a showClickInfo()
\i 12.3:2.1
\o 
\o pselect drawing -> height: 5.40  width: 15.60
\r window:3
\a showClickInfo()
\i -18.3:35.4
\r window:3
\a leHiStretch()
\p > 
\a geSingleSelectBox()
\i -17.7:62.7
\p > 
\a addPoint(hiGetCommandPoint())
\i 27.3:-8.7
\r t
\r t
\a mouseAddPt()
\i 3.6:32.7
\r t
\a mouseAddPt()
\i 12.9:40.2
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a leHiStretch()
\r t
\a geSingleSelectBox()
\i -2.4:59.7
\p > 
\a addPoint(hiGetCommandPoint())
\i 38.7:-8.7
\r t
\r t
\a mouseAddPt()
\i 15.3:28.5
\r t
\a mouseAddPt()
\i 17.1:36
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a hiiToggleEnterForm(leStretchForm)
\r t
\a cancelEnterFun()
\r t
\r nil
\a showClickInfo()
\i 37.5:28.5
\r window:3
\a leHiStretch()
\p > 
\a geSingleSelectBox()
\i 1.5:63.3
\p > 
\a addPoint(hiGetCommandPoint())
\i 31.2:-0.3
\r t
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a geSingleSelectBox()
\i 35.7:1.2
\p > 
\a addPoint(hiGetCommandPoint())
\i -20.1:77.4
\r t
\r t
\a mouseAddPt()
\i 14.7:43.8
\r t
\a mouseAddPt()
\i 33.3:47.1
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a hiResizeWindow(swindow(2) list(100:37 1047:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1096:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1161:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1185:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1214:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1246:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1289:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1311:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1313:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1320:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1338:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1351:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1370:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1386:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1396:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1401:1145))
\r t
\a hiResizeWindow(swindow(2) list(100:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(99:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(118:37 1419:1145))
\r t
\a hiResizeWindow(swindow(2) list(118:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(129:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(130:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(146:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(159:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(165:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(168:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(172:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(181:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(189:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(197:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(202:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(211:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(217:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(227:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(235:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(243:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(251:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(259:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(266:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(274:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(279:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(283:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(292:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(299:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(303:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(307:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(310:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(318:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(327:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(335:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(340:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(346:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(352:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(358:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(362:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(367:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(370:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(375:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(381:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(383:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(384:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(388:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(389:37 1406:1145))
\r t
\a hiResizeWindow(swindow(2) list(388:37 1405:1145))
\r t
\a hiResizeWindow(swindow(2) list(387:37 1404:1145))
\r t
\a hiResizeWindow(swindow(2) list(385:37 1402:1145))
\r t
\a hiResizeWindow(swindow(2) list(382:37 1399:1145))
\r t
\a hiResizeWindow(swindow(2) list(381:37 1398:1145))
\r t
\a hiResizeWindow(swindow(2) list(379:37 1396:1145))
\r t
\a hiResizeWindow(swindow(2) list(377:37 1394:1145))
\r t
\a hiResizeWindow(swindow(2) list(375:37 1392:1145))
\r t
\a hiResizeWindow(swindow(2) list(374:37 1391:1145))
\r t
\a hiResizeWindow(swindow(2) list(372:37 1389:1145))
\r t
\a hiResizeWindow(swindow(2) list(371:37 1388:1145))
\r t
\a hiResizeWindow(swindow(2) list(368:37 1385:1145))
\r t
\a hiResizeWindow(swindow(2) list(366:37 1383:1145))
\r t
\a hiResizeWindow(swindow(2) list(364:37 1381:1145))
\r t
\a hiResizeWindow(swindow(2) list(362:37 1379:1145))
\r t
\a hiResizeWindow(swindow(2) list(360:37 1377:1145))
\r t
\a hiResizeWindow(swindow(2) list(357:37 1374:1145))
\r t
\a hiResizeWindow(swindow(2) list(355:37 1372:1145))
\r t
\a hiResizeWindow(swindow(2) list(352:37 1369:1145))
\r t
\a hiResizeWindow(swindow(2) list(350:37 1367:1145))
\r t
\a hiResizeWindow(swindow(2) list(346:37 1363:1145))
\r t
\a hiResizeWindow(swindow(2) list(342:37 1359:1145))
\r t
\a hiResizeWindow(swindow(2) list(337:37 1354:1145))
\r t
\a hiResizeWindow(swindow(2) list(330:37 1347:1145))
\r t
\a hiResizeWindow(swindow(2) list(326:37 1343:1145))
\r t
\a hiResizeWindow(swindow(2) list(323:37 1340:1145))
\r t
\a hiResizeWindow(swindow(2) list(320:37 1337:1145))
\r t
\a hiResizeWindow(swindow(2) list(318:37 1335:1145))
\r t
\a hiResizeWindow(swindow(2) list(315:37 1332:1145))
\r t
\a hiResizeWindow(swindow(2) list(312:37 1329:1145))
\r t
\a hiResizeWindow(swindow(2) list(309:37 1326:1145))
\r t
\a hiResizeWindow(swindow(2) list(306:37 1323:1145))
\r t
\a hiResizeWindow(swindow(2) list(290:37 1307:1145))
\r t
\a hiResizeWindow(swindow(2) list(285:37 1302:1145))
\r t
\a hiResizeWindow(swindow(2) list(278:37 1295:1145))
\r t
\a hiResizeWindow(swindow(2) list(272:37 1289:1145))
\r t
\a hiResizeWindow(swindow(2) list(267:37 1284:1145))
\r t
\a hiResizeWindow(swindow(2) list(262:37 1279:1145))
\r t
\a hiResizeWindow(swindow(2) list(257:37 1274:1145))
\r t
\a hiResizeWindow(swindow(2) list(251:37 1268:1145))
\r t
\a hiResizeWindow(swindow(2) list(246:37 1263:1145))
\r t
\a hiResizeWindow(swindow(2) list(241:37 1258:1145))
\r t
\a hiResizeWindow(swindow(2) list(235:37 1252:1145))
\r t
\a hiResizeWindow(swindow(2) list(228:37 1245:1145))
\r t
\a hiResizeWindow(swindow(2) list(223:37 1240:1145))
\r t
\a hiResizeWindow(swindow(2) list(217:37 1234:1145))
\r t
\a hiResizeWindow(swindow(2) list(212:37 1229:1145))
\r t
\a hiResizeWindow(swindow(2) list(206:37 1223:1145))
\r t
\a hiResizeWindow(swindow(2) list(201:37 1218:1145))
\r t
\a hiResizeWindow(swindow(2) list(195:37 1212:1145))
\r t
\a hiResizeWindow(swindow(2) list(189:37 1206:1145))
\r t
\a hiResizeWindow(swindow(2) list(184:37 1201:1145))
\r t
\a hiResizeWindow(swindow(2) list(180:37 1197:1145))
\r t
\a hiResizeWindow(swindow(2) list(177:37 1194:1145))
\r t
\a hiResizeWindow(swindow(2) list(176:37 1193:1145))
\r t
\a hiResizeWindow(swindow(2) list(174:37 1191:1145))
\r t
\a hiResizeWindow(swindow(2) list(171:37 1188:1145))
\r t
\a hiResizeWindow(swindow(2) list(167:37 1184:1145))
\r t
\a hiResizeWindow(swindow(2) list(162:37 1179:1145))
\r t
\a hiResizeWindow(swindow(2) list(155:37 1172:1145))
\r t
\a hiResizeWindow(swindow(2) list(135:37 1152:1145))
\r t
\a hiResizeWindow(swindow(2) list(130:37 1147:1145))
\r t
\a hiResizeWindow(swindow(2) list(126:37 1143:1145))
\r t
\a hiResizeWindow(swindow(2) list(122:37 1139:1145))
\r t
\a hiResizeWindow(swindow(2) list(121:37 1138:1145))
\r t
\a hiResizeWindow(swindow(2) list(120:37 1137:1145))
\r t
\a hiResizeWindow(swindow(2) list(122:37 1139:1145))
\r t
\a hiResizeWindow(swindow(2) list(125:37 1142:1145))
\r t
\a hiResizeWindow(swindow(2) list(130:37 1147:1145))
\r t
\a hiResizeWindow(swindow(2) list(146:37 1163:1145))
\r t
\a hiResizeWindow(swindow(2) list(147:37 1164:1145))
\r t
\a hiResizeWindow(swindow(2) list(148:37 1165:1145))
\r t
\a hiResizeWindow(swindow(2) list(150:37 1167:1145))
\r t
\a hiResizeWindow(swindow(2) list(152:37 1169:1145))
\r t
\a hiResizeWindow(swindow(2) list(153:37 1170:1145))
\r t
\a hiResizeWindow(swindow(2) list(154:37 1171:1145))
\r t
\a hiResizeWindow(swindow(2) list(156:37 1173:1145))
\r t
\a hiResizeWindow(swindow(2) list(157:37 1174:1145))
\r t
\a hiResizeWindow(swindow(2) list(158:37 1175:1145))
\r t
\a hiResizeWindow(swindow(2) list(160:37 1177:1145))
\r t
\a hiResizeWindow(swindow(2) list(162:37 1179:1145))
\r t
\a hiResizeWindow(swindow(2) list(163:37 1180:1145))
\r t
\a hiResizeWindow(swindow(2) list(165:37 1182:1145))
\r t
\a hiResizeWindow(swindow(2) list(166:37 1183:1145))
\r t
\a hiResizeWindow(swindow(2) list(167:37 1184:1145))
\r t
\a hiResizeWindow(swindow(2) list(169:37 1186:1145))
\r t
\a hiResizeWindow(swindow(2) list(171:37 1188:1145))
\r t
\a hiResizeWindow(swindow(2) list(173:37 1190:1145))
\r t
\a hiResizeWindow(swindow(2) list(175:37 1192:1145))
\r t
\a hiResizeWindow(swindow(2) list(177:37 1194:1145))
\r t
\a hiResizeWindow(swindow(2) list(178:37 1195:1145))
\r t
\a hiResizeWindow(swindow(2) list(180:37 1197:1145))
\r t
\a hiiToggleEnterForm(leStretchForm)
\r t
\a cancelEnterFun()
\r t
\r nil
\a showClickInfo()
\i 16.2:52.8
\r window:3
\a hiSetCurrentWindow(window(2))
\r t
\a showClickInfo()
\i -3.4375:-1
\r window:2
\a hiSetCurrentWindow(window(3))
\r t
\a hiZoomInAtMouse()
\i 51.6:33
\r t
\a hiResizeWindow(swindow(2) list(180:37 1199:1145))
\r t
\a hiResizeWindow(swindow(2) list(180:37 1264:1145))
\r t
\a hiResizeWindow(swindow(2) list(180:37 1422:1145))
\r t
\a hiResizeWindow(swindow(2) list(180:37 1551:1145))
\r t
\a hiResizeWindow(swindow(2) list(180:37 1716:1145))
\r t
\a hiResizeWindow(swindow(2) list(180:37 1791:1145))
\r t
\a hiResizeWindow(swindow(2) list(180:37 1873:1145))
\r t
\a hiResizeWindow(swindow(2) list(180:37 1916:1145))
\r t
\a hiZoomInAtMouse()
\i 20.7:21
\r t
\a hiZoomOutAtMouse()
\i 20.7:21
\r t
\a hiZoomOutAtMouse()
\i 20.7:21
\r t
\a hiZoomInAtMouse()
\i 20.7:21
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a hiZoomOutAtMouse()
\i 32.1:37.5
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a leHiStretch()
\p > 
\a mouseAddPt()
\i 24.9:51.9
\r t
\a mouseAddPt()
\i -29.1:53.1
\r t
\a leHiStretch()
\r t
\a mouseAddPt()
\i 24.9:25.5
\r t
\a mouseAddPt()
\i -29.1:28.5
\r t
\a leHiStretch()
\r t
\a mouseAddPt()
\i 25.2:61.2
\r t
\a mouseAddPt()
\i -26.4:61.5
\r t
\a leHiStretch()
\r t
\a mouseAddPt()
\i 25.5:8.1
\r t
\a mouseAddPt()
\i -27.6:8.1
\r t
\a hiZoomInAtMouse()
\i 15.3:7.2
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a hiiToggleEnterForm(leStretchForm)
\r t
\a leiMouseToggleLayerVisible(0)
\r t
\a leiMouseToggleLayerVisible(1)
\r t
\a leiMouseToggleLayerVisible(2)
\r t
\a leiMouseToggleLayerVisible(3)
\p > 
\a hiDBoxOK(dBox)
\r t
\r nil
\a leiMouseSetEntryLayer(4)
\r t
\a leiMouseToggleLayerVisible(4)
\p > 
\a hiDBoxOK(dBox)
\r t
\r nil
\a leiMouseSetEntryLayer(5)
\r t
\a leiMouseToggleLayerVisible(5)
\p > 
\a hiDBoxOK(dBox)
\r t
\r nil
\a leiMouseToggleLayerVisible(2)
\r t
\a leiMouseToggleLayerVisible(1)
\r t
\a leiMouseToggleLayerVisible(0)
\r t
\a leiMouseToggleLayerVisible(7)
\r t
\a leiMouseToggleLayerVisible(7)
\r t
\a leiMouseToggleLayerVisible(10)
\r t
\a leiMouseToggleLayerVisible(10)
\r t
\a leiMouseToggleLayerVisible(9)
\r t
\a leiMouseToggleLayerVisible(9)
\r t
\a leiMouseToggleLayerVisible(12)
\r t
\a leiMouseToggleLayerVisible(12)
\r t
\a leiMouseToggleLayerVisible(11)
\r t
\a leiMouseToggleLayerVisible(11)
\r t
\a leiMouseToggleLayerVisible(12)
\r t
\a leiMouseToggleLayerVisible(12)
\r t
\a leiMouseToggleLayerVisible(11)
\r t
\a leiMouseToggleLayerVisible(11)
\r t
\a leiMouseToggleLayerVisible(7)
\r t
\a leiMouseToggleLayerVisible(7)
\r t
\a leiMouseToggleLayerVisible(5)
\p > 
\a hiDBoxOK(dBox)
\r t
\r nil
\a leiMouseSetEntryLayer(0)
\r t
\a leiMouseToggleLayerVisible(5)
\r t
\a leiMouseToggleLayerVisible(5)
\r t
\a leiMouseToggleLayerVisible(4)
\r t
\a leiMouseToggleLayerVisible(4)
\r t
\a leiMouseToggleLayerVisible(6)
\r t
\a leiMouseToggleLayerVisible(6)
\r t
\a leiMouseToggleLayerVisible(7)
\r t
\a leiMouseToggleLayerVisible(7)
\r t
\a leiMouseToggleLayerVisible(8)
\r t
\a leiMouseToggleLayerVisible(8)
\r t
\a leiMouseToggleLayerVisible(19)
\r t
\a leiMouseToggleLayerVisible(19)
\r t
\a leiMouseToggleLayerVisible(18)
\r t
\a leiMouseToggleLayerVisible(18)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a mouseAddPt()
\i -26.4:61.8
\r t
\a mouseAddPt()
\i -28.5:61.5
\r t
\a mouseAddPt()
\i 35.7:63
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a cancelEnterFun()
\r t
\r nil
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a leiMouseToggleLayerVisible(5)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a leiMouseToggleLayerVisible(5)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a leiMouseToggleLayerVisible(11)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a leiMouseToggleLayerVisible(11)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a showClickInfo()
\i 25.2:62.4
\o 
\o nselect drawing -> height: 5.40  width: 69.30
\r window:3
\a showClickInfo()
\i 33.6:68.7
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i 25.5:61.2
\r t
\a mouseAddPt()
\i -27.9:60.6
\r t
\a hiiToggleEnterForm(leStretchForm)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a hiPrevWinView(hiGetCurrentWindow())
\r t
\a cancelEnterFun()
\r t
\r nil
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a leHiStretch()
\p > 
\a mouseAddPt()
\i 25.2:8.7
\r t
\a mouseAddPt()
\i -28.2:9.6
\r t
\a cancelEnterFun()
\r t
\r nil
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a leiMouseToggleLayerVisible(9)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a leiMouseToggleLayerVisible(9)
\r t
\a geScroll(nil "s" nil)
\r t
\a leiMouseToggleLayerVisible(9)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a leiMouseToggleLayerVisible(9)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a leiMouseSetEntryLayer(9)
\r t
\a leiMouseToggleLayerVisible(10)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a leiMouseToggleLayerVisible(10)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a leiMouseToggleLayerVisible(10)
\r t
\a geScroll(nil "n" nil)
\r t
\a leiMouseToggleLayerVisible(10)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a leiMouseToggleLayerVisible(12)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a leiMouseToggleLayerVisible(12)
\r t
\a hiSetCurrentWindow(window(2))
\r t
\a geScroll(nil "n" nil)
\r t
\a hiSetCurrentWindow(window(3))
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a leiMouseToggleLayerVisible(9)
\p > 
\a hiDBoxOK(dBox)
\r t
\r nil
\a leiMouseSetEntryLayer(7)
\r t
\a leiMouseToggleLayerVisible(11)
\r t
\a showClickInfo()
\i -38.4:55.2
\r window:3
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a leiMouseToggleLayerVisible(11)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a leiMouseToggleLayerVisible(10)
\r t
\a showClickInfo()
\i -39.6:56.4
\r window:3
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a leiMouseToggleLayerVisible(10)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a leiMouseToggleLayerVisible(12)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a leiMouseToggleLayerVisible(12)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a showClickInfo()
\i 27.9:47.1
\o 
\o pselect drawing -> height: 26.70  width: 10.20
\r window:3
\a showClickInfo()
\i 43.8:46.5
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i 27.9:45.6
\r t
\a mouseAddPt()
\i -27.6:46.5
\r t
\a cancelEnterFun()
\r t
\r nil
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a leHiStretch()
\p > 
\a mouseAddPt()
\i 28.2:19.8
\r t
\a mouseAddPt()
\i -27.3:18.9
\r t
\a cancelEnterFun()
\r t
\r nil
\a geScroll(nil "n" nil)
\r t
\a leHiEditDisplayOptions()
\p > 
\a leDisplayOptionsForm->options->displayPinNames->value =  t
\r t
\a leDisplayOptionsForm->stop->value=10
\r 10
\a _hiFormApplyCB(leDisplayOptionsForm)
\r t
\a hiFormDone(leDisplayOptionsForm)
\r t
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a leiMouseToggleLayerSelectable(3)
\r t
\a leiMouseToggleLayerSelectable(3)
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 12:10:50 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o -----------
\o BYU DRC V.3
\o -----------
\o Parsing drcExtractRules of "/auto/ee2/Cadence/local/designkits/BYU/lib/AMI12/divaDRC.rul"...
\o Optimizing rules...
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 12:10:50 2015
\o     completed ....Sat Jan 31 12:10:50 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a hiResizeWindow(window(1) list(597:25 1322:218))
\r t
\a hiResizeWindow(window(1) list(596:25 1321:218))
\r t
\a hiResizeWindow(window(1) list(593:25 1318:218))
\r t
\a hiResizeWindow(window(1) list(591:25 1316:218))
\r t
\a hiResizeWindow(window(1) list(587:25 1312:218))
\r t
\a hiResizeWindow(window(1) list(583:25 1308:218))
\r t
\a hiResizeWindow(window(1) list(578:25 1303:218))
\r t
\a hiResizeWindow(window(1) list(570:25 1295:218))
\r t
\a hiResizeWindow(window(1) list(561:25 1286:218))
\r t
\a hiResizeWindow(window(1) list(548:25 1273:218))
\r t
\a hiResizeWindow(window(1) list(534:25 1259:218))
\r t
\a hiResizeWindow(window(1) list(520:25 1245:218))
\r t
\a hiResizeWindow(window(1) list(506:25 1231:218))
\r t
\a hiResizeWindow(window(1) list(495:25 1220:218))
\r t
\a hiResizeWindow(window(1) list(480:25 1205:218))
\r t
\a hiResizeWindow(window(1) list(466:25 1191:218))
\r t
\a hiResizeWindow(window(1) list(452:25 1177:218))
\r t
\a hiResizeWindow(window(1) list(437:25 1162:218))
\r t
\a hiResizeWindow(window(1) list(422:25 1147:218))
\r t
\a hiResizeWindow(window(1) list(407:25 1132:218))
\r t
\a hiResizeWindow(window(1) list(394:25 1119:218))
\r t
\a hiResizeWindow(window(1) list(379:25 1104:218))
\r t
\a hiResizeWindow(window(1) list(364:25 1089:218))
\r t
\a hiResizeWindow(window(1) list(349:25 1074:218))
\r t
\a hiResizeWindow(window(1) list(334:25 1059:218))
\r t
\a hiResizeWindow(window(1) list(313:25 1038:218))
\r t
\a hiResizeWindow(window(1) list(292:25 1017:218))
\r t
\a hiResizeWindow(window(1) list(271:25 996:218))
\r t
\a hiResizeWindow(window(1) list(252:25 977:218))
\r t
\a hiResizeWindow(window(1) list(233:25 958:218))
\r t
\a hiResizeWindow(window(1) list(216:25 941:218))
\r t
\a hiResizeWindow(window(1) list(199:25 924:218))
\r t
\a hiResizeWindow(window(1) list(182:25 907:218))
\r t
\a hiResizeWindow(window(1) list(167:25 892:218))
\r t
\a hiResizeWindow(window(1) list(152:25 877:218))
\r t
\a hiResizeWindow(window(1) list(137:25 862:218))
\r t
\a hiResizeWindow(window(1) list(124:25 849:218))
\r t
\a hiResizeWindow(window(1) list(111:25 836:218))
\r t
\a hiResizeWindow(window(1) list(100:25 825:218))
\r t
\a hiResizeWindow(window(1) list(91:25 816:218))
\r t
\a hiResizeWindow(window(1) list(82:25 807:218))
\r t
\a hiResizeWindow(window(1) list(73:37 798:230))
\r t
\a hiResizeWindow(window(1) list(64:37 789:230))
\r t
\a hiResizeWindow(window(1) list(59:37 784:230))
\r t
\a hiResizeWindow(window(1) list(55:37 780:230))
\r t
\a hiResizeWindow(window(1) list(54:37 779:230))
\r t
\a hiResizeWindow(window(1) list(53:37 778:230))
\r t
\a hiResizeWindow(window(1) list(52:37 777:230))
\r t
\a hiResizeWindow(window(1) list(51:37 776:230))
\r t
\a hiResizeWindow(window(1) list(50:37 775:230))
\r t
\a hiResizeWindow(window(1) list(49:37 774:230))
\r t
\a hiResizeWindow(window(1) list(48:37 773:230))
\r t
\a hiResizeWindow(window(1) list(46:37 771:230))
\r t
\a hiResizeWindow(window(1) list(45:37 770:230))
\r t
\a hiResizeWindow(window(1) list(44:37 769:230))
\r t
\a hiResizeWindow(window(1) list(43:37 768:230))
\r t
\a hiResizeWindow(window(1) list(42:37 767:230))
\r t
\a hiResizeWindow(window(1) list(41:37 766:230))
\r t
\a hiResizeWindow(window(1) list(40:37 765:230))
\r t
\a hiResizeWindow(window(1) list(39:37 764:230))
\r t
\a hiResizeWindow(window(1) list(38:37 763:230))
\r t
\a hiResizeWindow(window(1) list(37:37 762:230))
\r t
\a hiResizeWindow(window(1) list(36:37 761:230))
\r t
\a hiResizeWindow(window(1) list(35:37 760:230))
\r t
\a hiResizeWindow(window(1) list(34:37 759:230))
\r t
\a hiResizeWindow(window(1) list(31:37 756:230))
\r t
\a hiResizeWindow(window(1) list(30:37 755:230))
\r t
\a hiResizeWindow(window(1) list(28:37 753:230))
\r t
\a hiResizeWindow(window(1) list(26:37 751:230))
\r t
\a hiResizeWindow(window(1) list(25:37 750:230))
\r t
\a hiResizeWindow(window(1) list(23:37 748:230))
\r t
\a hiResizeWindow(window(1) list(21:37 746:230))
\r t
\a hiResizeWindow(window(1) list(19:37 744:230))
\r t
\a hiResizeWindow(window(1) list(18:37 743:230))
\r t
\a hiResizeWindow(window(1) list(17:37 742:230))
\r t
\a hiResizeWindow(window(1) list(16:37 741:230))
\r t
\a hiResizeWindow(window(1) list(15:37 740:230))
\r t
\a hiResizeWindow(window(1) list(14:37 739:230))
\r t
\a hiResizeWindow(window(1) list(13:37 738:230))
\r t
\a hiResizeWindow(window(1) list(11:37 736:230))
\r t
\a hiResizeWindow(window(1) list(10:37 735:230))
\r t
\a hiResizeWindow(window(1) list(8:37 733:230))
\r t
\a hiResizeWindow(window(1) list(6:37 731:230))
\r t
\a hiResizeWindow(window(1) list(4:37 729:230))
\r t
\a hiResizeWindow(window(1) list(3:37 728:230))
\r t
\a hiResizeWindow(window(1) list(1:36 726:229))
\r t
\a hiResizeWindow(window(1) list(0:36 725:229))
\r t
\a hiResizeWindow(window(1) list(0:35 725:228))
\r t
\a hiResizeWindow(window(1) list(0:34 725:227))
\r t
\a hiResizeWindow(window(1) list(0:33 725:226))
\r t
\a hiResizeWindow(window(1) list(0:32 725:225))
\r t
\a hiResizeWindow(window(1) list(0:31 725:224))
\r t
\a hiResizeWindow(window(1) list(0:29 725:222))
\r t
\a hiResizeWindow(window(1) list(0:28 725:221))
\r t
\a hiResizeWindow(window(1) list(0:27 725:220))
\r t
\a hiResizeWindow(window(1) list(0:26 725:219))
\r t
\a hiResizeWindow(window(1) list(0:25 725:218))
\r t
\a hiResizeWindow(window(1) list(0:25 725:222))
\r t
\a hiResizeWindow(window(1) list(0:25 725:254))
\r t
\a hiResizeWindow(window(1) list(0:25 725:332))
\r t
\a hiResizeWindow(window(1) list(0:25 725:406))
\r t
\a hiResizeWindow(window(1) list(0:25 725:490))
\r t
\a hiResizeWindow(window(1) list(0:25 725:561))
\r t
\a hiResizeWindow(window(1) list(0:25 725:627))
\r t
\a hiResizeWindow(window(1) list(0:25 725:653))
\r t
\a hiResizeWindow(window(1) list(0:25 725:656))
\r t
\a hiResizeWindow(window(1) list(0:25 725:658))
\r t
\a hiResizeWindow(window(1) list(0:25 725:670))
\r t
\a hiResizeWindow(window(1) list(0:25 725:680))
\r t
\a hiResizeWindow(window(1) list(0:25 725:689))
\r t
\a hiResizeWindow(window(1) list(0:25 725:698))
\r t
\a hiResizeWindow(window(1) list(0:25 725:701))
\r t
\a hiResizeWindow(window(1) list(0:25 725:703))
\r t
\a hiResizeWindow(window(1) list(0:25 725:705))
\r t
\a hiResizeWindow(window(1) list(0:25 722:705))
\r t
\a hiResizeWindow(window(1) list(0:25 689:705))
\r t
\a hiResizeWindow(window(1) list(0:25 640:705))
\r t
\a hiResizeWindow(window(1) list(0:25 606:705))
\r t
\a hiResizeWindow(window(1) list(0:25 600:705))
\r t
\a hiResizeWindow(window(1) list(0:25 583:705))
\r t
\a hiResizeWindow(window(1) list(0:25 582:705))
\r t
\a hiResizeWindow(window(1) list(0:25 578:705))
\r t
\a hiResizeWindow(window(1) list(0:25 570:705))
\r t
\a hiResizeWindow(window(1) list(0:25 560:705))
\r t
\a hiResizeWindow(window(1) list(0:25 552:705))
\r t
\a hiResizeWindow(window(1) list(0:25 546:705))
\r t
\a hiResizeWindow(window(1) list(0:25 542:705))
\r t
\a hiResizeWindow(window(1) list(0:25 538:705))
\r t
\a hiResizeWindow(window(1) list(0:25 533:705))
\r t
\a hiResizeWindow(window(1) list(0:25 532:705))
\r t
\a hiResizeWindow(window(1) list(0:25 535:705))
\r t
\a hiResizeWindow(window(1) list(0:25 560:705))
\r t
\a hiResizeWindow(window(1) list(0:25 597:705))
\r t
\a hiResizeWindow(window(1) list(0:25 633:705))
\r t
\a hiResizeWindow(window(1) list(0:25 679:705))
\r t
\a hiResizeWindow(window(1) list(0:25 702:705))
\r t
\a hiResizeWindow(window(1) list(0:25 718:705))
\r t
\a hiResizeWindow(window(1) list(0:25 722:705))
\r t
\a hiResizeWindow(window(1) list(0:25 724:705))
\r t
\a hiResizeWindow(window(1) list(0:25 757:705))
\r t
\a hiResizeWindow(window(1) list(0:25 759:705))
\r t
\a hiResizeWindow(window(1) list(0:25 756:705))
\r t
\a hiResizeWindow(window(1) list(0:25 741:705))
\r t
\a hiResizeWindow(window(1) list(0:25 735:705))
\r t
\a hiResizeWindow(window(1) list(0:25 733:705))
\r t
\a hiResizeWindow(window(1) list(0:25 720:705))
\r t
\a hiResizeWindow(window(1) list(0:25 717:705))
\r t
\a showClickInfo()
\i 19.2:68.4
\r window:3
\a hiResizeWindow(swindow(2) list(182:37 1916:1145))
\r t
\a hiResizeWindow(swindow(2) list(223:37 1916:1145))
\r t
\a hiResizeWindow(swindow(2) list(331:37 1916:1145))
\r t
\a hiResizeWindow(swindow(2) list(432:37 1916:1145))
\r t
\a hiResizeWindow(swindow(2) list(562:37 1916:1145))
\r t
\a hiResizeWindow(swindow(2) list(635:37 1916:1119))
\r t
\a hiResizeWindow(swindow(2) list(702:37 1916:1119))
\r t
\a hiResizeWindow(swindow(2) list(705:37 1916:1119))
\r t
\a hiResizeWindow(swindow(2) list(706:37 1916:1119))
\r t
\a hiResizeWindow(swindow(2) list(751:37 1916:1119))
\r t
\a hiResizeWindow(swindow(2) list(783:37 1916:1125))
\r t
\a hiResizeWindow(swindow(2) list(806:37 1916:1126))
\r t
\a hiResizeWindow(swindow(2) list(813:37 1916:1126))
\r t
\a hiResizeWindow(swindow(2) list(810:37 1916:1126))
\r t
\a hiResizeWindow(swindow(2) list(777:37 1916:1124))
\r t
\a hiResizeWindow(swindow(2) list(760:37 1916:1122))
\r t
\a hiResizeWindow(swindow(2) list(759:37 1916:1122))
\r t
\a hiResizeWindow(swindow(2) list(747:37 1916:1122))
\r t
\a hiResizeWindow(swindow(2) list(733:37 1916:1123))
\r t
\a hiResizeWindow(swindow(2) list(721:37 1916:1125))
\r t
\a hiResizeWindow(swindow(2) list(721:37 1916:1127))
\r t
\a hiResizeWindow(swindow(2) list(721:37 1916:1128))
\r t
\a hiResizeWindow(swindow(2) list(700:37 1916:1131))
\r t
\a hiResizeWindow(swindow(2) list(691:37 1916:1136))
\r t
\a hiResizeWindow(swindow(2) list(687:37 1916:1139))
\r t
\a hiResizeWindow(swindow(2) list(684:37 1916:1141))
\r t
\a hiResizeWindow(swindow(2) list(683:37 1916:1141))
\r t
\a hiResizeWindow(swindow(2) list(671:37 1916:1143))
\r t
\a hiResizeWindow(swindow(2) list(661:37 1916:1145))
\r t
\a hiResizeWindow(swindow(2) list(632:37 1916:1145))
\r t
\a hiResizeWindow(swindow(2) list(626:37 1916:1145))
\r t
\a hiResizeWindow(swindow(2) list(623:37 1916:1145))
\r t
\a hiResizeWindow(swindow(2) list(612:37 1916:1145))
\r t
\a hiResizeWindow(swindow(2) list(608:37 1916:1145))
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a hiZoomOutAtMouse()
\i 4.8:28.8
\r t
\i ddsServOpen("MYLIB" "minority" "schematic" "edit" nil)
\a hiCloseWindow(window(4))
\r Getting schematic propert bagt
\a hiCloseWindow(swindow(3))
\o Getting schematic propert bagLoading cph.cxt 
\r t
\a leiMouseSetEntryLayer(3)
\r t
\a hiZoomInAtMouse()
\i -15.9:51.9
\r t
\a hiZoomOutAtMouse()
\i -16.2:57
\r t
\a leSelBoxOrStretch()
\i -23.4:59.7
\i -23.4:59.7
\p > 
\a addPoint(hiGetCommandPoint())
\i -18.3:8.7
\r t
\r t
\a leHiCreateRect()
\p > 
\a hiiToggleEnterForm(leRectForm)
\r t
\a geSingleSelectBox()
\i -24.6:60.3
\p > 
\a addPoint(hiGetCommandPoint())
\i -21.3:13.2
\r t
\r nil
\a leHiCreateRect()
\r t
\a geSingleSelectBox()
\i -24.3:60.3
\p > 
\a addPoint(hiGetCommandPoint())
\i -22.8:35.4
\r t
\r nil
\a mouseAddPt()
\i -25.2:60.3
\r t
\a hiZoomRelativeScale(hiGetCurrentWindow() 2.0)
\r t
\i -18.9:20.7
\a cancelEnterFun()
\r t
\r nil
\a hiZoomOutAtMouse()
\i -18:23.1
\r t
\a geScroll(nil "w" nil)
\r t
\a leHiCreateRect()
\p > 
\a mouseAddPt()
\i -22.2:54.9
\r t
\a hiZoomInAtMouse()
\i -21:13.5
\r t
\a hiZoomInAtMouse()
\i -20.7:14.1
\r t
\i -20.7:13.8
\a hiZoomInAtMouse()
\i -21.3:14.1
\r t
\i -21.3:14.1
\a mouseAddPt()
\i -21:17.1
\r t
\a hiZoomOutAtMouse()
\i -21:17.1
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a hiZoomOutAtMouse()
\i -20.1:38.1
\r t
\a hiZoomOutAtMouse()
\i -20.4:38.1
\r t
\a leHiMove()
\r t
\w *WARNING* Value input must be a number - setting back to previous value
\a mouseAddPt()
\i -21.6:54.6
\r t
\a mouseAddPt()
\i -21:60.3
\r t
\a leHiStretch()
\r t
\a mouseAddPt()
\i -21.3:23.1
\r t
\a mouseAddPt()
\i -21:9
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiCopy()
\p > 
\a mouseAddPt()
\i -21:39.3
\r t
\a mouseAddPt()
\i -10.8:38.4
\r t
\a leHiCopy()
\r t
\a mouseAddPt()
\i -11.4:38.1
\r t
\a mouseAddPt()
\i 0.6:38.7
\r t
\a leHiCopy()
\r t
\a mouseAddPt()
\i 0.6:38.7
\r t
\a mouseAddPt()
\i 11.4:37.5
\r t
\a leHiCopy()
\r t
\a mouseAddPt()
\i 11.4:37.5
\r t
\a mouseAddPt()
\i 24.3:35.4
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a hiZoomInAtMouse()
\i 10.5:14.1
\r t
\a geScroll(nil "n" nil)
\r t
\a cancelEnterFun()
\r t
\r nil
\a leiMouseSetEntryLayer(1)
\r t
\a leiMouseSetEntryLayer(1)
\r t
\a showClickInfo()
\i -26.4:57.6
\o 
\o pselect drawing -> height: 26.70  width: 65.70
\r window:3
\a leHiCreateRect()
\p > 
\a mouseAddPt()
\i -25.5:57
\r t
\a mouseAddPt()
\i 34.8:53.7
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiCopy()
\p > 
\a mouseAddPt()
\i 31.2:54.6
\r t
\a mouseAddPt()
\i 31.2:54.6
\r t
\r t
\a leHiCopy()
\p > 
\a mouseAddPt()
\i 30.3:54.6
\r t
\a cancelEnterFun()
\r t
\r nil
\a showClickInfo()
\i -7.2:55.5
\o 
\o active drawing -> height: 3.30  width: 60.30
\r window:3
\a leHiCopy()
\p > 
\a mouseAddPt()
\i -6.9:54.6
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a mouseAddPt()
\i -6.3:12.3
\r t
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 12:18:23 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 12:18:23 2015
\o     completed ....Sat Jan 31 12:18:23 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a leiMouseSetEntryLayer(5)
\r t
\a showClickInfo()
\i -17.7:59.1
\o 
\o metal1 drawing -> height: 4.80  width: 68.40
\r window:3
\a leHiCreateRect()
\p > 
\a mouseAddPt()
\i -17.1:58.8
\r t
\a mouseAddPt()
\i -15.3:54
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a hiZoomInAtMouse()
\i -2.4:53.7
\r t
\a hiZoomInAtMouse()
\i -16.5:58.8
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -16.2:58.8
\r t
\a mouseAddPt()
\i -16.2:59.1
\r t
\r t
\a hiUndo()
\r t
\a leiMouseToggleLayerSelectable(1)
\r t
\a leiMouseToggleLayerSelectable(0)
\r t
\a leiMouseToggleLayerSelectable(2)
\r t
\a leiMouseToggleLayerSelectable(3)
\r t
\a leiMouseToggleLayerSelectable(4)
\r t
\a leiMouseToggleLayerSelectable(6)
\r t
\a leiMouseToggleLayerSelectable(7)
\r t
\a leiMouseToggleLayerSelectable(7)
\r t
\a leiMouseToggleLayerSelectable(7)
\r t
\a showClickInfo()
\i -16.2:58.2
\o 
\o metal1 drawing -> height: 4.80  width: 1.80
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -16.2:58.8
\r t
\a mouseAddPt()
\i -16.2:59.1
\r t
\r t
\a showClickInfo()
\i -21.3:57.6
\o 
\o pselect drawing -> height: 26.70  width: 65.70
\r window:3
\a leHiCreateVia()
\w *WARNING* (LE-103625): geViaSet : Incomplete layer maskNumber, the order of the vias may not be correct.
\p > 
\a le0ViaForm->viaSingleModeScrollView->viaDefName->value="CONTACT_M1_ACTIVE"
\r "CONTACT_M1_ACTIVE"
\a mouseAddPt()
\i -16.2:55.5
\r t
\a cancelEnterFun()
\r t
\r nil
\a showClickInfo()
\i -16.2:57.9
\o 
\o metal1 drawing -> height: 4.80  width: 1.80
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -17.1:57.9
\w *WARNING* (LE-104010): All selected points are locked. No wires can be stretched.
\r t
\a mouseAddPt()
\i -17.1:57.9
\r t
\r t
\a leHiStretch()
\p > 
\a cancelEnterFun(leStretchForm)
\r t
\r nil
\a showClickInfo()
\i -19.8:58.5
\o 
\o pselect drawing -> height: 26.70  width: 65.70
\r window:3
\a showClickInfo()
\i -19.5:57.6
\o 
\o pselect drawing -> height: 26.70  width: 65.70
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -17.1:57.9
\r t
\a mouseAddPt()
\i -17.1:58.5
\r t
\r t
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -16.8:57.3
\r t
\a mouseAddPt()
\i -17.1:57.3
\r t
\r t
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -17.1:57.3
\r t
\a mouseAddPt()
\i -16.8:57.3
\r t
\r t
\a geScroll(nil "s" nil)
\r t
\a showClickInfo()
\i -16.5:58.2
\o 
\o metal1 drawing -> height: 4.80  width: 1.80
\r window:3
\a leSelBoxOrStretch()
\i -17.1:57.6
\i -17.1:57.6
\p > 
\a addPoint(hiGetCommandPoint())
\i -17.7:57.6
\r t
\r t
\a leSelBoxOrStretch()
\i -15.9:54.3
\i -15.9:54.3
\p > 
\a addPoint(hiGetCommandPoint())
\i -15.9:54.3
\r t
\r t
\a geScroll(nil "n" nil)
\r t
\a showClickInfo()
\i -16.8:57.6
\o 
\o pselect drawing -> height: 26.70  width: 65.70
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -15.9:57.6
\r t
\a leHiStretch()
\r t
\a mouseAddPt()
\i -15.9:57.3
\r t
\a cancelEnterFun()
\r t
\r nil
\a hiZoomOutAtMouse()
\i -15.6:57
\r t
\a geScroll(nil "s" nil)
\r t
\a leiMouseToggleLayerSelectable(8)
\r t
\a leiMouseToggleLayerSelectable(10)
\r t
\a leSetAllLayerVisible(t)
\r t
\a leSetAllLayerVisible(nil)
\r t
\a leSetAllLayerVisible(nil)
\r t
\a leSetAllLayerSelectable(t)
\r t
\a leSetAllLayerVisible(t)
\r t
\a leSetAllLayerSelectable(nil)
\r t
\a leiMouseToggleLayerSelectable(5)
\r t
\a showClickInfo()
\i -16.2:57.6
\o 
\o metal1 drawing -> height: 4.80  width: 1.80
\r window:3
\a geScroll(nil "n" nil)
\r t
\a hiZoomInAtMouse()
\i -14.7:56.1
\r t
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -15.9:57.3
\w *WARNING* (LE-104010): All selected points are locked. No wires can be stretched.
\r t
\a mouseAddPt()
\i -15.9:57.3
\r t
\r t
\a leHiStretch()
\p > 
\a cancelEnterFun(leStretchForm)
\r t
\r nil
\a showClickInfo()
\i -15.6:52.8
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -15.9:57.3
\r t
\a mouseAddPt()
\i -14.7:57.3
\r t
\a mouseAddPt()
\i -15:54.3
\r t
\a mouseAddPt()
\i -15:54
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiCreateRuler()
\p > 
\a mouseAddPt()
\i -17.7:54
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiCreateRuler()
\p > 
\a mouseAddPt()
\i -16.8:54.9
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiCreateRuler()
\p > 
\a mouseAddPt()
\i -17.4:54.6
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiCreateRuler()
\p > 
\a mouseAddPt()
\i -20.1:57
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 12:25:42 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 12:25:42 2015
\o     completed ....Sat Jan 31 12:25:42 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********  Summary of rule violations for cell "minority layout"  *********
\o  # errors  Violated Rules
\o         1  (DBM Rule 3.1) Pselect and Nselect may not overlap
\o         3  (SCMOS Rule 4.2) select overlap of active: 2 lambda (1.20 um)
\o         1  (SCMOS Rule 4.4) n select and p select may not overlap
\o         5  Total errors found
\o 
\r t
\a hiZoomOutAtMouse()
\i -17.7:52.5
\r t
\i -17.7:52.5
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a cancelEnterFun(leStretchForm)
\r t
\r nil
\a leiMouseToggleLayerSelectable(5)
\r t
\a leiMouseToggleLayerSelectable(11)
\r t
\a showClickInfo()
\i -26.7:58.8
\o 
\o nselect drawing -> height: 5.40  width: 69.30
\r window:3
\a showClickInfo()
\i -30.6:57.9
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -28.2:58.8
\r t
\a mouseAddPt()
\i -28.5:58.8
\r t
\a cancelEnterFun()
\r t
\r nil
\a leiMouseToggleLayerVisible(11)
\r t
\a leiMouseSetEntryLayer(11)
\r t
\a leiMouseToggleLayerSelectable(11)
\r t
\a leiMouseToggleLayerVisible(12)
\r t
\a leiMouseToggleLayerSelectable(12)
\r t
\a leiMouseToggleLayerVisible(12)
\r t
\a showClickInfo()
\i -26.1:59.4
\o 
\o pselect drawing -> height: 26.70  width: 65.70
\r window:3
\a showClickInfo()
\i -31.2:58.2
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -26.4:59.4
\r t
\a mouseAddPt()
\i -26.7:57.6
\r t
\a cancelEnterFun()
\r t
\r nil
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a showClickInfo()
\i -26.4:57.6
\o 
\o pselect drawing -> height: 24.90  width: 65.70
\r window:3
\a showClickInfo()
\i -27.6:58.2
\o 
\o pselect drawing -> height: 26.70  width: 65.70
\r window:3
\a leHiDelete()
\r t
\a showClickInfo()
\i -26.4:59.4
\r window:3
\a showClickInfo()
\i -25.5:59.1
\r window:3
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 12:26:55 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 12:26:55 2015
\o     completed ....Sat Jan 31 12:26:55 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********  Summary of rule violations for cell "minority layout"  *********
\o  # errors  Violated Rules
\o         1  (SCMOS Rule 4.2) select overlap of active: 2 lambda (1.20 um)
\o         1  Total errors found
\o 
\r t
\a showClickInfo()
\i -19.2:56.4
\o 
\o pselect drawing -> height: 24.90  width: 65.70
\r window:3
\a hiZoomInAtMouse()
\i -19.2:55.8
\r t
\a leHiCreateRuler()
\p > 
\a mouseAddPt()
\i -20.4:57.6
\r t
\a mouseAddPt()
\i -20.4:57
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a cancelEnterFun(leStretchForm)
\r t
\r nil
\a showClickInfo()
\i -24.9:58.2
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -24.3:57.6
\r t
\a mouseAddPt()
\i -24:58.2
\r t
\a cancelEnterFun()
\r t
\r nil
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 12:27:34 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 12:27:34 2015
\o     completed ....Sat Jan 31 12:27:34 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a showClickInfo()
\i -24:57.6
\o 
\o pselect drawing -> height: 25.50  width: 65.70
\r window:3
\a hiZoomOutAtMouse()
\i -24:60
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a showClickInfo()
\i -28.5:54.6
\r window:3
\a leiMouseToggleLayerSelectable(12)
\r t
\a showClickInfo()
\i -23.7:56.7
\r window:3
\a showClickInfo()
\i -23.4:57
\r window:3
\a showClickInfo()
\i -23.4:57
\r window:3
\a leiMouseToggleLayerSelectable(1)
\r t
\a showClickInfo()
\i -24:56.7
\o 
\o active drawing -> height: 3.30  width: 60.30
\r window:3
\a leHiCreateRuler()
\p > 
\a mouseAddPt()
\i -24.6:57
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiCreateRuler()
\p > 
\a mouseAddPt()
\i -16.8:54.9
\r t
\a cancelEnterFun()
\r t
\r nil
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a leHiCreateVia()
\p > 
\a mouseAddPt()
\i -24.6:12.9
\r t
\a mouseAddPt()
\i -5.4:12.9
\r t
\a cancelEnterFun()
\r t
\r nil
\a geScroll(nil "n" nil)
\r t
\a leHiCreateRuler()
\p > 
\a mouseAddPt()
\i -4.8:12.9
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a hiiToggleEnterForm(leStretchForm)
\r t
\a cancelEnterFun()
\r t
\r nil
\a showClickInfo()
\i 7.5:22.8
\r window:3
\a showClickInfo()
\i -3:21.6
\r window:3
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a showClickInfo()
\i -3:-2.4
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -1.5:14.7
\r t
\a cancelEnterFun()
\r t
\r nil
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a hiZoomOutAtMouse()
\i 6:12.6
\r t
\a leHiCopy()
\p > 
\a mouseAddPt()
\i -5.1:12.6
\r t
\a mouseAddPt()
\i 30.3:12.6
\r t
\a leHiCopy()
\r t
\a mouseAddPt()
\i 30.6:12.3
\r t
\a mouseAddPt()
\i 18.3:12.9
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a leHiCopy()
\r t
\a mouseAddPt()
\i -16.2:55.5
\r t
\a mouseAddPt()
\i -24:55.2
\r t
\a leHiCopy()
\r t
\a mouseAddPt()
\i -17.4:55.5
\r t
\a mouseAddPt()
\i -6.6:55.2
\r t
\a leHiCopy()
\r t
\a mouseAddPt()
\i -4.5:54.9
\r t
\a mouseAddPt()
\i 31.8:53.7
\r t
\a leHiCopy()
\r t
\a mouseAddPt()
\i 31.8:55.5
\r t
\a mouseAddPt()
\i 18.3:54.9
\r t
\a cancelEnterFun()
\r t
\r nil
\a geScroll(nil "s" nil)
\r t
\a leiMouseToggleLayerSelectable(1)
\r t
\a leiMouseToggleLayerSelectable(5)
\r t
\a leiMouseToggleLayerVisible(5)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a leiMouseToggleLayerVisible(5)
\r t
\a leiMouseToggleLayerSelectable(6)
\r t
\a leiMouseToggleLayerSelectable(6)
\r t
\a leiMouseToggleLayerSelectable(5)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a leiMouseSetEntryLayer(5)
\r t
\a leiMouseToggleLayerSelectable(5)
\r t
\a showClickInfo()
\i -25.8:14.1
\r window:3
\a showClickInfo()
\i -25.5:10.8
\r window:3
\a leiMouseToggleLayerSelectable(5)
\r t
\a showClickInfo()
\i -25.8:14.1
\r window:3
\a leHiCreateRect()
\p > 
\a mouseAddPt()
\i -26.1:15
\r t
\a mouseAddPt()
\i -23.1:10.2
\r t
\a cancelEnterFun()
\r t
\r nil
\a showClickInfo()
\i -32.1:16.5
\r window:3
\a hiZoomInAtMouse()
\i -23.1:12
\r t
\a leHiStretch()
\p > 
\a cancelEnterFun(leStretchForm)
\r t
\r nil
\a showClickInfo()
\i -29.7:14.4
\r window:3
\a showClickInfo()
\i -29.7:14.4
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -24.6:15
\r t
\a leiMouseToggleLayerSelectable(5)
\r t
\a mouseAddPt()
\i -30:13.2
\r t
\a leHiStretch()
\r t
\a mouseAddPt()
\i -24.3:15
\r t
\a mouseAddPt()
\i -24.6:14.4
\r t
\a cancelEnterFun()
\r t
\r nil
\a leiMouseToggleLayerSelectable(1)
\r t
\a showClickInfo()
\i -25.5:14.7
\o 
\o active drawing -> height: 3.30  width: 60.30
\r window:3
\a showClickInfo()
\i -24:-0.3
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -25.5:14.7
\r t
\a mouseAddPt()
\i -26.7:14.4
\r t
\a cancelEnterFun()
\r t
\r nil
\a showClickInfo()
\i -6.6:1.5
\r window:3
\a leHiCreateRect()
\p > 
\a mouseAddPt()
\i -6.9:14.4
\r t
\a mouseAddPt()
\i -3.9:9.9
\r t
\a hiZoomOutAtMouse()
\i 25.8:2.4
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiMove()
\p > 
\a mouseAddPt()
\i -28.2:16.2
\r t
\a geSingleSelectBox()
\i -27:15.9
\p > 
\a addPoint(hiGetCommandPoint())
\i 37.5:10.8
\r t
\r t
\a mouseAddPt()
\i 32.7:13.2
\r t
\a mouseAddPt()
\i 32.4:16.8
\r t
\a cancelEnterFun()
\r t
\r nil
\a hiZoomInAtMouse()
\i -23.7:13.5
\r t
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -23.7:14.4
\r t
\a mouseAddPt()
\i -23.4:18
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -4.8:14.4
\r t
\a mouseAddPt()
\i -4.8:18
\r t
\a cancelEnterFun()
\r t
\r nil
\a hiZoomOutAtMouse()
\i 2.1:13.5
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 12:34:24 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 12:34:24 2015
\o     completed ....Sat Jan 31 12:34:25 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:01
\o *********  Summary of rule violations for cell "minority layout"  *********
\o  # errors  Violated Rules
\o         1  (SCMOS Rule 4.2) select overlap of active: 2 lambda (1.20 um)
\o         1  (SCMOS Rule 7.2) metal1 spacing: 3 lambda (1.80 um)
\o         2  Total errors found
\o 
\r t
\a hiZoomInAtMouse()
\i -22.8:8.7
\r t
\a showClickInfo()
\i -24:10.2
\o 
\o metal1 drawing -> height: 7.80  width: 3.00
\r window:3
\a leHiStretch()
\p > 
\a cancelEnterFun(leStretchForm)
\r t
\r nil
\a showClickInfo()
\i -34.8:13.2
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -24.9:10.2
\r t
\a mouseAddPt()
\i -24.9:9.9
\r t
\a cancelEnterFun()
\r t
\r nil
\a hiZoomOutAtMouse()
\i 1.5:3.6
\r t
\a hiZoomInAtMouse()
\i -29.1:15.9
\r t
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -30:20.1
\r t
\a leHiStretch()
\r t
\a mouseAddPt()
\i -27.6:20.7
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a leiMouseToggleLayerSelectable(1)
\r t
\a leiMouseToggleLayerSelectable(12)
\r t
\a mouseAddPt()
\i -27.6:22.5
\r t
\a leiMouseToggleLayerSelectable(11)
\r t
\a mouseAddPt()
\i -27.6:22.5
\r t
\a mouseAddPt()
\i -28.2:22.5
\r t
\a cancelEnterFun()
\r t
\r nil
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 12:35:19 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 12:35:19 2015
\o     completed ....Sat Jan 31 12:35:20 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:01
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a hiZoomOutAtMouse()
\i -30:17.4
\r t
\a geScroll(nil "n" nil)
\r t
\a leHiMove()
\p > 
\a geSingleSelectBox()
\i -26.7:57.6
\p > 
\a addPoint(hiGetCommandPoint())
\i 36:51.9
\r t
\r t
\a cancelEnterFun()
\r t
\r nil
\a leSelBoxOrStretch()
\i -26.7:57.9
\i -26.7:57.9
\p > 
\a addPoint(hiGetCommandPoint())
\i 36:52.2
\r t
\r t
\a showClickInfo()
\i 33.3:54
\o 
\o pselect drawing -> height: 25.50  width: 65.70
\r window:3
\a showClickInfo()
\i -20.4:57.6
\o 
\o pselect drawing -> height: 25.50  width: 65.70
\r window:3
\a showClickInfo()
\i -19.5:57.6
\o 
\o pselect drawing -> height: 25.50  width: 65.70
\r window:3
\a leHiCreateRuler()
\p > 
\a mouseAddPt()
\i -31.5:54.6
\r t
\a mouseAddPt()
\i -32.1:52.5
\r t
\a cancelEnterFun()
\r t
\r nil
\a _lxHiMousePopUp()
\r t
\a hiPopupDown(lePopUpMenu)
\r t
\a leHiDelete()
\r t
\a hiUndo()
\r t
\a showClickInfo()
\i -30.6:54.6
\r window:3
\a leiMouseToggleLayerSelectable(5)
\r t
\a leiMouseToggleLayerSelectable(11)
\r t
\a leiMouseToggleLayerSelectable(12)
\r t
\a _deUpdateWindowMenu('leSessionWindowMenu3 3)
\r t
\a leHiClearRuler()
\r t
\a leHiMove()
\p > 
\a mouseAddPt()
\i 7.2:55.2
\r t
\a leiMouseToggleLayerSelectable(1)
\r t
\a mouseAddPt()
\i 7.2:54.9
\r t
\a mouseAddPt()
\i 6.9:51.3
\r t
\a cancelEnterFun()
\r t
\r nil
\a leSelBoxOrStretch()
\i -26.4:57.9
\i -26.4:57.9
\p > 
\a addPoint(hiGetCommandPoint())
\i 34.5:53.7
\r t
\r t
\a leHiMove()
\p > 
\a mouseAddPt()
\i 31.5:55.2
\r t
\a mouseAddPt()
\i 30.9:51.6
\r t
\r t
\a leHiStretch()
\p > 
\a leiMouseToggleLayerSelectable(5)
\r t
\a mouseAddPt()
\i -28.5:51
\w *WARNING* (LE-104010): All selected points are locked. No wires can be stretched.
\r t
\a mouseAddPt()
\i -30.6:51
\r t
\r t
\a showClickInfo()
\i -30.6:51
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -16.2:54.3
\r t
\a mouseAddPt()
\i -16.5:50.7
\r t
\a cancelEnterFun()
\r t
\r nil
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 12:36:55 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 12:36:55 2015
\o     completed ....Sat Jan 31 12:36:55 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a leHiCopy()
\p > 
\a mouseAddPt()
\i -4.8:16.5
\r t
\a mouseAddPt()
\i -15.9:16.8
\r t
\a cancelEnterFun()
\r t
\r nil
\a leiMouseToggleLayerSelectable(1)
\r t
\a showClickInfo()
\i -17.4:22.8
\r window:3
\a showClickInfo()
\i -17.7:22.5
\r window:3
\a leHiCreateRect()
\p > 
\a mouseAddPt()
\i -18:23.4
\r t
\a mouseAddPt()
\i -15:15
\r t
\a leHiCreateRect()
\r t
\a mouseAddPt()
\i -14.7:23.4
\r t
\a mouseAddPt()
\i 6.6:21.6
\r t
\a hiZoomInAtMouse()
\i -14.7:20.1
\r t
\a hiZoomInAtMouse()
\i -14.7:20.4
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -14.7:22.2
\r t
\a mouseAddPt()
\i -15:22.2
\r t
\a cancelEnterFun()
\r t
\r nil
\a leiMouseSetEntryLayer(5)
\r t
\a showClickInfo()
\i 4.8:21.3
\r window:3
\a showClickInfo()
\i 3.6:21.3
\r window:3
\a showClickInfo()
\i 3.9:20.7
\r window:3
\a leHiCreateRect()
\p > 
\a mouseAddPt()
\i 3.9:21.6
\r t
\a mouseAddPt()
\i 6.6:14.4
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a mouseAddPt()
\i 3.9:20.4
\r t
\a mouseAddPt()
\i 4.5:20.1
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a mouseAddPt()
\i 5.4:14.4
\r t
\a mouseAddPt()
\i 5.4:11.4
\r t
\a cancelEnterFun()
\r t
\r nil
\a hiZoomOutAtMouse()
\i 3.9:12.3
\r t
\a hiZoomOutAtMouse()
\i 3.9:12.9
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 12:38:48 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 12:38:48 2015
\o     completed ....Sat Jan 31 12:38:49 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:01
\o *********  Summary of rule violations for cell "minority layout"  *********
\o  # errors  Violated Rules
\o         1  (SCMOS Rule 7.2) metal1 spacing: 3 lambda (1.80 um)
\o         1  Total errors found
\o 
\r t
\a hiZoomInAtMouse()
\i 6.6:10.5
\r t
\a leHiStretch()
\p > 
\a mouseAddPt()
\i 6:11.4
\r t
\a mouseAddPt()
\i 6:11.7
\r t
\a cancelEnterFun()
\r t
\r nil
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 12:39:03 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 12:39:03 2015
\o     completed ....Sat Jan 31 12:39:03 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a leHiCreateRect()
\p > 
\a mouseAddPt()
\i 6.9:13.5
\r t
\a mouseAddPt()
\i 23.1:11.7
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a mouseAddPt()
\i 6.9:12.3
\r t
\a mouseAddPt()
\i 6.6:12.3
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a mouseAddPt()
\i 23.1:12.9
\r t
\a mouseAddPt()
\i 31.5:12.6
\r t
\a leHiCreateRect()
\r t
\a mouseAddPt()
\i 28.5:18
\r t
\a mouseAddPt()
\i 31.5:13.5
\r t
\a cancelEnterFun()
\r t
\r nil
\a hiZoomOutAtMouse()
\i 24.6:14.4
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 12:39:38 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 12:39:38 2015
\o     completed ....Sat Jan 31 12:39:38 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a leHiCreateRect()
\p > 
\a mouseAddPt()
\i 15.9:53.4
\r t
\a mouseAddPt()
\i 18.9:15
\r t
\a cancelEnterFun()
\r t
\r nil
\a hiZoomInAtMouse()
\i 18.9:15
\r t
\a hiZoomInAtMouse()
\i 18.9:15
\r t
\a leHiMove()
\p > 
\a mouseAddPt()
\i 19.2:16.5
\r t
\a mouseAddPt()
\i 18.9:16.5
\r t
\a cancelEnterFun()
\r t
\r nil
\a hiZoomOutAtMouse()
\i 18.9:15.6
\r t
\a hiZoomOutAtMouse()
\i 18.9:15.6
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 12:40:04 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 12:40:04 2015
\o     completed ....Sat Jan 31 12:40:04 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********  Summary of rule violations for cell "minority layout"  *********
\o  # errors  Violated Rules
\o         1  (SCMOS Rule 7.2) metal1 spacing: 3 lambda (1.80 um)
\o         1  Total errors found
\o 
\r t
\a hiZoomInAtMouse()
\i 19.8:13.8
\r t
\a leHiCreateRuler()
\p > 
\a mouseAddPt()
\i 20.4:15
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiMove()
\p > 
\a mouseAddPt()
\i 18.6:17.4
\r t
\a mouseAddPt()
\i 18.6:17.7
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a mouseAddPt()
\i 18.9:15
\r t
\a mouseAddPt()
\i 18.9:15.3
\r t
\a cancelEnterFun()
\r t
\r nil
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 12:40:28 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 12:40:28 2015
\o     completed ....Sat Jan 31 12:40:28 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a hiZoomOutAtMouse()
\i 10.2:16.8
\r t
\a hiZoomInAtMouse()
\i -18.9:15.6
\r t
\a leHiMove()
\p > 
\a mouseAddPt()
\i -15.6:17.1
\r t
\a mouseAddPt()
\i -15.6:17.4
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -15.3:15
\r t
\a mouseAddPt()
\i -15.3:15.3
\r t
\a cancelEnterFun()
\r t
\r nil
\a hiZoomOutAtMouse()
\i -14.1:13.8
\r t
\a geScroll(nil "n" nil)
\r t
\a leHiCreateRect()
\p > 
\a mouseAddPt()
\i -25.5:53.1
\r t
\a mouseAddPt()
\i -22.8:46.2
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiCopy()
\p > 
\a mouseAddPt()
\i -5.7:22.5
\r t
\a mouseAddPt()
\i -18.9:47.1
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -15:46.8
\r t
\a mouseAddPt()
\i -22.8:46.8
\r t
\a leHiStretch()
\r t
\a mouseAddPt()
\i 6.6:47.1
\r t
\a mouseAddPt()
\i -3.9:47.1
\r t
\a leHiCreateRect()
\r t
\a hiiSetCurrentForm('leStretchForm)
\r t
\a mouseAddPt()
\i -6.9:57
\r t
\a mouseAddPt()
\i -3.9:48
\r t
\a leHiCopy()
\r t
\a mouseAddPt()
\i -7.8:47.1
\r t
\a mouseAddPt()
\i 11.7:56.7
\r t
\a cancelEnterFun()
\r t
\r nil
\a showClickInfo()
\i 8.1:47.1
\o 
\o metal1 drawing -> height: 1.80  width: 18.90
\r window:3
\a leHiMove()
\p > 
\a mouseAddPt()
\i 6.6:46.8
\r t
\a mouseAddPt()
\i 1.2:55.8
\r t
\r t
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -3.9:57.9
\r t
\a mouseAddPt()
\i -3.9:57.9
\r t
\r t
\a showClickInfo()
\i -3.6:66.6
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -3.3:56.1
\r t
\a mouseAddPt()
\i -3.6:56.1
\r t
\a mouseAddPt()
\i 15.3:55.8
\r t
\a mouseAddPt()
\i 32.1:55.2
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiCreateRect()
\p > 
\a mouseAddPt()
\i 29.4:50.4
\r t
\a mouseAddPt()
\i 32.4:55.2
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -3.6:56.1
\r t
\a mouseAddPt()
\i -3.9:56.1
\r t
\a cancelEnterFun()
\r t
\r nil
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 12:41:58 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 12:41:58 2015
\o     completed ....Sat Jan 31 12:41:58 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a leHiCreateVia()
\p > 
\a le0ViaForm->viaSingleModeScrollView->viaDefName->value="CONTACT_M1_POLY"
\r "CONTACT_M1_POLY"
\a mouseAddPt()
\i -19.5:42.6
\r t
\a mouseAddPt()
\i -9.3:36.6
\r t
\a mouseAddPt()
\i 26.4:31.8
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiCreateRect()
\p > 
\a cancelEnterFun(leRectForm)
\r t
\r nil
\a leHiCreateVia()
\p > 
\a mouseAddPt()
\i -1.5:42.6
\r t
\a mouseAddPt()
\i 9.3:36.6
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiCreateRect()
\p > 
\a mouseAddPt()
\i -20.7:43.8
\r t
\a mouseAddPt()
\i -0.3:41.4
\r t
\a leHiCreateRect()
\r t
\a mouseAddPt()
\i -10.5:37.8
\r t
\a mouseAddPt()
\i 10.5:35.4
\r t
\a cancelEnterFun()
\r t
\r nil
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 12:43:26 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 12:43:26 2015
\o     completed ....Sat Jan 31 12:43:26 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a leHiCreateRect()
\p > 
\a mouseAddPt()
\i 25.5:33
\r t
\a mouseAddPt()
\i 32.1:30.6
\r t
\a leHiStretch()
\r t
\a mouseAddPt()
\i 25.5:31.8
\r t
\a mouseAddPt()
\i 25.2:31.8
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiCreateVia()
\p > 
\a le0ViaForm->viaSingleModeScrollView->viaDefName->value="VIA_M2_M1"
\r "VIA_M2_M1"
\a mouseAddPt()
\i -15:42.6
\r t
\a mouseAddPt()
\i 4.2:36.6
\r t
\a mouseAddPt()
\i 30.6:31.8
\r t
\a cancelEnterFun()
\r t
\r nil
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 12:44:22 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 12:44:22 2015
\o     completed ....Sat Jan 31 12:44:23 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:01
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a hiResizeWindow(swindow(2) list(607:37 1916:1145))
\r t
\a hiResizeWindow(swindow(2) list(575:37 1916:1145))
\r t
\a hiResizeWindow(swindow(2) list(519:37 1916:1145))
\r t
\a hiResizeWindow(swindow(2) list(468:37 1916:1145))
\r t
\a hiResizeWindow(swindow(2) list(416:37 1916:1145))
\r t
\a hiResizeWindow(swindow(2) list(382:37 1916:1145))
\r t
\a hiResizeWindow(swindow(2) list(365:37 1916:1145))
\r t
\a hiResizeWindow(swindow(2) list(354:37 1916:1145))
\r t
\a hiResizeWindow(swindow(2) list(345:37 1916:1145))
\r t
\a hiResizeWindow(swindow(2) list(338:37 1916:1145))
\r t
\a hiResizeWindow(swindow(2) list(334:37 1916:1145))
\r t
\a hiResizeWindow(swindow(2) list(329:37 1916:1145))
\r t
\a hiResizeWindow(swindow(2) list(328:37 1916:1145))
\r t
\a hiResizeWindow(swindow(2) list(325:37 1916:1145))
\r t
\a hiResizeWindow(swindow(2) list(319:37 1916:1145))
\r t
\a hiResizeWindow(swindow(2) list(312:37 1916:1145))
\r t
\a hiResizeWindow(swindow(2) list(311:37 1916:1145))
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a leHiCreateVia()
\p > 
\a le0ViaForm->viaSingleModeScrollView->viaDefName->value="CONTACT_M1_ACTIVE"
\r "CONTACT_M1_ACTIVE"
\a mouseAddPt()
\i 22.8:61.5
\r t
\a mouseAddPt()
\i 17.7:61.5
\r t
\a mouseAddPt()
\i 12.6:61.5
\r t
\a mouseAddPt()
\i 7.8:61.5
\r t
\a mouseAddPt()
\i 3.3:61.5
\r t
\a mouseAddPt()
\i -1.5:61.5
\r t
\a cancelEnterFun()
\r t
\r nil
\a hiUndo()
\r t
\a hiUndo()
\r t
\a hiUndo()
\r t
\a hiUndo()
\r t
\a hiUndo()
\r t
\a hiUndo()
\r t
\a hiUndo()
\r t
\a hiRedo()
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a leHiSave()
\r t
\a geScroll(nil "s" nil)
\r t
\a hiZoomOutAtMouse()
\i 44.4:33.6
\r t
\a hiZoomInAtMouse()
\i 52.8:33.9
\r t
\a geScroll(nil "n" nil)
\r t
\a hiZoomOutAtMouse()
\i -24.3:56.1
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 12:45:47 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 12:45:47 2015
\o     completed ....Sat Jan 31 12:45:47 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a hiZoomInAtMouse()
\i 6.6:53.4
\r t
\a hiZoomInAtMouse()
\i 2.4:53.7
\r t
\a hiZoomInAtMouse()
\i -5.7:56.4
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -0.3:42.6
\r t
\a mouseAddPt()
\i -2.7:42.6
\r t
\a cancelEnterFun()
\r t
\r nil
\a hiZoomOutAtMouse()
\i -7.8:40.8
\r t
\a leHiStretch()
\p > 
\a cancelEnterFun(leStretchForm)
\r t
\r nil
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -25.5:48.9
\r t
\a mouseAddPt()
\i -25.2:48.9
\r t
\a cancelEnterFun()
\r t
\r nil
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 12:46:35 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 12:46:35 2015
\o     completed ....Sat Jan 31 12:46:35 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a leHiMove()
\p > 
\a mouseAddPt()
\i 18.3:52.5
\r t
\a mouseAddPt()
\i 18.3:52.2
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a mouseAddPt()
\i 18.3:53.4
\r t
\a mouseAddPt()
\i 18.3:53.1
\r t
\a cancelEnterFun()
\r t
\r nil
\a geScroll(nil "s" nil)
\r t
\a leiMouseToggleLayerSelectable(5)
\r t
\a leiMouseToggleLayerSelectable(7)
\r t
\a leHiCreateChoiceOfPin()
\p > 
\a lePinForm->termName->value="A"
\r "A"
\a lePinForm->termDirection->value= "input"
\r "input"
\a mouseAddPt()
\i 30:32.4
\r t
\a mouseAddPt()
\i 31.2:31.2
\r t
\a leiMouseSetEntryLayer(7)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a lePinForm->termName->value="A"
\r "A"
\a mouseAddPt()
\i 30:32.4
\r t
\a mouseAddPt()
\i 31.2:31.2
\r t
\a leHiCreateVia()
\r t
\a hiFormCancel(le0ViaForm) 
\r t
\a leHiEditDisplayOptions()
\p > 
\a leDisplayOptionsForm->options->dotsOn->value =  t
\r t
\a leDisplayOptionsForm->options->dotsOn->value =  nil
\r nil
\a hiFormDone(leDisplayOptionsForm)
\r t
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiCreateChoiceOfPin()
\p > 
\a lePinForm->termName->value="A"
\r "A"
\a mouseAddPt()
\i 30.3:31.8
\r t
\a mouseAddPt()
\i 30.9:31.5
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a mouseAddPt()
\i 30.3:31.8
\r t
\a mouseAddPt()
\i 30:32.4
\r t
\a mouseAddPt()
\i 30.3:31.8
\r t
\a mouseAddPt()
\i 30:31.8
\r t
\a mouseAddPt()
\i 30.9:31.5
\r t
\a mouseAddPt()
\i 31.2:31.2
\r t
\a mouseAddPt()
\i 30.9:31.5
\r t
\a mouseAddPt()
\i 30.9:31.2
\r t
\a cancelEnterFun()
\r t
\r nil
\a hiZoomInAtMouse()
\i 32.1:30.6
\r t
\a hiZoomInAtMouse()
\i 31.8:30.9
\r t
\a showClickInfo()
\i 30.9:31.5
\o 
\o metal1 drawing -> net: "A" height: 1.20  width: 1.20
\r window:3
\a leHiDelete()
\r t
\a showClickInfo()
\i 30.9:31.8
\r window:3
\a showClickInfo()
\i 30.9:31.5
\o 
\o metal2 drawing -> net: "A" height: 1.20  width: 1.20
\r window:3
\a leHiDelete()
\r t
\a leiMouseToggleLayerSelectable(5)
\r t
\a showClickInfo()
\i 30.6:31.5
\r window:3
\a showClickInfo()
\i 30.6:31.5
\o 
\o metal2 drawing -> net: "A" height: 1.20  width: 1.20
\r window:3
\a showClickInfo()
\i 30.6:31.5
\o 
\o metal1 drawing -> height: 2.40  width: 6.90
\r window:3
\a showClickInfo()
\i 30.6:31.5
\r window:3
\a hiZoomOutAtMouse()
\i 28.2:31.2
\r t
\a geScroll(nil "s" nil)
\r t
\a leHiEditDisplayOptions()
\p > 
\a leDisplayOptionsForm->options->dotsOn->value =  t
\r t
\a leDisplayOptionsForm->options->origins->value =  t
\r t
\a leDisplayOptionsForm->options->origins->value =  nil
\r nil
\a leDisplayOptionsForm->options->pins->value =  t
\r t
\a leDisplayOptionsForm->options->nets->value =  t
\r t
\a leDisplayOptionsForm->options->nets->value =  nil
\r nil
\a hiFormCancel(leDisplayOptionsForm)
\r t
\r nil
\a geScroll(nil "n" nil)
\r t
\a leHiCreatePath()
\p > 
\a cancelEnterFun(le0PathForm)
\r t
\r nil
\a leiMouseToggleLayerSelectable(5)
\r t
\a leHiCreateChoiceOfPin()
\p > 
\a lePinForm->createPinLabel->value= t
\r t
\a lePinForm->termName->value="A"
\r "A"
\a mouseAddPt()
\i 30:32.4
\r t
\a mouseAddPt()
\i 31.2:31.2
\r t
\a mouseAddPt()
\i 30.6:31.8
\r t
\a cancelEnterFun()
\r t
\r nil
\a hiZoomOutAtMouse()
\i 23.1:33.3
\r t
\a geScroll(nil "n" nil)
\r t
\a leHiCreateChoiceOfPin()
\p > 
\a lePinForm->termName->value="B"
\r "B"
\a mouseAddPt()
\i -15.6:43.2
\r t
\a mouseAddPt()
\i -14.4:42
\r t
\a mouseAddPt()
\i -15:42.6
\r t
\a lePinForm->termName->value="C"
\r "C"
\a mouseAddPt()
\i 3.6:37.2
\r t
\a mouseAddPt()
\i 4.8:36
\r t
\a mouseAddPt()
\i 4.2:36.6
\r t
\a cancelEnterFun()
\r t
\r nil
\a leiMouseSetEntryLayer(7)
\r t
\a leHiCreateRect()
\p > 
\a mouseAddPt()
\i 16.5:37.8
\r t
\a mouseAddPt()
\i 18.6:35.7
\r t
\a hiUndo()
\r t
\a cancelEnterFun(leRectForm)
\r t
\r nil
\a leHiCreateVia()
\p > 
\a le0ViaForm->viaSingleModeScrollView->viaDefName->value="VIA_M2_M1"
\r "VIA_M2_M1"
\a mouseAddPt()
\i 17.4:36.9
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiCreateChoiceOfPin()
\p > 
\a lePinForm->termName->value="OUT"
\r "OUT"
\a lePinForm->termDirection->value= "output"
\r "output"
\a mouseAddPt()
\i 16.8:37.5
\r t
\a mouseAddPt()
\i 18:36.3
\r t
\a mouseAddPt()
\i 19.5:36.9
\r t
\a cancelEnterFun()
\r t
\r nil
\a hiZoomOutAtMouse()
\i 17.7:36.3
\r t
\a hiZoomOutAtMouse()
\i 32.7:26.7
\r t
\a hiZoomInAtMouse()
\i 38.1:24.9
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 12:51:44 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 12:51:44 2015
\o     completed ....Sat Jan 31 12:51:44 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a leiMouseToggleLayerSelectable(7)
\r t
\a leiMouseSetEntryLayer(5)
\r t
\a leiMouseToggleLayerSelectable(5)
\r t
\a leHiCreateChoiceOfPin()
\p > 
\a lePinForm->termName->value="Vdd"
\r "Vdd"
\a lePinForm->termDirection->value= "input"
\r "input"
\a mouseAddPt()
\i 37.5:62.1
\r t
\a mouseAddPt()
\i 38.7:60.9
\r t
\a mouseAddPt()
\i 38.1:61.5
\r t
\a geScroll(nil "s" nil)
\r t
\a lePinForm->termName->value="gnd"
\r "gnd"
\a lePinForm->termDirection->value= "inputOutput"
\r "inputOutput"
\a mouseAddPt()
\i 32.4:8.1
\r t
\a mouseAddPt()
\i 33.6:6.9
\r t
\a mouseAddPt()
\i 33:7.8
\r t
\a geScroll(nil "n" nil)
\r t
\a cancelEnterFun(lePinForm)
\r t
\r nil
\a showClickInfo()
\i 38.4:61.2
\o 
\o CONTACT_M1_ACTIVE (instance "I3", library "AMI12")
\r window:3
\a leHiDelete()
\r t
\a showClickInfo()
\i 38.4:60.9
\o 
\o metal1 drawing -> net: "Vdd" height: 1.20  width: 1.20
\r window:3
\a leHiDelete()
\r t
\a leHiCopy()
\p > 
\a mouseAddPt()
\i 32.7:61.5
\r t
\a mouseAddPt()
\i 37.5:61.5
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiCreateChoiceOfPin()
\p > 
\a lePinForm->termName->value="vdd"
\r "vdd"
\a mouseAddPt()
\i 32.4:62.1
\r t
\a mouseAddPt()
\i 33.6:60.9
\r t
\a mouseAddPt()
\i 33:61.5
\r t
\a cancelEnterFun()
\r t
\r nil
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 12:54:13 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 12:54:13 2015
\o     completed ....Sat Jan 31 12:54:13 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a setExtForm()
\r nil
\a hiiSetCurrentForm('ivExtOptionsForm)
\r t
\a hiFormDone(ivExtOptionsForm)
\o 
\o Extraction started at Sat Jan 31 12:55:08 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaEXT.rul.
\o Inclusion limit is set to 1000.
\o Parsing drcExtractRules of "/auto/ee2/Cadence/local/designkits/BYU/lib/AMI12/divaEXT.rul"...
\o -----------------------------
\o BYU Extract 11-9-2001 Rev 3.1
\o -----------------------------
\o info: If short location check is desired later on, check the saveInterconnect
\o  statement for correctness:
\o  Interconnect layer nwell, pwell, npnEmitter, npnBaseTap not saved.
\o  Interconnect layers merged on save: elecRes, polyRes, nwellRes.
\o  Interconnect layers merged on save: cp, pDiffContact, nDiffContact, pOhmicContact, nOhmicContact, npnBaseContact, npnEmitterContact, npnCollectorContact, ce.
\o  Interconnect layers merged on save: pDiff, nDiff, pOhmic, nOhmic.
\o  Interconnect layers merged on save: nBulk, npnCollector.
\o  
\o Optimizing rules...
\o removing unused task: pBulk_ext = geomAnd(pBulk cap_id)
\o removing unused task: nBulk_ext = geomAnd(nBulk cap_id)
\o removing unused task: pNotOhmic_ext = geomAnd(pNotOhmic cap_id)
\o removing unused task: nNotOhmic_ext = geomAnd(nNotOhmic cap_id)
\o removing unused task: pOhmic_ext = geomAnd(pOhmic cap_id)
\o removing unused task: nOhmic_ext = geomAnd(nOhmic cap_id)
\o removing unused task: pDiff_ext = geomAnd(pDiff cap_id)
\o removing unused task: nDiff_ext = geomAnd(nDiff cap_id)
\o removing unused task: poly_ext = geomAnd(poly cap_id)
\o removing unused task: metal1_ext = geomAnd(metal1 cap_id)
\o removing unused task: metal2_ext = geomAnd(metal2 cap_id)
\o removing unused task: elec_ext = geomAnd(elec cap_id)
\o removing unused task: TransistorElec = geomOverlap(elec geomNot(poly))
\o removing unused task: cap_id = geomOr("cap_id")
\o removing unused task: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o removing unused task: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o Running layout Extraction analysis
\o flat mode
\o Full checking.
\o executing: nodrc = geomAndNot("nodrc" "nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: nolpe = geomOr("nolpe")
\o executing: res_id = geomOr("res_id")
\o executing: dio_id = geomOr("dio_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: ca = geomAnd(cc geomAndNot(geomAndNot(active poly) elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: nBulk = geomOr(nwell)
\o executing: pBulk = geomOr(pwell)
\o executing: nOhmic = geomAnd(nActive nwell)
\o executing: pOhmic = geomAnd(pActive pwell)
\o executing: nNotOhmic = geomAnd(nActive pwell)
\o executing: pNotOhmic = geomAnd(pActive nwell)
\o executing: nDiff = geomAndNot(nNotOhmic geomOr(poly elec))
\o executing: pDiff = geomAndNot(pNotOhmic geomOr(poly elec))
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: nElecChannel = geomOutside(geomAnd(nNotOhmic elec) poly)
\o executing: pElecChannel = geomOutside(geomAnd(pNotOhmic elec) poly)
\o executing: nElecChannelTran = geomButting(nElecChannel nDiff (keep == 2))
\o executing: pElecChannelTran = geomButting(pElecChannel pDiff (keep == 2))
\o executing: nChannelTran = geomButting(nChannel nDiff (keep == 2))
\o executing: pChannelTran = geomButting(pChannel pDiff (keep == 2))
\o executing: nDiffContact = geomAnd(ca nDiff)
\o executing: pDiffContact = geomAnd(ca pDiff)
\o executing: nOhmicContact = geomAnd(ca nOhmic)
\o executing: pOhmicContact = geomAnd(ca pOhmic)
\o executing: Gate = geomAnd(geomOr(nNotOhmic pNotOhmic) poly)
\o executing: fieldPoly = geomAvoiding(poly Gate)
\o executing: NPdiode = geomAnd(dio_id geomOutside(nNotOhmic poly))
\o executing: PNdiode = geomAnd(dio_id geomOutside(pNotOhmic poly))
\o executing: elecGate = geomAnd(geomOr(nNotOhmic pNotOhmic) elec)
\o executing: fieldElec = geomAvoiding(elec elecGate)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: npnTran = geomEnclose(nwell geomOr(npnCollector npnBase npnEmitter))
\o executing: fieldPoly = geomAndNot(fieldPoly res_id)
\o executing: poly = geomAndNot(poly res_id)
\o executing: polyRes = geomButting(geomAnd(res_id poly) fieldPoly (keep == 2))
\o executing: fieldElec = geomAndNot(fieldElec res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: elecRes = geomButting(geomAnd(res_id elec) fieldElec (keep == 2))
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: nwellRes = geomButting(geomAnd(res_id nwell) nBulk (keep == 2))
\o executing: geomConnect((via nOhmicContact nOhmic nwell nBulk metal1) (via pOhmicContact pOhmic ...
\o executing: extractMOS(nChannelTran (poly "G") (nDiff "S" "D") (pBulk "B") "nmos4 ivpcell BYU_LI...
\o For layer nChannelTran :
\o     5  shapes encountered.
\o     5  nmos4 ivpcell BYU_LIB devices well formed.
\o executing: saveProperty(nChannelTran "model" "ami12N")
\o executing: extractMOS(pChannelTran (poly "G") (pDiff "S" "D") (nBulk "B") "pmos4 ivpcell BYU_LI...
\o For layer pChannelTran :
\o     5  shapes encountered.
\o     5  pmos4 ivpcell BYU_LIB devices well formed.
\o executing: saveProperty(pChannelTran "model" "ami12P")
\o executing: extractMOS(nElecChannelTran (elec "G") (nDiff "S" "D") (pBulk "B") "nmos4_elec ivpce...
\o executing: saveProperty(nElecChannelTran "model" "ami12NE")
\o executing: extractMOS(pElecChannelTran (elec "G") (nDiff "S" "D") (nBulk "B") "pmos4_elec ivpce...
\o executing: saveProperty(pElecChannelTran "model" "ami12PE")
\o executing: nDiffArea = measureParasitic(area (nDiff not_over nolpe) 1e-12 figure)
\o executing: attachParasitic(nDiffArea ("as" "S") ("ad" "D") nChannelTran shared)
\o executing: pDiffArea = measureParasitic(area (pDiff not_over nolpe) 1e-12 figure)
\o executing: attachParasitic(pDiffArea ("as" "S") ("ad" "D") pChannelTran shared)
\o executing: attachParasitic(nDiffArea ("as" "S") ("ad" "D") nElecChannelTran shared)
\o executing: attachParasitic(pDiffArea ("as" "S") ("ad" "D") pElecChannelTran shared)
\o executing: nDiffPerimeter = measureParasitic(length (nDiff outside poly outside elec not_over n...
\o executing: attachParasitic(nDiffPerimeter ("ps" "S") ("pd" "D") nChannelTran shared)
\o executing: attachParasitic(nDiffPerimeter ("ps" "S") ("pd" "D") nElecChannelTran shared)
\o executing: pDiffPerimeter = measureParasitic(length (pDiff outside poly outside elec not_over n...
\o executing: attachParasitic(pDiffPerimeter ("ps" "S") ("pd" "D") pChannelTran shared)
\o executing: attachParasitic(pDiffPerimeter ("ps" "S") ("pd" "D") pElecChannelTran shared)
\o executing: extractDevice(npnTran (npnCollector "C") (npnBaseTap "B") (npnEmitter "E") "npn ivpc...
\o executing: saveProperty(npnTran "model" "Generic_NPN")
\o executing: extractDevice(polyRes (poly "PLUS" "MINUS") "res ivpcell BYU_LIB")
\o executing: extractDevice(elecRes (elec "PLUS" "MINUS") "res ivpcell BYU_LIB")
\o executing: extractDevice(nwellRes (nBulk "PLUS" "MINUS") "res ivpcell BYU_LIB")
\o executing: resWidth = measureParameter(length (polyRes butting poly) 1e-06)
\o            resPerim = measureParameter(perimeter polyRes 1e-06)
\o executing: resLength = calculateParameter(((resPerim - resWidth) / 2.0))
\o executing: fullCorners = measureParameter(bends_full polyRes)
\o executing: res = calculateParameter((sheetRes * ((resLength / (resWidth / 2.0)) - (fullCorners ...
\o executing: saveParameter(res "r")
\o executing: resWidth = measureParameter(length (elecRes butting elec) 1e-06)
\o            resPerim = measureParameter(perimeter elecRes 1e-06)
\o executing: resLength = calculateParameter(((resPerim - resWidth) / 2.0))
\o executing: fullCorners = measureParameter(bends_full elecRes)
\o executing: res = calculateParameter((sheetRes * ((resLength / (resWidth / 2.0)) - (fullCorners ...
\o executing: saveParameter(res "r")
\o executing: resWidth = measureParameter(length (nwellRes butting nBulk) 1e-06)
\o            resPerim = measureParameter(perimeter nwellRes 1e-06)
\o executing: resLength = calculateParameter(((resPerim - resWidth) / 2.0))
\o executing: fullCorners = measureParameter(bends_full nwellRes)
\o executing: res = calculateParameter((sheetRes * ((resLength / (resWidth / 2.0)) - (fullCorners ...
\o executing: saveParameter(res "r")
\o executing: extractDevice(CapacitorElec (elec "PLUS") (poly "MINUS") "cap ivpcell BYU_LIB")
\o executing: saveRecognition(CapacitorElec "electrode")
\o executing: capacitance = measureParameter(area CapacitorElec (1e-18 * areaCap))
\o executing: saveParameter(capacitance "c")
\o executing: extractDevice(NPdiode (pBulk "PLUS") (nDiff "MINUS") "diode ivpcell BYU_LIB")
\o executing: saveProperty(NPdiode "model" "ami12NP")
\o executing: extractDevice(PNdiode (pDiff "PLUS") (nBulk "MINUS") "diode ivpcell BYU_LIB")
\o executing: saveProperty(PNdiode "model" "ami12PN")
\o executing: saveRecognition(nChannelTran "poly")
\o executing: saveRecognition(pChannelTran "poly")
\o executing: saveRecognition(nElecChannelTran "electrode")
\o executing: saveRecognition(pElecChannelTran "electrode")
\o executing: saveInterconnect((elec "electrode"))
\o executing: saveInterconnect((ce "contact"))
\o executing: saveInterconnect((npnCollectorContact "contact"))
\o executing: saveInterconnect((npnCollector "nwell"))
\o executing: saveInterconnect((npnEmitterContact "contact"))
\o executing: saveInterconnect((npnBaseContact "contact"))
\o executing: saveInterconnect((npnBase "pbase"))
\o executing: saveInterconnect((nBulk "nwell"))
\o executing: saveInterconnect((pBulk "pwell"))
\o executing: saveInterconnect((nOhmic "active"))
\o executing: saveInterconnect((pOhmic "active"))
\o executing: saveInterconnect((nDiff "active"))
\o executing: saveInterconnect((pDiff "active"))
\o executing: saveInterconnect((poly "poly"))
\o executing: saveInterconnect((metal1 "metal1"))
\o executing: saveInterconnect((nOhmicContact "contact"))
\o executing: saveInterconnect((pOhmicContact "contact"))
\o executing: saveInterconnect((nDiffContact "contact"))
\o executing: saveInterconnect((pDiffContact "contact"))
\o executing: saveInterconnect((cp "contact"))
\o executing: saveInterconnect((metal2 "metal2"))
\o executing: saveInterconnect((via "via"))
\o executing: saveInterconnect((nwellRes "res_id"))
\o executing: saveInterconnect((polyRes "res_id"))
\o executing: saveInterconnect((elecRes "res_id"))
\o executing: saveDerived(metal1 ("metal1" "net") cell_view)
\o executing: saveDerived(metal2 ("metal2" "net") cell_view)
\o executing: saveDerived(via ("via" "net") cell_view)
\o Extraction started.......Sat Jan 31 12:55:08 2015
\o            completed ....Sat Jan 31 12:55:08 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\o saving rep MYLIB/minority/extracted
\r t
\a setLVSForm()
\r "         ivLVSEnvForm->rulesLibName->editable = ivLVSEnvForm->rulesLibButton->value         if( ivLVSEnvForm->rulesLibButton->value == t then             ddsSyncWithForm( ivLVSEnvForm 'libBrowse 'rulesLibName                                            'nil 'nil nil )         )"
\a ivLVSEnvForm->doNetlist->extracted->value = t 		ddsSyncWithForm( ivLVSEnvForm 'extBrowse 'extLibName 'extCellName 'extViewName nil)
\r t
\i ddsServSelect("MYLIB" "minority" "")
\i ddsServSelect("MYLIB" "minority" "extracted")
\a hiResizeWindow(window(6) list(17:25 462:553))
\r t
\a hiResizeWindow(window(6) list(18:25 463:553))
\r t
\a hiResizeWindow(window(6) list(21:25 466:553))
\r t
\a hiResizeWindow(window(6) list(23:25 468:553))
\r t
\a hiResizeWindow(window(6) list(24:37 469:565))
\r t
\a hiResizeWindow(window(6) list(26:37 471:565))
\r t
\a hiResizeWindow(window(6) list(28:37 473:565))
\r t
\a hiResizeWindow(window(6) list(29:37 474:565))
\r t
\a hiResizeWindow(window(6) list(32:37 477:565))
\r t
\a hiResizeWindow(window(6) list(34:37 479:565))
\r t
\a hiResizeWindow(window(6) list(35:37 480:565))
\r t
\a hiResizeWindow(window(6) list(37:37 482:565))
\r t
\a hiResizeWindow(window(6) list(40:37 485:565))
\r t
\a hiResizeWindow(window(6) list(42:37 487:565))
\r t
\a hiResizeWindow(window(6) list(43:53 488:581))
\r t
\a hiResizeWindow(window(6) list(45:55 490:583))
\r t
\a hiResizeWindow(window(6) list(47:56 492:584))
\r t
\a hiResizeWindow(window(6) list(48:57 493:585))
\r t
\a hiResizeWindow(window(6) list(51:59 496:587))
\r t
\a hiResizeWindow(window(6) list(53:61 498:589))
\r t
\a hiResizeWindow(window(6) list(54:61 499:589))
\r t
\a hiResizeWindow(window(6) list(55:62 500:590))
\r t
\a hiResizeWindow(window(6) list(56:62 501:590))
\r t
\a hiResizeWindow(window(6) list(57:63 502:591))
\r t
\a hiResizeWindow(window(6) list(58:64 503:592))
\r t
\a hiResizeWindow(window(6) list(59:65 504:593))
\r t
\a hiResizeWindow(window(6) list(60:66 505:594))
\r t
\a hiResizeWindow(window(6) list(61:67 506:595))
\r t
\a hiResizeWindow(window(6) list(62:67 507:595))
\r t
\a hiResizeWindow(window(6) list(64:69 509:597))
\r t
\a hiResizeWindow(window(6) list(66:70 511:598))
\r t
\a hiResizeWindow(window(6) list(67:71 512:599))
\r t
\a hiResizeWindow(window(6) list(68:72 513:600))
\r t
\a hiResizeWindow(window(6) list(69:73 514:601))
\r t
\a hiResizeWindow(window(6) list(70:74 515:602))
\r t
\a hiResizeWindow(window(6) list(72:75 517:603))
\r t
\a hiResizeWindow(window(6) list(73:76 518:604))
\r t
\a hiResizeWindow(window(6) list(74:77 519:605))
\r t
\a hiResizeWindow(window(6) list(75:78 520:606))
\r t
\a hiResizeWindow(window(6) list(77:79 522:607))
\r t
\a hiResizeWindow(window(6) list(79:81 524:609))
\r t
\a hiResizeWindow(window(6) list(80:82 525:610))
\r t
\a hiResizeWindow(window(6) list(81:83 526:611))
\r t
\a hiResizeWindow(window(6) list(83:84 528:612))
\r t
\a hiResizeWindow(window(6) list(85:86 530:614))
\r t
\a hiResizeWindow(window(6) list(86:87 531:615))
\r t
\a hiResizeWindow(window(6) list(87:88 532:616))
\r t
\a hiResizeWindow(window(6) list(88:89 533:617))
\r t
\a hiResizeWindow(window(6) list(90:90 535:618))
\r t
\a hiResizeWindow(window(6) list(92:92 537:620))
\r t
\a hiResizeWindow(window(6) list(93:92 538:620))
\r t
\a hiResizeWindow(window(6) list(95:94 540:622))
\r t
\a hiResizeWindow(window(6) list(96:95 541:623))
\r t
\a hiResizeWindow(window(6) list(98:96 543:624))
\r t
\a hiResizeWindow(window(6) list(99:97 544:625))
\r t
\a hiResizeWindow(window(6) list(101:98 546:626))
\r t
\a hiResizeWindow(window(6) list(102:99 547:627))
\r t
\a hiResizeWindow(window(6) list(104:100 549:628))
\r t
\a hiResizeWindow(window(6) list(105:101 550:629))
\r t
\a hiResizeWindow(window(6) list(106:102 551:630))
\r t
\a ivLVSRun()
\o Loading seCore.cxt 
\p > 
\a hiiSetCurrentForm('simSaveAllForm)
\r t
\a hiFormDone(simSaveAllForm)
\r t
\o LVS job is now started...
\r nil
\o The LVS job has completed. The net-lists failed to match.
\o 
\o Run Directory: /auto/fsg/lhsiao/cadence/LVS
\p > 
\a hiDBoxOK(ivDBox)
\r t
\a showClickInfo()
\i 33.3:7.8
\o 
\o CONTACT_M1_ACTIVE (instance "I5", library "AMI12")
\r window:3
\a _lxHiMousePopUp()
\r t
\a hiPopupDown(lePopUpMenu)
\r t
\a leHiCreateInst()
\p > 
\a cancelEnterFun(leCreateInstForm)
\r t
\r nil
\a showClickInfo()
\i 32.7:7.2
\o 
\o metal1 drawing -> net: "gnd" height: 1.20  width: 1.20
\r window:3
\a leHiDelete()
\r t
\a leHiCreateChoiceOfPin()
\p > 
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a lePinForm->termName->value="vdd!"
\r "vdd!"
\a mouseAddPt()
\i 37.5:62.1
\r t
\a mouseAddPt()
\i 38.4:60.9
\r t
\a mouseAddPt()
\i 38.1:61.5
\r t
\a cancelEnterFun()
\r t
\r nil
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a hiZoomInAtMouse()
\i 39:60.9
\r t
\a hiZoomInAtMouse()
\i 38.1:61.2
\r t
\a leHiStretch()
\p > 
\a mouseAddPt()
\i 37.5:61.8
\r t
\a mouseAddPt()
\i 37.2:61.8
\r t
\a cancelEnterFun()
\r t
\r nil
\a showClickInfo()
\i 33.6:61.8
\o 
\o metal1 drawing -> net: "vdd" height: 1.20  width: 1.20
\r window:3
\a leHiDelete()
\r t
\a hiZoomOutAtMouse()
\i 34.2:61.8
\r t
\a hiZoomOutAtMouse()
\i 34.2:61.2
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a leHiCreateChoiceOfPin()
\p > 
\a lePinForm->termName->value="gnd!"
\r "gnd!"
\a mouseAddPt()
\i 37.5:8.1
\r t
\a mouseAddPt()
\i 38.7:6.9
\r t
\a mouseAddPt()
\i 38.1:7.5
\r t
\a hiiToggleEnterForm(lePinForm)
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiSave()
\r t
\a setExtForm()
\r nil
\a hiiSetCurrentForm('ivExtOptionsForm)
\r t
\a hiFormDone(ivExtOptionsForm)
\o 
\o Extraction started at Sat Jan 31 13:00:08 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaEXT.rul.
\o Inclusion limit is set to 1000.
\o Running layout Extraction analysis
\o flat mode
\o Full checking.
\o executing: nodrc = geomAndNot("nodrc" "nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: nolpe = geomOr("nolpe")
\o executing: res_id = geomOr("res_id")
\o executing: dio_id = geomOr("dio_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: ca = geomAnd(cc geomAndNot(geomAndNot(active poly) elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: nBulk = geomOr(nwell)
\o executing: pBulk = geomOr(pwell)
\o executing: nOhmic = geomAnd(nActive nwell)
\o executing: pOhmic = geomAnd(pActive pwell)
\o executing: nNotOhmic = geomAnd(nActive pwell)
\o executing: pNotOhmic = geomAnd(pActive nwell)
\o executing: nDiff = geomAndNot(nNotOhmic geomOr(poly elec))
\o executing: pDiff = geomAndNot(pNotOhmic geomOr(poly elec))
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: nElecChannel = geomOutside(geomAnd(nNotOhmic elec) poly)
\o executing: pElecChannel = geomOutside(geomAnd(pNotOhmic elec) poly)
\o executing: nElecChannelTran = geomButting(nElecChannel nDiff (keep == 2))
\o executing: pElecChannelTran = geomButting(pElecChannel pDiff (keep == 2))
\o executing: nChannelTran = geomButting(nChannel nDiff (keep == 2))
\o executing: pChannelTran = geomButting(pChannel pDiff (keep == 2))
\o executing: nDiffContact = geomAnd(ca nDiff)
\o executing: pDiffContact = geomAnd(ca pDiff)
\o executing: nOhmicContact = geomAnd(ca nOhmic)
\o executing: pOhmicContact = geomAnd(ca pOhmic)
\o executing: Gate = geomAnd(geomOr(nNotOhmic pNotOhmic) poly)
\o executing: fieldPoly = geomAvoiding(poly Gate)
\o executing: NPdiode = geomAnd(dio_id geomOutside(nNotOhmic poly))
\o executing: PNdiode = geomAnd(dio_id geomOutside(pNotOhmic poly))
\o executing: elecGate = geomAnd(geomOr(nNotOhmic pNotOhmic) elec)
\o executing: fieldElec = geomAvoiding(elec elecGate)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: npnTran = geomEnclose(nwell geomOr(npnCollector npnBase npnEmitter))
\o executing: fieldPoly = geomAndNot(fieldPoly res_id)
\o executing: poly = geomAndNot(poly res_id)
\o executing: polyRes = geomButting(geomAnd(res_id poly) fieldPoly (keep == 2))
\o executing: fieldElec = geomAndNot(fieldElec res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: elecRes = geomButting(geomAnd(res_id elec) fieldElec (keep == 2))
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: nwellRes = geomButting(geomAnd(res_id nwell) nBulk (keep == 2))
\o executing: geomConnect((via nOhmicContact nOhmic nwell nBulk metal1) (via pOhmicContact pOhmic ...
\o executing: extractMOS(nChannelTran (poly "G") (nDiff "S" "D") (pBulk "B") "nmos4 ivpcell BYU_LI...
\o For layer nChannelTran :
\o     5  shapes encountered.
\o     5  nmos4 ivpcell BYU_LIB devices well formed.
\o executing: saveProperty(nChannelTran "model" "ami12N")
\o executing: extractMOS(pChannelTran (poly "G") (pDiff "S" "D") (nBulk "B") "pmos4 ivpcell BYU_LI...
\o For layer pChannelTran :
\o     5  shapes encountered.
\o     5  pmos4 ivpcell BYU_LIB devices well formed.
\o executing: saveProperty(pChannelTran "model" "ami12P")
\o executing: extractMOS(nElecChannelTran (elec "G") (nDiff "S" "D") (pBulk "B") "nmos4_elec ivpce...
\o executing: saveProperty(nElecChannelTran "model" "ami12NE")
\o executing: extractMOS(pElecChannelTran (elec "G") (nDiff "S" "D") (nBulk "B") "pmos4_elec ivpce...
\o executing: saveProperty(pElecChannelTran "model" "ami12PE")
\o executing: nDiffArea = measureParasitic(area (nDiff not_over nolpe) 1e-12 figure)
\o executing: attachParasitic(nDiffArea ("as" "S") ("ad" "D") nChannelTran shared)
\o executing: pDiffArea = measureParasitic(area (pDiff not_over nolpe) 1e-12 figure)
\o executing: attachParasitic(pDiffArea ("as" "S") ("ad" "D") pChannelTran shared)
\o executing: attachParasitic(nDiffArea ("as" "S") ("ad" "D") nElecChannelTran shared)
\o executing: attachParasitic(pDiffArea ("as" "S") ("ad" "D") pElecChannelTran shared)
\o executing: nDiffPerimeter = measureParasitic(length (nDiff outside poly outside elec not_over n...
\o executing: attachParasitic(nDiffPerimeter ("ps" "S") ("pd" "D") nChannelTran shared)
\o executing: attachParasitic(nDiffPerimeter ("ps" "S") ("pd" "D") nElecChannelTran shared)
\o executing: pDiffPerimeter = measureParasitic(length (pDiff outside poly outside elec not_over n...
\o executing: attachParasitic(pDiffPerimeter ("ps" "S") ("pd" "D") pChannelTran shared)
\o executing: attachParasitic(pDiffPerimeter ("ps" "S") ("pd" "D") pElecChannelTran shared)
\o executing: extractDevice(npnTran (npnCollector "C") (npnBaseTap "B") (npnEmitter "E") "npn ivpc...
\o executing: saveProperty(npnTran "model" "Generic_NPN")
\o executing: extractDevice(polyRes (poly "PLUS" "MINUS") "res ivpcell BYU_LIB")
\o executing: extractDevice(elecRes (elec "PLUS" "MINUS") "res ivpcell BYU_LIB")
\o executing: extractDevice(nwellRes (nBulk "PLUS" "MINUS") "res ivpcell BYU_LIB")
\o executing: resWidth = measureParameter(length (polyRes butting poly) 1e-06)
\o            resPerim = measureParameter(perimeter polyRes 1e-06)
\o executing: resLength = calculateParameter(((resPerim - resWidth) / 2.0))
\o executing: fullCorners = measureParameter(bends_full polyRes)
\o executing: res = calculateParameter((sheetRes * ((resLength / (resWidth / 2.0)) - (fullCorners ...
\o executing: saveParameter(res "r")
\o executing: resWidth = measureParameter(length (elecRes butting elec) 1e-06)
\o            resPerim = measureParameter(perimeter elecRes 1e-06)
\o executing: resLength = calculateParameter(((resPerim - resWidth) / 2.0))
\o executing: fullCorners = measureParameter(bends_full elecRes)
\o executing: res = calculateParameter((sheetRes * ((resLength / (resWidth / 2.0)) - (fullCorners ...
\o executing: saveParameter(res "r")
\o executing: resWidth = measureParameter(length (nwellRes butting nBulk) 1e-06)
\o            resPerim = measureParameter(perimeter nwellRes 1e-06)
\o executing: resLength = calculateParameter(((resPerim - resWidth) / 2.0))
\o executing: fullCorners = measureParameter(bends_full nwellRes)
\o executing: res = calculateParameter((sheetRes * ((resLength / (resWidth / 2.0)) - (fullCorners ...
\o executing: saveParameter(res "r")
\o executing: extractDevice(CapacitorElec (elec "PLUS") (poly "MINUS") "cap ivpcell BYU_LIB")
\o executing: saveRecognition(CapacitorElec "electrode")
\o executing: capacitance = measureParameter(area CapacitorElec (1e-18 * areaCap))
\o executing: saveParameter(capacitance "c")
\o executing: extractDevice(NPdiode (pBulk "PLUS") (nDiff "MINUS") "diode ivpcell BYU_LIB")
\o executing: saveProperty(NPdiode "model" "ami12NP")
\o executing: extractDevice(PNdiode (pDiff "PLUS") (nBulk "MINUS") "diode ivpcell BYU_LIB")
\o executing: saveProperty(PNdiode "model" "ami12PN")
\o executing: saveRecognition(nChannelTran "poly")
\o executing: saveRecognition(pChannelTran "poly")
\o executing: saveRecognition(nElecChannelTran "electrode")
\o executing: saveRecognition(pElecChannelTran "electrode")
\o executing: saveInterconnect((elec "electrode"))
\o executing: saveInterconnect((ce "contact"))
\o executing: saveInterconnect((npnCollectorContact "contact"))
\o executing: saveInterconnect((npnCollector "nwell"))
\o executing: saveInterconnect((npnEmitterContact "contact"))
\o executing: saveInterconnect((npnBaseContact "contact"))
\o executing: saveInterconnect((npnBase "pbase"))
\o executing: saveInterconnect((nBulk "nwell"))
\o executing: saveInterconnect((pBulk "pwell"))
\o executing: saveInterconnect((nOhmic "active"))
\o executing: saveInterconnect((pOhmic "active"))
\o executing: saveInterconnect((nDiff "active"))
\o executing: saveInterconnect((pDiff "active"))
\o executing: saveInterconnect((poly "poly"))
\o executing: saveInterconnect((metal1 "metal1"))
\o executing: saveInterconnect((nOhmicContact "contact"))
\o executing: saveInterconnect((pOhmicContact "contact"))
\o executing: saveInterconnect((nDiffContact "contact"))
\o executing: saveInterconnect((pDiffContact "contact"))
\o executing: saveInterconnect((cp "contact"))
\o executing: saveInterconnect((metal2 "metal2"))
\o executing: saveInterconnect((via "via"))
\o executing: saveInterconnect((nwellRes "res_id"))
\o executing: saveInterconnect((polyRes "res_id"))
\o executing: saveInterconnect((elecRes "res_id"))
\o executing: saveDerived(metal1 ("metal1" "net") cell_view)
\o executing: saveDerived(metal2 ("metal2" "net") cell_view)
\o executing: saveDerived(via ("via" "net") cell_view)
\o Extraction started.......Sat Jan 31 13:00:08 2015
\o            completed ....Sat Jan 31 13:00:08 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\o saving rep MYLIB/minority/extracted
\r t
\a setLVSForm()
\r "         ivLVSEnvForm->rulesLibName->editable = ivLVSEnvForm->rulesLibButton->value         if( ivLVSEnvForm->rulesLibButton->value == t then             ddsSyncWithForm( ivLVSEnvForm 'libBrowse 'rulesLibName                                            'nil 'nil nil )         )"
\a ivLVSRun()
\o LVS job is now started...
\r nil
\o The LVS job has completed. The net-lists match logically but have mismatched parameters.
\o 
\o Run Directory: /auto/fsg/lhsiao/cadence/LVS
\p > 
\a hiDBoxOK(ivDBox)
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:00:54 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:00:54 2015
\o     completed ....Sat Jan 31 13:00:54 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a showClickInfo()
\i 36.3:-12.9
\r window:3
\a setLVSForm()
\r "         ivLVSEnvForm->rulesLibName->editable = ivLVSEnvForm->rulesLibButton->value         if( ivLVSEnvForm->rulesLibButton->value == t then             ddsSyncWithForm( ivLVSEnvForm 'libBrowse 'rulesLibName                                            'nil 'nil nil )         )"
\a ivLVSErrorDisplayCB()
\p > 
\a hiiSetCurrentForm('ivLVSDisplayErrorForm)
\r t
\a iviLVSErrorDisplayCB( 'first )
\w *WARNING* Window does not match LVS Run. The current LVS Run is
\w library 'MYLIB', cell 'minority', view 'extracted' and
\w library 'MYLIB', cell 'minority', view 'schematic'.
\p > 
\a hiDBoxOK(ivDBox)
\r t
\r nil
\a iviLVSErrorDisplayCB( 'first )
\w *WARNING* Window does not match LVS Run. The current LVS Run is
\w library 'MYLIB', cell 'minority', view 'extracted' and
\w library 'MYLIB', cell 'minority', view 'schematic'.
\p > 
\a hiDBoxOK(ivDBox)
\r t
\r nil
\a hiSetCurrentWindow(window(2))
\r t
\a showClickInfo()
\i 1.25:1.875
\r window:2
\a iviLVSErrorDisplayCB( 'first )
\o Loading LVS Error Data
\o LVS Error Data Loaded
\r nil
\a geScroll(nil "s" nil)
\r t
\a hiSetCurrentWindow(window(3))
\r t
\a showClickInfo()
\i 23.4:-10.2
\r window:3
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a hiFormCancel(ivLVSDisplayErrorForm) 
\r t
\r nil
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a leSelBoxOrStretch()
\i -31.2:49.8
\i -31.2:49.8
\p > 
\a addPoint(hiGetCommandPoint())
\i 43.8:27.3
\r t
\r t
\a geScroll(nil "s" nil)
\r t
\a leHiMove()
\p > 
\a mouseAddPt()
\i 2.4:37.8
\r t
\a mouseAddPt()
\i 2.4:40.2
\r t
\r t
\a showClickInfo()
\i -8.1:41.4
\r window:3
\a leHiMove()
\p > 
\a mouseAddPt()
\i -12.9:42
\r t
\a geSingleSelectBox()
\i -13.5:42
\p > 
\a addPoint(hiGetCommandPoint())
\i 13.5:36
\r t
\r t
\a leHiMove()
\r t
\a geSingleSelectBox()
\i -15:42
\p > 
\a addPoint(hiGetCommandPoint())
\i 12.9:35.4
\r t
\r t
\a mouseAddPt()
\i 8.1:39
\r t
\a mouseAddPt()
\i 8.1:35.1
\r t
\a leHiMove()
\r t
\a geSingleSelectBox()
\i 22.5:36.3
\p > 
\a addPoint(hiGetCommandPoint())
\i 34.8:32.4
\r t
\r t
\a mouseAddPt()
\i 25.8:35.4
\r t
\a mouseAddPt()
\i 25.8:36.3
\r t
\a leHiMove()
\r t
\a mouseAddPt()
\i -21:47.4
\r t
\a geSingleSelectBox()
\i -21.3:47.4
\p > 
\a addPoint(hiGetCommandPoint())
\i 2.4:41.4
\r t
\r t
\a mouseAddPt()
\i -5.1:44.1
\r t
\a mouseAddPt()
\i -5.1:37.8
\r t
\a cancelEnterFun()
\r t
\r nil
\a geScroll(nil "n" nil)
\r t
\a showClickInfo()
\i -9.6:48.9
\o 
\o metal1 drawing -> height: 1.80  width: 18.90
\r window:3
\a leHiMove()
\p > 
\a mouseAddPt()
\i -9.6:48.9
\r t
\a mouseAddPt()
\i -9.9:41.7
\r t
\r t
\a showClickInfo()
\i -23.7:47.7
\o 
\o metal1 drawing -> height: 6.90  width: 2.40
\r window:3
\a leHiStretch()
\p > 
\a cancelEnterFun(leStretchForm)
\r t
\r nil
\a showClickInfo()
\i -33.6:49.5
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -23.7:46.2
\r t
\a mouseAddPt()
\i -24.3:41.4
\r t
\a mouseAddPt()
\i -5.4:48
\r t
\a mouseAddPt()
\i -5.7:43.5
\r t
\a leHiStretch()
\r t
\a mouseAddPt()
\i -14.1:50.4
\r t
\a leiMouseToggleLayerSelectable(5)
\r t
\a leiMouseToggleLayerSelectable(1)
\r t
\a mouseAddPt()
\i -20.1:50.1
\r t
\a mouseAddPt()
\i -20.1:48
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiCreateRuler()
\p > 
\a mouseAddPt()
\i -13.2:53.4
\r t
\a cancelEnterFun()
\r t
\r nil
\a hiZoomInAtMouse()
\i -9:42.6
\r t
\a showClickInfo()
\i -23.4:44.4
\r window:3
\a leHiStretch()
\p > 
\a cancelEnterFun(leStretchForm)
\r t
\r nil
\a leiMouseToggleLayerSelectable(1)
\r t
\a leiMouseToggleLayerSelectable(5)
\r t
\a showClickInfo()
\i -26.1:42
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -24:41.4
\r t
\a mouseAddPt()
\i -23.7:45.3
\r t
\a mouseAddPt()
\i -4.8:43.5
\r t
\a mouseAddPt()
\i -5.1:46.5
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiMove()
\p > 
\a mouseAddPt()
\i -9:42.6
\r t
\a mouseAddPt()
\i -9:46.5
\r t
\a cancelEnterFun()
\r t
\r nil
\a showClickInfo()
\i -4.8:47.7
\o 
\o metal1 drawing -> height: 10.50  width: 3.00
\r window:3
\a showClickInfo()
\i -9:47.7
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -6:46.8
\w *WARNING* (LE-104010): All selected points are locked. No wires can be stretched.
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -6:46.5
\r t
\a mouseAddPt()
\i -6:47.1
\r t
\a cancelEnterFun()
\r t
\r nil
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:05:28 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:05:28 2015
\o     completed ....Sat Jan 31 13:05:28 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********  Summary of rule violations for cell "minority layout"  *********
\o  # errors  Violated Rules
\o         1  (SCMOS Rule 7.2) metal1 spacing: 3 lambda (1.80 um)
\o         1  Total errors found
\o 
\r t
\a leHiMove()
\p > 
\a mouseAddPt()
\i -22.5:41.7
\r t
\a geSingleSelectBox()
\i -24:41.4
\p > 
\a addPoint(hiGetCommandPoint())
\i 2.1:36.6
\r t
\r t
\a mouseAddPt()
\i -2.4:39
\r t
\a mouseAddPt()
\i -2.1:41.4
\r t
\a cancelEnterFun()
\r t
\r nil
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:05:39 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:05:39 2015
\o     completed ....Sat Jan 31 13:05:39 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a hiZoomOutAtMouse()
\i 5.1:42.9
\r t
\a geScroll(nil "s" nil)
\r t
\a setExtForm()
\r nil
\a hiiSetCurrentForm('ivExtOptionsForm)
\r t
\a hiFormDone(ivExtOptionsForm)
\o 
\o Extraction started at Sat Jan 31 13:05:52 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaEXT.rul.
\o Inclusion limit is set to 1000.
\o Running layout Extraction analysis
\o flat mode
\o Full checking.
\o executing: nodrc = geomAndNot("nodrc" "nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: nolpe = geomOr("nolpe")
\o executing: res_id = geomOr("res_id")
\o executing: dio_id = geomOr("dio_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: ca = geomAnd(cc geomAndNot(geomAndNot(active poly) elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: nBulk = geomOr(nwell)
\o executing: pBulk = geomOr(pwell)
\o executing: nOhmic = geomAnd(nActive nwell)
\o executing: pOhmic = geomAnd(pActive pwell)
\o executing: nNotOhmic = geomAnd(nActive pwell)
\o executing: pNotOhmic = geomAnd(pActive nwell)
\o executing: nDiff = geomAndNot(nNotOhmic geomOr(poly elec))
\o executing: pDiff = geomAndNot(pNotOhmic geomOr(poly elec))
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: nElecChannel = geomOutside(geomAnd(nNotOhmic elec) poly)
\o executing: pElecChannel = geomOutside(geomAnd(pNotOhmic elec) poly)
\o executing: nElecChannelTran = geomButting(nElecChannel nDiff (keep == 2))
\o executing: pElecChannelTran = geomButting(pElecChannel pDiff (keep == 2))
\o executing: nChannelTran = geomButting(nChannel nDiff (keep == 2))
\o executing: pChannelTran = geomButting(pChannel pDiff (keep == 2))
\o executing: nDiffContact = geomAnd(ca nDiff)
\o executing: pDiffContact = geomAnd(ca pDiff)
\o executing: nOhmicContact = geomAnd(ca nOhmic)
\o executing: pOhmicContact = geomAnd(ca pOhmic)
\o executing: Gate = geomAnd(geomOr(nNotOhmic pNotOhmic) poly)
\o executing: fieldPoly = geomAvoiding(poly Gate)
\o executing: NPdiode = geomAnd(dio_id geomOutside(nNotOhmic poly))
\o executing: PNdiode = geomAnd(dio_id geomOutside(pNotOhmic poly))
\o executing: elecGate = geomAnd(geomOr(nNotOhmic pNotOhmic) elec)
\o executing: fieldElec = geomAvoiding(elec elecGate)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: npnTran = geomEnclose(nwell geomOr(npnCollector npnBase npnEmitter))
\o executing: fieldPoly = geomAndNot(fieldPoly res_id)
\o executing: poly = geomAndNot(poly res_id)
\o executing: polyRes = geomButting(geomAnd(res_id poly) fieldPoly (keep == 2))
\o executing: fieldElec = geomAndNot(fieldElec res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: elecRes = geomButting(geomAnd(res_id elec) fieldElec (keep == 2))
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: nwellRes = geomButting(geomAnd(res_id nwell) nBulk (keep == 2))
\o executing: geomConnect((via nOhmicContact nOhmic nwell nBulk metal1) (via pOhmicContact pOhmic ...
\o executing: extractMOS(nChannelTran (poly "G") (nDiff "S" "D") (pBulk "B") "nmos4 ivpcell BYU_LI...
\o For layer nChannelTran :
\o     5  shapes encountered.
\o     5  nmos4 ivpcell BYU_LIB devices well formed.
\o executing: saveProperty(nChannelTran "model" "ami12N")
\o executing: extractMOS(pChannelTran (poly "G") (pDiff "S" "D") (nBulk "B") "pmos4 ivpcell BYU_LI...
\o For layer pChannelTran :
\o     5  shapes encountered.
\o     5  pmos4 ivpcell BYU_LIB devices well formed.
\o executing: saveProperty(pChannelTran "model" "ami12P")
\o executing: extractMOS(nElecChannelTran (elec "G") (nDiff "S" "D") (pBulk "B") "nmos4_elec ivpce...
\o executing: saveProperty(nElecChannelTran "model" "ami12NE")
\o executing: extractMOS(pElecChannelTran (elec "G") (nDiff "S" "D") (nBulk "B") "pmos4_elec ivpce...
\o executing: saveProperty(pElecChannelTran "model" "ami12PE")
\o executing: nDiffArea = measureParasitic(area (nDiff not_over nolpe) 1e-12 figure)
\o executing: attachParasitic(nDiffArea ("as" "S") ("ad" "D") nChannelTran shared)
\o executing: pDiffArea = measureParasitic(area (pDiff not_over nolpe) 1e-12 figure)
\o executing: attachParasitic(pDiffArea ("as" "S") ("ad" "D") pChannelTran shared)
\o executing: attachParasitic(nDiffArea ("as" "S") ("ad" "D") nElecChannelTran shared)
\o executing: attachParasitic(pDiffArea ("as" "S") ("ad" "D") pElecChannelTran shared)
\o executing: nDiffPerimeter = measureParasitic(length (nDiff outside poly outside elec not_over n...
\o executing: attachParasitic(nDiffPerimeter ("ps" "S") ("pd" "D") nChannelTran shared)
\o executing: attachParasitic(nDiffPerimeter ("ps" "S") ("pd" "D") nElecChannelTran shared)
\o executing: pDiffPerimeter = measureParasitic(length (pDiff outside poly outside elec not_over n...
\o executing: attachParasitic(pDiffPerimeter ("ps" "S") ("pd" "D") pChannelTran shared)
\o executing: attachParasitic(pDiffPerimeter ("ps" "S") ("pd" "D") pElecChannelTran shared)
\o executing: extractDevice(npnTran (npnCollector "C") (npnBaseTap "B") (npnEmitter "E") "npn ivpc...
\o executing: saveProperty(npnTran "model" "Generic_NPN")
\o executing: extractDevice(polyRes (poly "PLUS" "MINUS") "res ivpcell BYU_LIB")
\o executing: extractDevice(elecRes (elec "PLUS" "MINUS") "res ivpcell BYU_LIB")
\o executing: extractDevice(nwellRes (nBulk "PLUS" "MINUS") "res ivpcell BYU_LIB")
\o executing: resWidth = measureParameter(length (polyRes butting poly) 1e-06)
\o            resPerim = measureParameter(perimeter polyRes 1e-06)
\o executing: resLength = calculateParameter(((resPerim - resWidth) / 2.0))
\o executing: fullCorners = measureParameter(bends_full polyRes)
\o executing: res = calculateParameter((sheetRes * ((resLength / (resWidth / 2.0)) - (fullCorners ...
\o executing: saveParameter(res "r")
\o executing: resWidth = measureParameter(length (elecRes butting elec) 1e-06)
\o            resPerim = measureParameter(perimeter elecRes 1e-06)
\o executing: resLength = calculateParameter(((resPerim - resWidth) / 2.0))
\o executing: fullCorners = measureParameter(bends_full elecRes)
\o executing: res = calculateParameter((sheetRes * ((resLength / (resWidth / 2.0)) - (fullCorners ...
\o executing: saveParameter(res "r")
\o executing: resWidth = measureParameter(length (nwellRes butting nBulk) 1e-06)
\o            resPerim = measureParameter(perimeter nwellRes 1e-06)
\o executing: resLength = calculateParameter(((resPerim - resWidth) / 2.0))
\o executing: fullCorners = measureParameter(bends_full nwellRes)
\o executing: res = calculateParameter((sheetRes * ((resLength / (resWidth / 2.0)) - (fullCorners ...
\o executing: saveParameter(res "r")
\o executing: extractDevice(CapacitorElec (elec "PLUS") (poly "MINUS") "cap ivpcell BYU_LIB")
\o executing: saveRecognition(CapacitorElec "electrode")
\o executing: capacitance = measureParameter(area CapacitorElec (1e-18 * areaCap))
\o executing: saveParameter(capacitance "c")
\o executing: extractDevice(NPdiode (pBulk "PLUS") (nDiff "MINUS") "diode ivpcell BYU_LIB")
\o executing: saveProperty(NPdiode "model" "ami12NP")
\o executing: extractDevice(PNdiode (pDiff "PLUS") (nBulk "MINUS") "diode ivpcell BYU_LIB")
\o executing: saveProperty(PNdiode "model" "ami12PN")
\o executing: saveRecognition(nChannelTran "poly")
\o executing: saveRecognition(pChannelTran "poly")
\o executing: saveRecognition(nElecChannelTran "electrode")
\o executing: saveRecognition(pElecChannelTran "electrode")
\o executing: saveInterconnect((elec "electrode"))
\o executing: saveInterconnect((ce "contact"))
\o executing: saveInterconnect((npnCollectorContact "contact"))
\o executing: saveInterconnect((npnCollector "nwell"))
\o executing: saveInterconnect((npnEmitterContact "contact"))
\o executing: saveInterconnect((npnBaseContact "contact"))
\o executing: saveInterconnect((npnBase "pbase"))
\o executing: saveInterconnect((nBulk "nwell"))
\o executing: saveInterconnect((pBulk "pwell"))
\o executing: saveInterconnect((nOhmic "active"))
\o executing: saveInterconnect((pOhmic "active"))
\o executing: saveInterconnect((nDiff "active"))
\o executing: saveInterconnect((pDiff "active"))
\o executing: saveInterconnect((poly "poly"))
\o executing: saveInterconnect((metal1 "metal1"))
\o executing: saveInterconnect((nOhmicContact "contact"))
\o executing: saveInterconnect((pOhmicContact "contact"))
\o executing: saveInterconnect((nDiffContact "contact"))
\o executing: saveInterconnect((pDiffContact "contact"))
\o executing: saveInterconnect((cp "contact"))
\o executing: saveInterconnect((metal2 "metal2"))
\o executing: saveInterconnect((via "via"))
\o executing: saveInterconnect((nwellRes "res_id"))
\o executing: saveInterconnect((polyRes "res_id"))
\o executing: saveInterconnect((elecRes "res_id"))
\o executing: saveDerived(metal1 ("metal1" "net") cell_view)
\o executing: saveDerived(metal2 ("metal2" "net") cell_view)
\o executing: saveDerived(via ("via" "net") cell_view)
\o Extraction started.......Sat Jan 31 13:05:52 2015
\o            completed ....Sat Jan 31 13:05:52 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\o saving rep MYLIB/minority/extracted
\r t
\a setLVSForm()
\r "         ivLVSEnvForm->rulesLibName->editable = ivLVSEnvForm->rulesLibButton->value         if( ivLVSEnvForm->rulesLibButton->value == t then             ddsSyncWithForm( ivLVSEnvForm 'libBrowse 'rulesLibName                                            'nil 'nil nil )         )"
\a ivLVSRun()
\p > 
\a hiiSetCurrentForm('simSaveAllForm)
\r t
\a hiFormDone(simSaveAllForm)
\r t
\o LVS job is now started...
\r nil
\o The LVS job has completed. The net-lists match logically but have mismatched parameters.
\o 
\o Run Directory: /auto/fsg/lhsiao/cadence/LVS
\p > 
\a hiDBoxOK(ivDBox)
\r t
\a setLVSForm()
\r "         ivLVSEnvForm->rulesLibName->editable = ivLVSEnvForm->rulesLibButton->value         if( ivLVSEnvForm->rulesLibButton->value == t then             ddsSyncWithForm( ivLVSEnvForm 'libBrowse 'rulesLibName                                            'nil 'nil nil )         )"
\a ivLVSErrorDisplayCB()
\p > 
\a hiSetCurrentWindow(window(2))
\r t
\a showClickInfo()
\i 1.8125:0.875
\r window:2
\a hiiSetCurrentForm('ivLVSDisplayErrorForm)
\r t
\a iviLVSErrorDisplayCB( 'first )
\o Loading LVS Error Data
\o LVS Error Data Loaded
\r nil
\a hiSetCurrentWindow(window(3))
\r t
\a leHiCreateRuler()
\p > 
\a mouseAddPt()
\i 2.7:18.3
\r t
\a cancelEnterFun()
\r t
\r nil
\a geScroll(nil "s" nil)
\r t
\a hiZoomInAtMouse()
\i 3.6:12.6
\r t
\a hiiSetCurrentForm('ivLVSDisplayErrorForm)
\r t
\a iviLVSErrorDisplayCB( 'next )
\w *WARNING* Window does not match LVS Run. The current LVS Run is
\w library 'MYLIB', cell 'minority', view 'extracted' and
\w library 'MYLIB', cell 'minority', view 'schematic'.
\p > 
\a hiDBoxOK(ivDBox)
\r t
\r nil
\a hiSetCurrentWindow(window(2))
\r t
\a showClickInfo()
\i -2.875:-0.6875
\r window:2
\a iviLVSErrorDisplayCB( 'next )
\r nil
\a iviLVSErrorDisplayCB( 'next )
\r nil
\a iviLVSErrorDisplayCB( 'next )
\r nil
\a iviLVSErrorDisplayCB( 'next )
\r nil
\a iviLVSErrorDisplayCB( 'next )
\w *WARNING* No more errors available for display
\w 
\p > 
\a hiDBoxOK(ivDBox)
\r t
\r nil
\a hiFormCancel(ivLVSDisplayErrorForm) 
\r t
\r nil
\a hiSetCurrentWindow(window(3))
\r t
\a showClickInfo()
\i -1.8:30
\r window:3
\a leiMouseSetEntryLayer(8)
\r t
\a leiMouseToggleLayerSelectable(5)
\r t
\a leiMouseToggleLayerSelectable(1)
\r t
\a showClickInfo()
\i -7.2:18.3
\o 
\o active drawing -> height: 3.30  width: 61.50
\r window:3
\a showClickInfo()
\i -7.2:19.5
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -7.5:18.3
\r t
\a mouseAddPt()
\i -7.8:17.4
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiCreateRuler()
\p > 
\a mouseAddPt()
\i -0.6:17.4
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -7.5:17.4
\r t
\a mouseAddPt()
\i -7.5:16.8
\r t
\a cancelEnterFun()
\r t
\r nil
\a showClickInfo()
\i -5.4:12.6
\r window:3
\a leHiStretch()
\p > 
\a leiMouseToggleLayerSelectable(1)
\r t
\a leiMouseToggleLayerSelectable(5)
\r t
\a mouseAddPt()
\i -5.1:13.8
\w *WARNING* (LE-104010): All selected points are locked. No wires can be stretched.
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -4.5:10.2
\w *WARNING* (LE-104010): All selected points are locked. No wires can be stretched.
\r t
\a mouseAddPt()
\i -4.8:6.6
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -4.5:14.4
\r t
\a mouseAddPt()
\i -5.1:12.3
\r t
\a mouseAddPt()
\i -5.1:11.4
\r t
\a mouseAddPt()
\i -5.1:14.1
\r t
\a mouseAddPt()
\i -5.1:14.4
\r t
\a mouseAddPt()
\i -5.1:13.2
\r t
\a mouseAddPt()
\i -5.1:16.5
\w *WARNING* (LE-104010): All selected points are locked. No wires can be stretched.
\r t
\a leHiMove()
\w *WARNING* (LE-104010): All selected points are locked. No wires can be stretched.
\w *WARNING* (LE-104010): All selected points are locked. No wires can be stretched.
\r t
\a mouseAddPt()
\i -5.1:16.5
\r t
\a mouseAddPt()
\i -5.1:15.9
\r t
\a cancelEnterFun()
\r t
\r nil
\a showClickInfo()
\i -4.5:12.9
\o 
\o metal1 drawing -> height: 6.00  width: 3.00
\r window:3
\a showClickInfo()
\i -4.8:12.9
\o 
\o metal1 drawing -> height: 6.00  width: 3.00
\r window:3
\a showClickInfo()
\i -5.1:12.9
\o 
\o metal1 drawing -> height: 6.00  width: 3.00
\r window:3
\a leHiMove()
\p > 
\a mouseAddPt()
\i -4.8:12
\r t
\a mouseAddPt()
\i -4.8:15.3
\r t
\r t
\a leHiStretch()
\p > 
\w *WARNING* Value input must be a number - setting back to previous value
\a cancelEnterFun(leStretchForm)
\r t
\r nil
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -5.1:11.1
\w *WARNING* (LE-104010): All selected points are locked. No wires can be stretched.
\r t
\a mouseAddPt()
\i -4.8:9.9
\r t
\r t
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -4.2:15.9
\w *WARNING* (LE-104010): All selected points are locked. No wires can be stretched.
\r t
\a mouseAddPt()
\i -3.9:17.1
\r t
\r t
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -3.9:17.1
\w *WARNING* (LE-104010): All selected points are locked. No wires can be stretched.
\r t
\a mouseAddPt()
\i -3.9:17.4
\r t
\r t
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -4.5:12.6
\w *WARNING* (LE-104010): All selected points are locked. No wires can be stretched.
\r t
\a mouseAddPt()
\i -4.5:12.6
\r t
\r t
\a leHiStretch()
\p > 
\a cancelEnterFun(leStretchForm)
\r t
\r nil
\a showClickInfo()
\i -4.5:12
\o 
\o metal1 drawing -> height: 6.00  width: 3.00
\r window:3
\a showClickInfo()
\i -5.4:12.6
\o 
\o metal1 drawing -> height: 6.00  width: 3.00
\r window:3
\a leiMouseToggleLayerSelectable(5)
\r t
\a showClickInfo()
\i -4.8:11.4
\r window:3
\a showClickInfo()
\i -4.8:11.4
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -4.5:11.4
\r t
\a mouseAddPt()
\i -4.5:11.4
\r t
\a mouseAddPt()
\i -4.5:11.4
\r t
\a leiMouseToggleLayerSelectable(5)
\r t
\a leiMouseToggleLayerVisible(5)
\r t
\a leiMouseToggleLayerVisible(5)
\r t
\a leiMouseToggleLayerSelectable(5)
\r t
\a leiMouseToggleLayerSelectable(5)
\r t
\a cancelEnterFun(leStretchForm)
\r t
\r nil
\a showClickInfo()
\i -5.7:11.4
\o 
\o metal1 drawing -> height: 6.00  width: 3.00
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -5.1:12
\w *WARNING* (LE-104010): All selected points are locked. No wires can be stretched.
\r t
\a mouseAddPt()
\i -5.1:10.5
\r t
\r t
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -5.1:13.2
\w *WARNING* (LE-104010): All selected points are locked. No wires can be stretched.
\r t
\a mouseAddPt()
\i -5.1:14.7
\r t
\r t
\a leHiStretch()
\p > 
\a cancelEnterFun(leStretchForm)
\r t
\r nil
\a leiMouseToggleLayerSelectable(5)
\r t
\a leiMouseToggleLayerSelectable(5)
\r t
\a showClickInfo()
\i -5.7:12.9
\o 
\o metal1 drawing -> height: 6.00  width: 3.00
\r window:3
\a showClickInfo()
\i -1.2:16.2
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -5.4:11.4
\r t
\a mouseAddPt()
\i -5.1:9.9
\r t
\a cancelEnterFun()
\r t
\r nil
\a setExtForm()
\r nil
\a hiiSetCurrentForm('ivExtOptionsForm)
\r t
\a _hiFormApplyCB(ivExtOptionsForm)
\o 
\o Extraction started at Sat Jan 31 13:10:54 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaEXT.rul.
\o Inclusion limit is set to 1000.
\o Running layout Extraction analysis
\o flat mode
\o Full checking.
\o executing: nodrc = geomAndNot("nodrc" "nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: nolpe = geomOr("nolpe")
\o executing: res_id = geomOr("res_id")
\o executing: dio_id = geomOr("dio_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: ca = geomAnd(cc geomAndNot(geomAndNot(active poly) elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: nBulk = geomOr(nwell)
\o executing: pBulk = geomOr(pwell)
\o executing: nOhmic = geomAnd(nActive nwell)
\o executing: pOhmic = geomAnd(pActive pwell)
\o executing: nNotOhmic = geomAnd(nActive pwell)
\o executing: pNotOhmic = geomAnd(pActive nwell)
\o executing: nDiff = geomAndNot(nNotOhmic geomOr(poly elec))
\o executing: pDiff = geomAndNot(pNotOhmic geomOr(poly elec))
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: nElecChannel = geomOutside(geomAnd(nNotOhmic elec) poly)
\o executing: pElecChannel = geomOutside(geomAnd(pNotOhmic elec) poly)
\o executing: nElecChannelTran = geomButting(nElecChannel nDiff (keep == 2))
\o executing: pElecChannelTran = geomButting(pElecChannel pDiff (keep == 2))
\o executing: nChannelTran = geomButting(nChannel nDiff (keep == 2))
\o executing: pChannelTran = geomButting(pChannel pDiff (keep == 2))
\o executing: nDiffContact = geomAnd(ca nDiff)
\o executing: pDiffContact = geomAnd(ca pDiff)
\o executing: nOhmicContact = geomAnd(ca nOhmic)
\o executing: pOhmicContact = geomAnd(ca pOhmic)
\o executing: Gate = geomAnd(geomOr(nNotOhmic pNotOhmic) poly)
\o executing: fieldPoly = geomAvoiding(poly Gate)
\o executing: NPdiode = geomAnd(dio_id geomOutside(nNotOhmic poly))
\o executing: PNdiode = geomAnd(dio_id geomOutside(pNotOhmic poly))
\o executing: elecGate = geomAnd(geomOr(nNotOhmic pNotOhmic) elec)
\o executing: fieldElec = geomAvoiding(elec elecGate)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: npnTran = geomEnclose(nwell geomOr(npnCollector npnBase npnEmitter))
\o executing: fieldPoly = geomAndNot(fieldPoly res_id)
\o executing: poly = geomAndNot(poly res_id)
\o executing: polyRes = geomButting(geomAnd(res_id poly) fieldPoly (keep == 2))
\o executing: fieldElec = geomAndNot(fieldElec res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: elecRes = geomButting(geomAnd(res_id elec) fieldElec (keep == 2))
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: nwellRes = geomButting(geomAnd(res_id nwell) nBulk (keep == 2))
\o executing: geomConnect((via nOhmicContact nOhmic nwell nBulk metal1) (via pOhmicContact pOhmic ...
\o executing: extractMOS(nChannelTran (poly "G") (nDiff "S" "D") (pBulk "B") "nmos4 ivpcell BYU_LI...
\o For layer nChannelTran :
\o     5  shapes encountered.
\o     5  nmos4 ivpcell BYU_LIB devices well formed.
\o executing: saveProperty(nChannelTran "model" "ami12N")
\o executing: extractMOS(pChannelTran (poly "G") (pDiff "S" "D") (nBulk "B") "pmos4 ivpcell BYU_LI...
\o For layer pChannelTran :
\o     5  shapes encountered.
\o     5  pmos4 ivpcell BYU_LIB devices well formed.
\o executing: saveProperty(pChannelTran "model" "ami12P")
\o executing: extractMOS(nElecChannelTran (elec "G") (nDiff "S" "D") (pBulk "B") "nmos4_elec ivpce...
\o executing: saveProperty(nElecChannelTran "model" "ami12NE")
\o executing: extractMOS(pElecChannelTran (elec "G") (nDiff "S" "D") (nBulk "B") "pmos4_elec ivpce...
\o executing: saveProperty(pElecChannelTran "model" "ami12PE")
\o executing: nDiffArea = measureParasitic(area (nDiff not_over nolpe) 1e-12 figure)
\o executing: attachParasitic(nDiffArea ("as" "S") ("ad" "D") nChannelTran shared)
\o executing: pDiffArea = measureParasitic(area (pDiff not_over nolpe) 1e-12 figure)
\o executing: attachParasitic(pDiffArea ("as" "S") ("ad" "D") pChannelTran shared)
\o executing: attachParasitic(nDiffArea ("as" "S") ("ad" "D") nElecChannelTran shared)
\o executing: attachParasitic(pDiffArea ("as" "S") ("ad" "D") pElecChannelTran shared)
\o executing: nDiffPerimeter = measureParasitic(length (nDiff outside poly outside elec not_over n...
\o executing: attachParasitic(nDiffPerimeter ("ps" "S") ("pd" "D") nChannelTran shared)
\o executing: attachParasitic(nDiffPerimeter ("ps" "S") ("pd" "D") nElecChannelTran shared)
\o executing: pDiffPerimeter = measureParasitic(length (pDiff outside poly outside elec not_over n...
\o executing: attachParasitic(pDiffPerimeter ("ps" "S") ("pd" "D") pChannelTran shared)
\o executing: attachParasitic(pDiffPerimeter ("ps" "S") ("pd" "D") pElecChannelTran shared)
\o executing: extractDevice(npnTran (npnCollector "C") (npnBaseTap "B") (npnEmitter "E") "npn ivpc...
\o executing: saveProperty(npnTran "model" "Generic_NPN")
\o executing: extractDevice(polyRes (poly "PLUS" "MINUS") "res ivpcell BYU_LIB")
\o executing: extractDevice(elecRes (elec "PLUS" "MINUS") "res ivpcell BYU_LIB")
\o executing: extractDevice(nwellRes (nBulk "PLUS" "MINUS") "res ivpcell BYU_LIB")
\o executing: resWidth = measureParameter(length (polyRes butting poly) 1e-06)
\o            resPerim = measureParameter(perimeter polyRes 1e-06)
\o executing: resLength = calculateParameter(((resPerim - resWidth) / 2.0))
\o executing: fullCorners = measureParameter(bends_full polyRes)
\o executing: res = calculateParameter((sheetRes * ((resLength / (resWidth / 2.0)) - (fullCorners ...
\o executing: saveParameter(res "r")
\o executing: resWidth = measureParameter(length (elecRes butting elec) 1e-06)
\o            resPerim = measureParameter(perimeter elecRes 1e-06)
\o executing: resLength = calculateParameter(((resPerim - resWidth) / 2.0))
\o executing: fullCorners = measureParameter(bends_full elecRes)
\o executing: res = calculateParameter((sheetRes * ((resLength / (resWidth / 2.0)) - (fullCorners ...
\o executing: saveParameter(res "r")
\o executing: resWidth = measureParameter(length (nwellRes butting nBulk) 1e-06)
\o            resPerim = measureParameter(perimeter nwellRes 1e-06)
\o executing: resLength = calculateParameter(((resPerim - resWidth) / 2.0))
\o executing: fullCorners = measureParameter(bends_full nwellRes)
\o executing: res = calculateParameter((sheetRes * ((resLength / (resWidth / 2.0)) - (fullCorners ...
\o executing: saveParameter(res "r")
\o executing: extractDevice(CapacitorElec (elec "PLUS") (poly "MINUS") "cap ivpcell BYU_LIB")
\o executing: saveRecognition(CapacitorElec "electrode")
\o executing: capacitance = measureParameter(area CapacitorElec (1e-18 * areaCap))
\o executing: saveParameter(capacitance "c")
\o executing: extractDevice(NPdiode (pBulk "PLUS") (nDiff "MINUS") "diode ivpcell BYU_LIB")
\o executing: saveProperty(NPdiode "model" "ami12NP")
\o executing: extractDevice(PNdiode (pDiff "PLUS") (nBulk "MINUS") "diode ivpcell BYU_LIB")
\o executing: saveProperty(PNdiode "model" "ami12PN")
\o executing: saveRecognition(nChannelTran "poly")
\o executing: saveRecognition(pChannelTran "poly")
\o executing: saveRecognition(nElecChannelTran "electrode")
\o executing: saveRecognition(pElecChannelTran "electrode")
\o executing: saveInterconnect((elec "electrode"))
\o executing: saveInterconnect((ce "contact"))
\o executing: saveInterconnect((npnCollectorContact "contact"))
\o executing: saveInterconnect((npnCollector "nwell"))
\o executing: saveInterconnect((npnEmitterContact "contact"))
\o executing: saveInterconnect((npnBaseContact "contact"))
\o executing: saveInterconnect((npnBase "pbase"))
\o executing: saveInterconnect((nBulk "nwell"))
\o executing: saveInterconnect((pBulk "pwell"))
\o executing: saveInterconnect((nOhmic "active"))
\o executing: saveInterconnect((pOhmic "active"))
\o executing: saveInterconnect((nDiff "active"))
\o executing: saveInterconnect((pDiff "active"))
\o executing: saveInterconnect((poly "poly"))
\o executing: saveInterconnect((metal1 "metal1"))
\o executing: saveInterconnect((nOhmicContact "contact"))
\o executing: saveInterconnect((pOhmicContact "contact"))
\o executing: saveInterconnect((nDiffContact "contact"))
\o executing: saveInterconnect((pDiffContact "contact"))
\o executing: saveInterconnect((cp "contact"))
\o executing: saveInterconnect((metal2 "metal2"))
\o executing: saveInterconnect((via "via"))
\o executing: saveInterconnect((nwellRes "res_id"))
\o executing: saveInterconnect((polyRes "res_id"))
\o executing: saveInterconnect((elecRes "res_id"))
\o executing: saveDerived(metal1 ("metal1" "net") cell_view)
\o executing: saveDerived(metal2 ("metal2" "net") cell_view)
\o executing: saveDerived(via ("via" "net") cell_view)
\o Extraction started.......Sat Jan 31 13:10:54 2015
\o            completed ....Sat Jan 31 13:10:55 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:01
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\o saving rep MYLIB/minority/extracted
\r t
\a hiFormDone(ivExtOptionsForm)
\o 
\o Extraction started at Sat Jan 31 13:10:55 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaEXT.rul.
\o Inclusion limit is set to 1000.
\o Running layout Extraction analysis
\o flat mode
\o Full checking.
\o executing: nodrc = geomAndNot("nodrc" "nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: nolpe = geomOr("nolpe")
\o executing: res_id = geomOr("res_id")
\o executing: dio_id = geomOr("dio_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: ca = geomAnd(cc geomAndNot(geomAndNot(active poly) elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: nBulk = geomOr(nwell)
\o executing: pBulk = geomOr(pwell)
\o executing: nOhmic = geomAnd(nActive nwell)
\o executing: pOhmic = geomAnd(pActive pwell)
\o executing: nNotOhmic = geomAnd(nActive pwell)
\o executing: pNotOhmic = geomAnd(pActive nwell)
\o executing: nDiff = geomAndNot(nNotOhmic geomOr(poly elec))
\o executing: pDiff = geomAndNot(pNotOhmic geomOr(poly elec))
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: nElecChannel = geomOutside(geomAnd(nNotOhmic elec) poly)
\o executing: pElecChannel = geomOutside(geomAnd(pNotOhmic elec) poly)
\o executing: nElecChannelTran = geomButting(nElecChannel nDiff (keep == 2))
\o executing: pElecChannelTran = geomButting(pElecChannel pDiff (keep == 2))
\o executing: nChannelTran = geomButting(nChannel nDiff (keep == 2))
\o executing: pChannelTran = geomButting(pChannel pDiff (keep == 2))
\o executing: nDiffContact = geomAnd(ca nDiff)
\o executing: pDiffContact = geomAnd(ca pDiff)
\o executing: nOhmicContact = geomAnd(ca nOhmic)
\o executing: pOhmicContact = geomAnd(ca pOhmic)
\o executing: Gate = geomAnd(geomOr(nNotOhmic pNotOhmic) poly)
\o executing: fieldPoly = geomAvoiding(poly Gate)
\o executing: NPdiode = geomAnd(dio_id geomOutside(nNotOhmic poly))
\o executing: PNdiode = geomAnd(dio_id geomOutside(pNotOhmic poly))
\o executing: elecGate = geomAnd(geomOr(nNotOhmic pNotOhmic) elec)
\o executing: fieldElec = geomAvoiding(elec elecGate)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: npnTran = geomEnclose(nwell geomOr(npnCollector npnBase npnEmitter))
\o executing: fieldPoly = geomAndNot(fieldPoly res_id)
\o executing: poly = geomAndNot(poly res_id)
\o executing: polyRes = geomButting(geomAnd(res_id poly) fieldPoly (keep == 2))
\o executing: fieldElec = geomAndNot(fieldElec res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: elecRes = geomButting(geomAnd(res_id elec) fieldElec (keep == 2))
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: nwellRes = geomButting(geomAnd(res_id nwell) nBulk (keep == 2))
\o executing: geomConnect((via nOhmicContact nOhmic nwell nBulk metal1) (via pOhmicContact pOhmic ...
\o executing: extractMOS(nChannelTran (poly "G") (nDiff "S" "D") (pBulk "B") "nmos4 ivpcell BYU_LI...
\o For layer nChannelTran :
\o     5  shapes encountered.
\o     5  nmos4 ivpcell BYU_LIB devices well formed.
\o executing: saveProperty(nChannelTran "model" "ami12N")
\o executing: extractMOS(pChannelTran (poly "G") (pDiff "S" "D") (nBulk "B") "pmos4 ivpcell BYU_LI...
\o For layer pChannelTran :
\o     5  shapes encountered.
\o     5  pmos4 ivpcell BYU_LIB devices well formed.
\o executing: saveProperty(pChannelTran "model" "ami12P")
\o executing: extractMOS(nElecChannelTran (elec "G") (nDiff "S" "D") (pBulk "B") "nmos4_elec ivpce...
\o executing: saveProperty(nElecChannelTran "model" "ami12NE")
\o executing: extractMOS(pElecChannelTran (elec "G") (nDiff "S" "D") (nBulk "B") "pmos4_elec ivpce...
\o executing: saveProperty(pElecChannelTran "model" "ami12PE")
\o executing: nDiffArea = measureParasitic(area (nDiff not_over nolpe) 1e-12 figure)
\o executing: attachParasitic(nDiffArea ("as" "S") ("ad" "D") nChannelTran shared)
\o executing: pDiffArea = measureParasitic(area (pDiff not_over nolpe) 1e-12 figure)
\o executing: attachParasitic(pDiffArea ("as" "S") ("ad" "D") pChannelTran shared)
\o executing: attachParasitic(nDiffArea ("as" "S") ("ad" "D") nElecChannelTran shared)
\o executing: attachParasitic(pDiffArea ("as" "S") ("ad" "D") pElecChannelTran shared)
\o executing: nDiffPerimeter = measureParasitic(length (nDiff outside poly outside elec not_over n...
\o executing: attachParasitic(nDiffPerimeter ("ps" "S") ("pd" "D") nChannelTran shared)
\o executing: attachParasitic(nDiffPerimeter ("ps" "S") ("pd" "D") nElecChannelTran shared)
\o executing: pDiffPerimeter = measureParasitic(length (pDiff outside poly outside elec not_over n...
\o executing: attachParasitic(pDiffPerimeter ("ps" "S") ("pd" "D") pChannelTran shared)
\o executing: attachParasitic(pDiffPerimeter ("ps" "S") ("pd" "D") pElecChannelTran shared)
\o executing: extractDevice(npnTran (npnCollector "C") (npnBaseTap "B") (npnEmitter "E") "npn ivpc...
\o executing: saveProperty(npnTran "model" "Generic_NPN")
\o executing: extractDevice(polyRes (poly "PLUS" "MINUS") "res ivpcell BYU_LIB")
\o executing: extractDevice(elecRes (elec "PLUS" "MINUS") "res ivpcell BYU_LIB")
\o executing: extractDevice(nwellRes (nBulk "PLUS" "MINUS") "res ivpcell BYU_LIB")
\o executing: resWidth = measureParameter(length (polyRes butting poly) 1e-06)
\o            resPerim = measureParameter(perimeter polyRes 1e-06)
\o executing: resLength = calculateParameter(((resPerim - resWidth) / 2.0))
\o executing: fullCorners = measureParameter(bends_full polyRes)
\o executing: res = calculateParameter((sheetRes * ((resLength / (resWidth / 2.0)) - (fullCorners ...
\o executing: saveParameter(res "r")
\o executing: resWidth = measureParameter(length (elecRes butting elec) 1e-06)
\o            resPerim = measureParameter(perimeter elecRes 1e-06)
\o executing: resLength = calculateParameter(((resPerim - resWidth) / 2.0))
\o executing: fullCorners = measureParameter(bends_full elecRes)
\o executing: res = calculateParameter((sheetRes * ((resLength / (resWidth / 2.0)) - (fullCorners ...
\o executing: saveParameter(res "r")
\o executing: resWidth = measureParameter(length (nwellRes butting nBulk) 1e-06)
\o            resPerim = measureParameter(perimeter nwellRes 1e-06)
\o executing: resLength = calculateParameter(((resPerim - resWidth) / 2.0))
\o executing: fullCorners = measureParameter(bends_full nwellRes)
\o executing: res = calculateParameter((sheetRes * ((resLength / (resWidth / 2.0)) - (fullCorners ...
\o executing: saveParameter(res "r")
\o executing: extractDevice(CapacitorElec (elec "PLUS") (poly "MINUS") "cap ivpcell BYU_LIB")
\o executing: saveRecognition(CapacitorElec "electrode")
\o executing: capacitance = measureParameter(area CapacitorElec (1e-18 * areaCap))
\o executing: saveParameter(capacitance "c")
\o executing: extractDevice(NPdiode (pBulk "PLUS") (nDiff "MINUS") "diode ivpcell BYU_LIB")
\o executing: saveProperty(NPdiode "model" "ami12NP")
\o executing: extractDevice(PNdiode (pDiff "PLUS") (nBulk "MINUS") "diode ivpcell BYU_LIB")
\o executing: saveProperty(PNdiode "model" "ami12PN")
\o executing: saveRecognition(nChannelTran "poly")
\o executing: saveRecognition(pChannelTran "poly")
\o executing: saveRecognition(nElecChannelTran "electrode")
\o executing: saveRecognition(pElecChannelTran "electrode")
\o executing: saveInterconnect((elec "electrode"))
\o executing: saveInterconnect((ce "contact"))
\o executing: saveInterconnect((npnCollectorContact "contact"))
\o executing: saveInterconnect((npnCollector "nwell"))
\o executing: saveInterconnect((npnEmitterContact "contact"))
\o executing: saveInterconnect((npnBaseContact "contact"))
\o executing: saveInterconnect((npnBase "pbase"))
\o executing: saveInterconnect((nBulk "nwell"))
\o executing: saveInterconnect((pBulk "pwell"))
\o executing: saveInterconnect((nOhmic "active"))
\o executing: saveInterconnect((pOhmic "active"))
\o executing: saveInterconnect((nDiff "active"))
\o executing: saveInterconnect((pDiff "active"))
\o executing: saveInterconnect((poly "poly"))
\o executing: saveInterconnect((metal1 "metal1"))
\o executing: saveInterconnect((nOhmicContact "contact"))
\o executing: saveInterconnect((pOhmicContact "contact"))
\o executing: saveInterconnect((nDiffContact "contact"))
\o executing: saveInterconnect((pDiffContact "contact"))
\o executing: saveInterconnect((cp "contact"))
\o executing: saveInterconnect((metal2 "metal2"))
\o executing: saveInterconnect((via "via"))
\o executing: saveInterconnect((nwellRes "res_id"))
\o executing: saveInterconnect((polyRes "res_id"))
\o executing: saveInterconnect((elecRes "res_id"))
\o executing: saveDerived(metal1 ("metal1" "net") cell_view)
\o executing: saveDerived(metal2 ("metal2" "net") cell_view)
\o executing: saveDerived(via ("via" "net") cell_view)
\o Extraction started.......Sat Jan 31 13:10:55 2015
\o            completed ....Sat Jan 31 13:10:55 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\o saving rep MYLIB/minority/extracted
\r t
\a setLVSForm()
\r "         ivLVSEnvForm->rulesLibName->editable = ivLVSEnvForm->rulesLibButton->value         if( ivLVSEnvForm->rulesLibButton->value == t then             ddsSyncWithForm( ivLVSEnvForm 'libBrowse 'rulesLibName                                            'nil 'nil nil )         )"
\a ivLVSRun()
\p > 
\a hiiSetCurrentForm('simSaveAllForm)
\r t
\a hiFormDone(simSaveAllForm)
\r t
\o LVS job is now started...
\r nil
\o The LVS job has completed. The net-lists match.
\o 
\o Run Directory: /auto/fsg/lhsiao/cadence/LVS
\p > 
\a hiDBoxOK(ivDBox)
\r t
\a hiZoomOutAtMouse()
\i -18:15
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a hiZoomOutAtMouse()
\i -11.1:45
\r t
\a geScroll(nil "s" nil)
\r t
\a hiZoomOutAtMouse()
\i -15.6:19.2
\r t
\a hiZoomInAtMouse()
\i 91.2:3
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a hiZoomInAtMouse()
\i 3:22.5
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a hiZoomOutAtMouse()
\i 3:22.5
\r t
\a hiZoomInAtMouse()
\i 33.6:47.4
\r t
\a hiZoomInAtMouse()
\i 33.6:47.4
\r t
\a geScroll(nil "n" nil)
\r t
\a hiZoomInAtMouse()
\i 33.6:54.6
\r t
\a leHiMove()
\p > 
\a mouseAddPt()
\i 30.6:54
\r t
\a mouseAddPt()
\i 27:54
\r t
\a mouseAddPt()
\i 30.9:52.8
\r t
\a mouseAddPt()
\i 27.3:52.5
\r t
\a cancelEnterFun()
\r t
\r nil
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:12:38 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:12:38 2015
\o     completed ....Sat Jan 31 13:12:38 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a showClickInfo()
\i 30.3:54.6
\r window:3
\a showClickInfo()
\i 27.3:54.3
\o 
\o metal1 drawing -> height: 4.80  width: 3.00
\r window:3
\a leHiMove()
\p > 
\a mouseAddPt()
\i 27.3:54.3
\r t
\a mouseAddPt()
\i 26.7:54.3
\r t
\r t
\a showClickInfo()
\i 28.5:52.5
\r window:3
\a showClickInfo()
\i 28.5:52.8
\r window:3
\a leHiMove()
\p > 
\a mouseAddPt()
\i 28.5:52.8
\r t
\a mouseAddPt()
\i 27.9:52.8
\r t
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a _hiFormApplyCB(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:13:05 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:13:05 2015
\o     completed ....Sat Jan 31 13:13:05 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:13:08 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:13:08 2015
\o     completed ....Sat Jan 31 13:13:08 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a showClickInfo()
\i 25.2:53.1
\o 
\o metal1 drawing -> height: 4.80  width: 3.00
\r window:3
\a leHiCreateRuler()
\p > 
\a mouseAddPt()
\i 25.2:53.1
\r t
\a mouseAddPt()
\i 24.9:53.1
\r t
\a leHiCreateRuler()
\p > 
\a mouseAddPt()
\i 25.2:53.1
\r t
\a mouseAddPt()
\i 24.9:53.1
\r t
\a leHiMove()
\r t
\p > 
\a mouseAddPt()
\i 26.1:53.7
\r t
\a mouseAddPt()
\i 27.3:53.7
\r t
\r nil
\r t
\a showClickInfo()
\i 26.1:52.8
\r window:3
\a leHiMove()
\p > 
\a mouseAddPt()
\i 25.8:52.8
\r t
\a mouseAddPt()
\i 27:52.8
\r t
\r t
\a leHiCreateRuler()
\p > 
\a mouseAddPt()
\i 26.4:53.4
\r t
\a mouseAddPt()
\i 24.9:53.4
\r t
\a mouseAddPt()
\i 26.1:52.8
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiMove()
\p > 
\a mouseAddPt()
\i 27.3:53.7
\r t
\a mouseAddPt()
\i 27:53.4
\r t
\r t
\a leHiMove()
\p > 
\a mouseAddPt()
\i 27.3:54
\r t
\a mouseAddPt()
\i 27.3:54
\r t
\r t
\a leHiMove()
\p > 
\a mouseAddPt()
\i 27.6:54.3
\r t
\a leHiMove()
\r t
\a leHiMove()
\r t
\a mouseAddPt()
\i 27.3:54
\r t
\a mouseAddPt()
\i 27.3:54
\r t
\r t
\a showClickInfo()
\i 28.2:54.3
\o 
\o metal1 drawing -> height: 4.80  width: 3.00
\r window:3
\a leHiMove()
\p > 
\a mouseAddPt()
\i 27.3:54.3
\r t
\a mouseAddPt()
\i 27:54.3
\r t
\r t
\a leHiCreateRuler()
\p > 
\a mouseAddPt()
\i 26.1:53.4
\r t
\a mouseAddPt()
\i 24.9:53.4
\r t
\a leHiCreateRuler()
\p > 
\a mouseAddPt()
\i 26.1:53.7
\r t
\a mouseAddPt()
\i 24.9:53.7
\r t
\a cancelEnterFun()
\r t
\r nil
\a cancelEnterFun()
\r t
\r nil
\a _lxHiMousePopUp()
\r t
\a hiPopupDown(lePopUpMenu)
\r t
\a showClickInfo()
\i 25.2:53.1
\r window:3
\a leHiDelete()
\p > 
\a cancelEnterFun(leDeleteForm)
\r t
\r nil
\a showClickInfo()
\i 25.2:53.1
\r window:3
\a showClickInfo()
\i 24.9:53.1
\r window:3
\a showClickInfo()
\i 24.6:53.1
\r window:3
\a showClickInfo()
\i 24.9:53.1
\r window:3
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a hiZoomOutAtMouse()
\i 19.5:48
\r t
\a hiZoomOutAtMouse()
\i 19.2:47.7
\r t
\a hiZoomOutAtMouse()
\i 19.2:47.7
\r t
\a geScroll(nil "s" nil)
\r t
\a hiZoomInAtMouse()
\i 37.2:35.1
\r t
\a hiZoomInAtMouse()
\i 36:36
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a hiZoomInAtMouse()
\i 29.4:52.5
\r t
\a geScroll(nil "n" nil)
\r t
\a showClickInfo()
\i 29.4:57.9
\r window:3
\a leHiClearRuler()
\r t
\a hiZoomOutAtMouse()
\i 22.2:52.8
\r t
\a hiZoomOutAtMouse()
\i 22.2:53.1
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a hiZoomOutAtMouse()
\i 14.1:24.3
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a hiZoomInAtMouse()
\i 44.7:2.4
\r t
\a geScroll(nil "n" nil)
\r t
\a hiZoomInAtMouse()
\i 35.1:28.2
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a hiZoomOutAtMouse()
\i 35.1:57.3
\r t
\a leHiMove()
\p > 
\a mouseAddPt()
\i 28.2:61.2
\r t
\a mouseAddPt()
\i -7.8:61.2
\r t
\a leHiMove()
\r t
\a mouseAddPt()
\i 33.3:61.2
\r t
\a mouseAddPt()
\i 5.1:61.8
\r t
\a leHiMove()
\r t
\a mouseAddPt()
\i 37.2:62.1
\r t
\a mouseAddPt()
\i 16.5:62.4
\r t
\a leHiMove()
\r t
\a mouseAddPt()
\i 38.4:61.8
\r t
\a mouseAddPt()
\i 18:61.8
\r t
\a hiZoomInAtMouse()
\i 18.9:62.7
\r t
\a hiZoomInAtMouse()
\i 18.9:62.7
\r t
\a mouseAddPt()
\i 17.4:61.8
\r t
\a mouseAddPt()
\i 17.7:61.8
\r t
\a hiZoomOutAtMouse()
\i 21:64.2
\r t
\a hiZoomOutAtMouse()
\i 21:64.2
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a leHiMove()
\r t
\a mouseAddPt()
\i 27.9:9
\r t
\a mouseAddPt()
\i -7.8:9
\r t
\a leHiMove()
\r t
\a mouseAddPt()
\i 33.3:7.5
\r t
\a mouseAddPt()
\i 4.2:7.2
\r t
\a mouseAddPt()
\i 36.9:8.4
\r t
\a mouseAddPt()
\i 15.9:8.1
\r t
\a mouseAddPt()
\i 38.1:7.5
\r t
\a mouseAddPt()
\i 17.1:7.8
\r t
\a geScroll(nil "n" nil)
\r t
\a cancelEnterFun()
\r t
\r nil
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a leHiStretch()
\p > 
\a mouseAddPt()
\i 41.1:55.5
\r t
\a mouseAddPt()
\i 40.2:61.2
\r t
\a mouseAddPt()
\i 32.1:61.2
\r t
\a leHiStretch()
\r t
\a mouseAddPt()
\i 38.1:56.7
\r t
\a leHiStretch()
\r t
\a leHiStretch()
\r t
\a mouseAddPt()
\i 41.1:57.6
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a mouseAddPt()
\i 40.8:59.7
\r t
\a mouseAddPt()
\i 40.8:58.8
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a mouseAddPt()
\i 40.8:59.7
\r t
\a mouseAddPt()
\i 40.8:59.4
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a mouseAddPt()
\i 40.8:60
\r t
\a leiMouseToggleLayerSelectable(5)
\r t
\a leiMouseSetEntryLayer(10)
\r t
\a leiMouseToggleLayerSelectable(10)
\r t
\a leiMouseSetEntryLayer(10)
\r t
\a leiMouseSetEntryLayer(0)
\r t
\a mouseAddPt()
\i 40.8:61.2
\r t
\a mouseAddPt()
\i 38.1:60.6
\r t
\a leiMouseSetEntryLayer(9)
\r t
\a mouseAddPt()
\i 41.1:26.4
\r t
\a leiMouseToggleLayerSelectable(9)
\r t
\a leiMouseToggleLayerSelectable(10)
\r t
\a mouseAddPt()
\i 41.1:27.3
\r t
\a mouseAddPt()
\i 38.4:27
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a hiZoomOutAtMouse()
\i 40.2:47.1
\r t
\a mouseAddPt()
\i 33:42.9
\r t
\a mouseAddPt()
\i 35.4:24
\r t
\a mouseAddPt()
\i 35.4:24
\r t
\a leHiStretch()
\r t
\a leiMouseToggleLayerSelectable(21)
\r t
\a mouseAddPt()
\i 41.1:60.9
\r t
\a leiMouseToggleLayerSelectable(19)
\r t
\a mouseAddPt()
\i 41.1:60.9
\r t
\a mouseAddPt()
\i 41.1:60.9
\r t
\a mouseAddPt()
\i 40.8:60.9
\r t
\a leHiStretch()
\r t
\a leiMouseToggleLayerSelectable(11)
\r t
\a mouseAddPt()
\i 40.8:61.5
\r t
\a mouseAddPt()
\i 33.3:60.6
\r t
\a leiMouseToggleLayerSelectable(12)
\r t
\a mouseAddPt()
\i 41.1:7.5
\r t
\a mouseAddPt()
\i 30.3:6.9
\r t
\a leHiStretch()
\r t
\a leiMouseToggleLayerSelectable(5)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a mouseAddPt()
\i 40.2:6.9
\r t
\a mouseAddPt()
\i 29.4:6.9
\r t
\a mouseAddPt()
\i 48.9:28.2
\r t
\a hiZoomInAtMouse()
\i 33.6:15.6
\r t
\a hiZoomInAtMouse()
\i 33.6:15.6
\r t
\a geScroll(nil "s" nil)
\r t
\a leHiMove()
\r t
\a mouseAddPt()
\i 29.1:15.6
\r t
\a mouseAddPt()
\i 26.1:15.9
\r t
\a leHiCreateRuler()
\p > 
\a mouseAddPt()
\i 25.5:15.9
\r t
\a mouseAddPt()
\i 24.9:15.9
\r t
\a leHiClearRuler()
\r t
\a mouseAddPt()
\i 24.9:17.4
\r t
\a mouseAddPt()
\i 26.1:17.4
\r t
\a leHiMove()
\r t
\r nil
\a mouseAddPt()
\i 26.1:16.5
\r t
\a mouseAddPt()
\i 26.7:16.8
\r t
\a leHiMove()
\r t
\a mouseAddPt()
\i 30.6:14.7
\r t
\a mouseAddPt()
\i 28.2:14.7
\r t
\a leHiStretch()
\r t
\a mouseAddPt()
\i 31.5:12.9
\r t
\a mouseAddPt()
\i 29.1:12.9
\r t
\a leHiStretch()
\r t
\a leiMouseToggleLayerSelectable(1)
\r t
\a mouseAddPt()
\i 34.8:15.9
\r t
\a mouseAddPt()
\i 30.3:15.9
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:30:44 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:30:44 2015
\o     completed ....Sat Jan 31 13:30:44 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a mouseAddPt()
\i 44.1:13.5
\r t
\a leHiStretch()
\r t
\a mouseAddPt()
\i 38.1:18.9
\r t
\a mouseAddPt()
\i 30.6:18.9
\r t
\a leHiCreateRuler()
\p > 
\a mouseAddPt()
\i 30.6:17.1
\r t
\a mouseAddPt()
\i 30.3:17.1
\r t
\a hiiSetCurrentForm('leStretchForm)
\r t
\a hiiSetCurrentForm('leCreateRulerForm)
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:31:24 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:31:24 2015
\o     completed ....Sat Jan 31 13:31:24 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********  Summary of rule violations for cell "minority layout"  *********
\o  # errors  Violated Rules
\o         1  (SCMOS Rule 4.2) select overlap of active: 2 lambda (1.20 um)
\o         1  Total errors found
\o 
\r t
\a mouseAddPt()
\i 30.3:17.7
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\r t
\a mouseAddPt()
\i 30.6:17.7
\r t
\a mouseAddPt()
\i 31.2:17.7
\r t
\a leHiClearRuler()
\r t
\a leHiCreateRuler()
\p > 
\a mouseAddPt()
\i 31.2:16.8
\r t
\a mouseAddPt()
\i 31.2:16.8
\w *WARNING* glmDrawLine: number of points invalid.
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\r t
\a mouseAddPt()
\i 31.2:16.5
\w *WARNING* glmDrawLine: number of points invalid.
\w *WARNING* glmDrawLine: number of points invalid.
\r t
\a mouseAddPt()
\i 31.5:16.5
\r t
\w *WARNING* glmDrawLine: number of points invalid.
\w *WARNING* glmDrawLine: number of points invalid.
\a leHiClearRuler()
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:31:55 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:31:55 2015
\o     completed ....Sat Jan 31 13:31:55 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a mouseAddPt()
\i 38.4:17.1
\r t
\a mouseAddPt()
\i 31.8:17.1
\r t
\a hiiSetCurrentForm('leStretchForm)
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:32:06 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:32:06 2015
\o     completed ....Sat Jan 31 13:32:06 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a mouseAddPt()
\i 31.8:16.2
\r t
\a mouseAddPt()
\i 31.5:16.2
\r t
\a hiiSetCurrentForm('leStretchForm)
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:32:12 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:32:12 2015
\o     completed ....Sat Jan 31 13:32:12 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a mouseAddPt()
\i 31.5:9.3
\r t
\a mouseAddPt()
\i 30.9:9.3
\r t
\a hiiSetCurrentForm('leStretchForm)
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:32:17 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:32:17 2015
\o     completed ....Sat Jan 31 13:32:17 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a mouseAddPt()
\i 30.9:8.1
\r t
\a mouseAddPt()
\i 31.8:8.1
\r t
\a mouseAddPt()
\i 37.8:13.2
\r t
\a mouseAddPt()
\i 31.8:13.8
\r t
\a mouseAddPt()
\i 30.6:13.8
\r t
\a hiiSetCurrentForm('leStretchForm)
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:32:27 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:32:27 2015
\o     completed ....Sat Jan 31 13:32:27 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a mouseAddPt()
\i 30.6:7.8
\r t
\a mouseAddPt()
\i 32.1:8.1
\r t
\a hiiSetCurrentForm('leStretchForm)
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:32:35 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:32:35 2015
\o     completed ....Sat Jan 31 13:32:35 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a mouseAddPt()
\i 36.3:13.5
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a mouseAddPt()
\i 32.4:56.4
\r t
\a mouseAddPt()
\i 29.1:56.1
\r t
\a mouseAddPt()
\i 34.8:51.3
\r t
\a mouseAddPt()
\i 30:51.3
\r t
\a hiiSetCurrentForm('leStretchForm)
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:32:48 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:32:48 2015
\o     completed ....Sat Jan 31 13:32:48 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a mouseAddPt()
\i 30:51.6
\r t
\a mouseAddPt()
\i 29.1:51.6
\r t
\a hiiSetCurrentForm('leStretchForm)
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:32:54 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:32:54 2015
\o     completed ....Sat Jan 31 13:32:54 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a mouseAddPt()
\i 30.3:15.6
\r t
\a mouseAddPt()
\i 29.1:15.6
\r t
\a mouseAddPt()
\i 31.5:15.9
\r t
\a mouseAddPt()
\i 30:15.9
\r t
\a mouseAddPt()
\i 32.1:16.2
\r t
\a mouseAddPt()
\i 30.6:16.2
\r t
\a hiiSetCurrentForm('leStretchForm)
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:33:07 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:33:07 2015
\o     completed ....Sat Jan 31 13:33:07 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********  Summary of rule violations for cell "minority layout"  *********
\o  # errors  Violated Rules
\o         1  (SCMOS Rule 4.2) select overlap of active: 2 lambda (1.20 um)
\o         1  Total errors found
\o 
\r t
\a mouseAddPt()
\i 30:13.8
\r t
\a mouseAddPt()
\i 30.3:13.8
\r t
\a setDRCForm()
\r nil
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:33:15 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:33:15 2015
\o     completed ....Sat Jan 31 13:33:15 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a mouseAddPt()
\i 38.1:45
\r t
\a mouseAddPt()
\i 32.7:45.3
\r t
\a leiMouseToggleLayerSelectable(10)
\r t
\a mouseAddPt()
\i 38.4:48.6
\r t
\a mouseAddPt()
\i 33.9:48.3
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a mouseAddPt()
\i 33.3:59.7
\r t
\a mouseAddPt()
\i 32.7:59.7
\r t
\a mouseAddPt()
\i 33.9:59.1
\r t
\a mouseAddPt()
\i 33:59.1
\r t
\a setDRCForm()
\r nil
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:33:45 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:33:45 2015
\o     completed ....Sat Jan 31 13:33:45 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a geScroll(nil "s" nil)
\r t
\a mouseAddPt()
\i 32.7:44.4
\r t
\a mouseAddPt()
\i 32.1:44.4
\r t
\a mouseAddPt()
\i 33:44.4
\r t
\a mouseAddPt()
\i 32.4:44.4
\r t
\a hiiSetCurrentForm('leStretchForm)
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:33:53 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:33:53 2015
\o     completed ....Sat Jan 31 13:33:53 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a hiiSetCurrentForm('leStretchForm)
\r t
\a hiiToggleEnterForm(leStretchForm)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a hiZoomOutAtMouse()
\i 33.6:9.3
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a hiZoomOutAtMouse()
\i 8.4:25.2
\r t
\a geScroll(nil "s" nil)
\r t
\a hiZoomInAtMouse()
\i 17.4:-3.9
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a hiZoomOutAtMouse()
\i 40.5:34.5
\r t
\a hiZoomInAtMouse()
\i 32.1:23.7
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a leHiStretch()
\r t
\a mouseAddPt()
\i -27.6:54.3
\r t
\a mouseAddPt()
\i -26.1:54.3
\r t
\a mouseAddPt()
\i -29.1:54.9
\r t
\a mouseAddPt()
\i -26.7:54.9
\r t
\a mouseAddPt()
\i -27.9:60
\r t
\a mouseAddPt()
\i -26.4:60
\r t
\a mouseAddPt()
\i -28.5:60.3
\r t
\a mouseAddPt()
\i -26.4:60.3
\r t
\a mouseAddPt()
\i 32.7:61.8
\r t
\a mouseAddPt()
\i 32.1:61.8
\r t
\a geScroll(nil "s" nil)
\r t
\a mouseAddPt()
\i -28.2:16.8
\r t
\a mouseAddPt()
\i -27.6:16.8
\r t
\a mouseAddPt()
\i -26.7:16.2
\r t
\a mouseAddPt()
\i -26.1:16.2
\r t
\a hiZoomInAtMouse()
\i -22.8:18
\r t
\a geScroll(nil "s" nil)
\r t
\a hiZoomInAtMouse()
\i -24:13.2
\r t
\a mouseAddPt()
\i -27.6:15.3
\r t
\a mouseAddPt()
\i -27:15.3
\r t
\a leHiCreateRuler()
\p > 
\a mouseAddPt()
\i -26.1:15.3
\r t
\a mouseAddPt()
\i -27:15.3
\r t
\a leHiStretch()
\r t
\r nil
\a mouseAddPt()
\i -27:14.4
\r t
\a mouseAddPt()
\i -27.3:14.4
\r t
\a geScroll(nil "s" nil)
\r t
\a mouseAddPt()
\i -28.2:7.8
\r t
\a mouseAddPt()
\i -27.3:7.8
\r t
\a mouseAddPt()
\i -27.6:7.8
\r t
\a mouseAddPt()
\i -27.3:7.8
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a mouseAddPt()
\i 30:9
\r t
\a mouseAddPt()
\i 29.7:9
\r t
\a geScroll(nil "e" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a hiZoomOutAtMouse()
\i -21.9:8.1
\r t
\a geScroll(nil "n" nil)
\r t
\a leHiStretch()
\r t
\a mouseAddPt()
\i -29.1:20.7
\r t
\a mouseAddPt()
\i -27.6:20.7
\r t
\a geScroll(nil "s" nil)
\r t
\a leHiClearRuler()
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a mouseAddPt()
\i -27.6:29.4
\r t
\a mouseAddPt()
\i -27.3:29.4
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:35:43 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:35:43 2015
\o     completed ....Sat Jan 31 13:35:43 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********  Summary of rule violations for cell "minority layout"  *********
\o  # errors  Violated Rules
\o         1  (SCMOS Rule 4.2) select overlap of active: 2 lambda (1.20 um)
\o         1  Total errors found
\o 
\r t
\a mouseAddPt()
\i -23.1:20.4
\r t
\a geScroll(nil "s" nil)
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiCreateRuler()
\p > 
\a mouseAddPt()
\i -26.1:17.4
\r t
\a mouseAddPt()
\i -27.3:17.4
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a leHiStretch()
\r t
\p > 
\a mouseAddPt()
\i -25.5:51.6
\r t
\a mouseAddPt()
\i -25.5:51.6
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -25.5:49.8
\r t
\a mouseAddPt()
\i -25.2:49.8
\r t
\a leHiCreateRuler()
\p > 
\a mouseAddPt()
\i -25.5:53.4
\r t
\a mouseAddPt()
\i -26.1:53.4
\r t
\a leHiStretch()
\r t
\r nil
\a mouseAddPt()
\i -26.1:55.2
\r t
\a mouseAddPt()
\i -26.7:55.2
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:36:33 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:36:33 2015
\o     completed ....Sat Jan 31 13:36:33 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a geScroll(nil "s" nil)
\r t
\a hiZoomOutAtMouse()
\i -16.2:41.1
\r t
\a hiZoomOutAtMouse()
\i -16.5:41.1
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a hiZoomInAtMouse()
\i -20.7:-9.9
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a hiZoomInAtMouse()
\i -20.4:17.4
\r t
\a leHiMove()
\r t
\a mouseAddPt()
\i -23.7:15.9
\r t
\a mouseAddPt()
\i -23.4:15.9
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a mouseAddPt()
\i -23.4:15.6
\r t
\a mouseAddPt()
\i -23.1:15.6
\r t
\a mouseAddPt()
\i -24:14.1
\r t
\a mouseAddPt()
\i -23.4:14.1
\r t
\a mouseAddPt()
\i -24.3:20.1
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -26.1:15.9
\r t
\a mouseAddPt()
\i -25.5:15.9
\r t
\a mouseAddPt()
\i -27.3:15.9
\r t
\a mouseAddPt()
\i -27.3:15.9
\r t
\a mouseAddPt()
\i -27.3:15.9
\r t
\a mouseAddPt()
\i -26.7:15.9
\r t
\a leHiClearRuler()
\r t
\a leHiStretch()
\r t
\a mouseAddPt()
\i -27.3:16.5
\r t
\a mouseAddPt()
\i -26.7:16.5
\r t
\a geScroll(nil "s" nil)
\r t
\a mouseAddPt()
\i -27.3:9
\r t
\a mouseAddPt()
\i -26.7:9
\r t
\a mouseAddPt()
\i -27.3:9
\r t
\a mouseAddPt()
\i -26.7:9
\r t
\a cancelEnterFun()
\r t
\r nil
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:37:28 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:37:28 2015
\o     completed ....Sat Jan 31 13:37:28 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********  Summary of rule violations for cell "minority layout"  *********
\o  # errors  Violated Rules
\o         1  (SCMOS Rule 3.5) field poly to active spacing: 1 lambda (0.60 um)
\o         1  Total errors found
\o 
\r t
\a showClickInfo()
\i -16.2:2.7
\r window:3
\a showClickInfo()
\i -22.5:17.4
\r window:3
\a leHiMove()
\p > 
\a mouseAddPt()
\i -23.7:17.7
\r t
\a mouseAddPt()
\i -24:17.7
\r t
\r t
\a showClickInfo()
\i -22.5:17.1
\o 
\o metal1 drawing -> height: 8.10  width: 3.00
\r window:3
\a leHiMove()
\p > 
\a mouseAddPt()
\i -23.1:14.1
\r t
\a mouseAddPt()
\i -23.4:14.1
\r t
\r t
\a showClickInfo()
\i -25.5:16.5
\o 
\o active drawing -> height: 1.80  width: 54.60
\r window:3
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:37:54 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:37:54 2015
\o     completed ....Sat Jan 31 13:37:54 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********  Summary of rule violations for cell "minority layout"  *********
\o  # errors  Violated Rules
\o         1  (SCMOS Rule 4.2) select overlap of active: 2 lambda (1.20 um)
\o         1  Total errors found
\o 
\r t
\a showClickInfo()
\i -15.9:13.8
\o 
\o nselect drawing -> height: 17.10  width: 57.00
\r window:3
\a showClickInfo()
\i -22.5:15.3
\o 
\o active drawing -> height: 1.80  width: 54.60
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -24.3:15.6
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a hiiToggleEnterForm(leStretchForm)
\r t
\a cancelEnterFun()
\r t
\r nil
\a showClickInfo()
\i -29.4:14.7
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -25.5:15.3
\r t
\a mouseAddPt()
\i -25.8:15.3
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:38:20 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:38:20 2015
\o     completed ....Sat Jan 31 13:38:20 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********  Summary of rule violations for cell "minority layout"  *********
\o  # errors  Violated Rules
\o         1  (SCMOS Rule 4.2) select overlap of active: 2 lambda (1.20 um)
\o         1  Total errors found
\o 
\r t
\a mouseAddPt()
\i -26.4:18.6
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -26.7:16.5
\r t
\a mouseAddPt()
\i -27:16.5
\r t
\a cancelEnterFun()
\r t
\r nil
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:38:36 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:38:36 2015
\o     completed ....Sat Jan 31 13:38:36 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********  Summary of rule violations for cell "minority layout"  *********
\o  # errors  Violated Rules
\o         1  (SCMOS Rule 4.2) select overlap of active: 2 lambda (1.20 um)
\o         1  Total errors found
\o 
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a showClickInfo()
\i -23.4:17.1
\r window:3
\a leHiMove()
\p > 
\a mouseAddPt()
\i -23.1:17.1
\r t
\a mouseAddPt()
\i -22.8:17.1
\r t
\r t
\a showClickInfo()
\i -24.3:12
\o 
\o metal1 drawing -> height: 8.10  width: 3.00
\r window:3
\a leHiMove()
\p > 
\a mouseAddPt()
\i -23.4:12.3
\r t
\a mouseAddPt()
\i -23.1:12.3
\r t
\r t
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -24:12.6
\w *WARNING* (LE-104010): All selected points are locked. No wires can be stretched.
\r t
\a leHiMove()
\w *WARNING* (LE-104010): All selected points are locked. No wires can be stretched.
\w *WARNING* (LE-104010): All selected points are locked. No wires can be stretched.
\r t
\a mouseAddPt()
\i -24:12.6
\r t
\a mouseAddPt()
\i -24.3:12.9
\r t
\r t
\a showClickInfo()
\i -24:16.5
\o 
\o active drawing -> height: 1.80  width: 54.90
\r window:3
\a showClickInfo()
\i -23.4:17.1
\r window:3
\a showClickInfo()
\i -23.4:17.1
\o 
\o metal1 drawing -> height: 8.10  width: 3.00
\r window:3
\a showClickInfo()
\i -24:17.1
\r window:3
\a showClickInfo()
\i -23.7:17.1
\o 
\o metal1 drawing -> height: 8.10  width: 3.00
\r window:3
\a showClickInfo()
\i -22.8:17.4
\r window:3
\a leHiMove()
\p > 
\a mouseAddPt()
\i -22.8:17.4
\r t
\a mouseAddPt()
\i -23.1:17.1
\r t
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:39:15 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:39:15 2015
\o     completed ....Sat Jan 31 13:39:16 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:01
\o *********  Summary of rule violations for cell "minority layout"  *********
\o  # errors  Violated Rules
\o         1  (SCMOS Rule 4.2) select overlap of active: 2 lambda (1.20 um)
\o         1  Total errors found
\o 
\r t
\a showClickInfo()
\i -27:16.5
\o 
\o pwell drawing -> height: 25.20  width: 57.60
\r window:3
\a showClickInfo()
\i -28.8:19.8
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -27:17.7
\r t
\a mouseAddPt()
\i -27.3:17.7
\r t
\a cancelEnterFun()
\r t
\r nil
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:39:25 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:39:25 2015
\o     completed ....Sat Jan 31 13:39:26 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:01
\o *********  Summary of rule violations for cell "minority layout"  *********
\o  # errors  Violated Rules
\o         1  (SCMOS Rule 4.2) select overlap of active: 2 lambda (1.20 um)
\o         1  Total errors found
\o 
\r t
\a showClickInfo()
\i -28.5:20.7
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -27.3:18.3
\r t
\a mouseAddPt()
\i -27.6:18.3
\r t
\a cancelEnterFun()
\r t
\r nil
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:39:33 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:39:33 2015
\o     completed ....Sat Jan 31 13:39:34 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:01
\o *********  Summary of rule violations for cell "minority layout"  *********
\o  # errors  Violated Rules
\o         1  (SCMOS Rule 4.2) select overlap of active: 2 lambda (1.20 um)
\o         1  Total errors found
\o 
\r t
\a showClickInfo()
\i -28.8:25.2
\r window:3
\a leHiCreateRuler()
\p > 
\a mouseAddPt()
\i -25.8:18
\r t
\a mouseAddPt()
\i -27:18
\r t
\a hiiToggleEnterForm(leCreateRulerForm)
\r t
\a leHiStretch()
\r t
\p > 
\a mouseAddPt()
\i -27.6:20.4
\r t
\a mouseAddPt()
\i -27:20.4
\r t
\a cancelEnterFun()
\r t
\r nil
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a showClickInfo()
\i -26.1:16.5
\o 
\o nselect drawing -> height: 17.10  width: 57.00
\r window:3
\a showClickInfo()
\i -27.9:13.2
\r window:3
\a hiZoomOutAtMouse()
\i -16.5:0
\r t
\a geScroll(nil "n" nil)
\r t
\a hiZoomOutAtMouse()
\i -13.8:20.4
\r t
\a geScroll(nil "s" nil)
\r t
\a hiZoomInAtMouse()
\i -12.9:-1.8
\r t
\a hiZoomInAtMouse()
\i -17.7:0.9
\r t
\a geScroll(nil "n" nil)
\r t
\a hiZoomInAtMouse()
\i -23.7:12.6
\r t
\a geScroll(nil "n" nil)
\r t
\a showClickInfo()
\i -26.7:19.2
\o 
\o nselect drawing -> height: 17.10  width: 57.00
\r window:3
\a showClickInfo()
\i -27:19.2
\o 
\o pwell drawing -> height: 25.20  width: 57.60
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -26.7:19.2
\r t
\a mouseAddPt()
\i -26.7:19.2
\r t
\r t
\a showClickInfo()
\i -26.7:19.2
\o 
\o nselect drawing -> height: 17.10  width: 57.00
\r window:3
\a showClickInfo()
\i -27:18.6
\o 
\o pwell drawing -> height: 25.20  width: 57.60
\r window:3
\a leHiStretch()
\p > 
\a leiMouseToggleLayerSelectable(9)
\r t
\a hiiToggleEnterForm(leStretchForm)
\r t
\a mouseAddPt()
\i -27.3:18
\r t
\a mouseAddPt()
\i -27.3:18
\r t
\r t
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -26.7:18.9
\r t
\a mouseAddPt()
\i -26.7:18.9
\r t
\r t
\a hiZoomOutAtMouse()
\i -25.8:17.1
\r t
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -26.7:10.8
\r t
\a mouseAddPt()
\i -26.7:10.8
\r t
\r t
\a leiMouseSetEntryLayer(9)
\r t
\a leiMouseSetEntryLayer(0)
\r t
\a showClickInfo()
\i -27.6:16.2
\r window:3
\a showClickInfo()
\i -27.6:16.2
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i -26.7:16.2
\r t
\a mouseAddPt()
\i -27:16.2
\r t
\a cancelEnterFun()
\r t
\r nil
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:41:08 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:41:08 2015
\o     completed ....Sat Jan 31 13:41:08 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a hiResizeWindow(swindow(2) list(311:25 1916:1145))
\r t
\a hiZoomOutAtMouse()
\i -14.1:24.9
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a hiZoomOutAtMouse()
\i -11.1:51.9
\r t
\a hiZoomInAtMouse()
\i 39.9:32.7
\r t
\a hiZoomInAtMouse()
\i 31.8:32.7
\r t
\a showClickInfo()
\i 26.4:36.6
\r window:3
\a leHiMove()
\p > 
\a mouseAddPt()
\i 27.6:36.6
\r t
\a mouseAddPt()
\i 23.4:36.6
\r t
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a leHiMove()
\p > 
\a geScroll(nil "n" nil)
\r t
\w *WARNING* Value input must be a number - setting back to previous value
\a leiMouseToggleLayerSelectable(10)
\r t
\a hiiToggleEnterForm(le0MoveForm)
\r t
\a mouseAddPt()
\i 22.2:35.4
\r t
\a mouseAddPt()
\i 22.2:35.4
\r t
\r t
\a leHiMove()
\p > 
\w *WARNING* Value input must be a number - setting back to previous value
\a cancelEnterFun(le0MoveForm)
\r t
\r nil
\a leHiMove()
\p > 
\a cancelEnterFun(le0MoveForm)
\r t
\r nil
\a showClickInfo()
\i 13.5:45.9
\o 
\o pselect drawing -> height: 25.50  width: 58.80
\r window:3
\a leHiMove()
\p > 
\a mouseAddPt()
\i 17.4:38.7
\r t
\a cancelEnterFun()
\r t
\r nil
\a showClickInfo()
\i 17.7:36.3
\o 
\o metal1 drawing -> height: 37.80  width: 3.00
\r window:3
\a leHiMove()
\p > 
\a mouseAddPt()
\i 17.1:36.9
\r t
\a mouseAddPt()
\i 14.4:37.2
\r t
\r t
\a showClickInfo()
\i 17.4:39.3
\r window:3
\a leHiMove()
\p > 
\a mouseAddPt()
\i 17.4:39
\r t
\a mouseAddPt()
\i 14.7:39.3
\r t
\r t
\a geScroll(nil "n" nil)
\r t
\a leHiMove()
\p > 
\a mouseAddPt()
\i 17.4:51.3
\r t
\a mouseAddPt()
\i 17.4:51.3
\r t
\r t
\a showClickInfo()
\i 17.7:51.3
\r window:3
\a leHiMove()
\p > 
\a mouseAddPt()
\i 17.7:51.3
\r t
\a mouseAddPt()
\i 15:51.3
\r t
\r t
\a geScroll(nil "s" nil)
\r t
\a leHiMove()
\p > 
\a mouseAddPt()
\i 17.4:39.3
\r t
\a leHiMove()
\r t
\a mouseAddPt()
\i 17.4:39.3
\r t
\a leHiMove()
\r t
\a mouseAddPt()
\i 17.4:39.3
\r t
\a cancelEnterFun()
\r t
\r nil
\a showClickInfo()
\i 17.4:39.3
\o 
\o metal2 drawing -> net: "OUT" height: 1.20  width: 1.20
\r window:3
\a leHiMove()
\p > 
\a mouseAddPt()
\i 15:39.3
\r t
\a mouseAddPt()
\i 12.3:39.3
\r t
\r t
\a geScroll(nil "s" nil)
\r t
\a showClickInfo()
\i 27.6:34.8
\o 
\o metal1 drawing -> height: 2.40  width: 6.90
\r window:3
\a leHiMove()
\p > 
\a mouseAddPt()
\i 27:34.8
\r t
\a mouseAddPt()
\i 18.6:34.8
\r t
\r t
\a leHiMove()
\p > 
\a mouseAddPt()
\i 30.6:35.1
\r t
\a mouseAddPt()
\i 30.6:35.1
\r t
\r t
\a showClickInfo()
\i 30.6:35.1
\r window:3
\a leHiMove()
\p > 
\a mouseAddPt()
\i 30.6:35.1
\r t
\a mouseAddPt()
\i 18.6:35.1
\r t
\r t
\a showClickInfo()
\i 30.9:35.1
\o 
\o metal2 drawing -> net: "A" height: 1.20  width: 1.20
\r window:3
\a leHiMove()
\p > 
\a mouseAddPt()
\i 30.9:35.1
\r t
\a mouseAddPt()
\i 18.9:35.1
\r t
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a showClickInfo()
\i 30.9:35.1
\o 
\o metal2 drawing -> net: "A" height: 1.20  width: 1.20
\r window:3
\a showClickInfo()
\i 18.6:35.1
\r window:3
\a showClickInfo()
\i 31.2:35.1
\o 
\o metal2 drawing -> net: "A" height: 1.20  width: 1.20
\r window:3
\a showClickInfo()
\i 21.6:34.8
\r window:3
\a showClickInfo()
\i 18.6:35.1
\r window:3
\a showClickInfo()
\i 18.6:35.1
\o 
\o metal2 drawing -> net: "A" height: 1.20  width: 1.20
\r window:3
\a showClickInfo()
\i 18.6:34.8
\r window:3
\a showClickInfo()
\i 30.6:35.1
\o 
\o metal2 drawing -> net: "A" height: 1.20  width: 1.20
\r window:3
\a _lxHiMousePopUp()
\r t
\a hiPopupDown(lePopUpMenu)
\r t
\a leHiDelete()
\r t
\a showClickInfo()
\i 18.3:34.8
\r window:3
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:43:24 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:43:24 2015
\o     completed ....Sat Jan 31 13:43:24 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********  Summary of rule violations for cell "minority layout"  *********
\o  # errors  Violated Rules
\o         1  (SCMOS Rule 7.2) metal1 spacing: 3 lambda (1.80 um)
\o         2  (SCMOS Rule 9.2) metal2 spacing: 4 lambda (2.40 um)
\o         3  Total errors found
\o 
\r t
\a showClickInfo()
\i 20.4:36.6
\o 
\o pselect drawing -> height: 25.50  width: 58.80
\r window:3
\a leHiMove()
\p > 
\a hiiToggleEnterForm(le0MoveForm)
\r t
\a cancelEnterFun()
\r t
\r nil
\a showClickInfo()
\i 14.7:39
\r window:3
\a leHiMove()
\p > 
\a mouseAddPt()
\i 14.7:39
\r t
\a mouseAddPt()
\i 14.7:42.3
\r t
\r t
\a showClickInfo()
\i 14.7:39.3
\o 
\o metal2 drawing -> net: "OUT" height: 1.20  width: 1.20
\r window:3
\a leHiMove()
\p > 
\a mouseAddPt()
\i 15:39.3
\r t
\a mouseAddPt()
\i 14.4:42.6
\r t
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:43:50 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:43:50 2015
\o     completed ....Sat Jan 31 13:43:50 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********  Summary of rule violations for cell "minority layout"  *********
\o  # errors  Violated Rules
\o         1  (SCMOS Rule 7.2) metal1 spacing: 3 lambda (1.80 um)
\o         1  Total errors found
\o 
\r t
\a showClickInfo()
\i 24.3:38.7
\o 
\o pselect drawing -> height: 25.50  width: 58.80
\r window:3
\a leHiStretch()
\p > 
\a cancelEnterFun(leStretchForm)
\r t
\r nil
\a showClickInfo()
\i 36.9:37.2
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i 16.8:35.1
\r t
\a mouseAddPt()
\i 17.4:35.1
\r t
\a cancelEnterFun()
\r t
\r nil
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a _hiFormApplyCB(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:44:08 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:44:08 2015
\o     completed ....Sat Jan 31 13:44:08 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********  Summary of rule violations for cell "minority layout"  *********
\o  # errors  Violated Rules
\o         1  (SCMOS Rule 7.2) metal1 spacing: 3 lambda (1.80 um)
\o         1  Total errors found
\o 
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:44:09 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:44:09 2015
\o     completed ....Sat Jan 31 13:44:09 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********  Summary of rule violations for cell "minority layout"  *********
\o  # errors  Violated Rules
\o         1  (SCMOS Rule 7.2) metal1 spacing: 3 lambda (1.80 um)
\o         1  Total errors found
\o 
\r t
\a showClickInfo()
\i 19.5:36.3
\o 
\o metal1 drawing -> height: 2.40  width: 6.30
\r window:3
\a leHiCreateRuler()
\p > 
\a mouseAddPt()
\i 16.2:37.8
\r t
\a mouseAddPt()
\i 18:37.5
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiMove()
\p > 
\a mouseAddPt()
\i 18.9:35.1
\r t
\a mouseAddPt()
\i 18.9:35.1
\r t
\r t
\a leHiMove()
\p > 
\a mouseAddPt()
\i 19.8:37.5
\r t
\a cancelEnterFun()
\r t
\r nil
\a showClickInfo()
\i 34.8:37.8
\r window:3
\a showClickInfo()
\i 19.5:35.1
\r window:3
\a leHiMove()
\p > 
\a mouseAddPt()
\i 19.5:35.1
\r t
\a mouseAddPt()
\i 20.1:35.1
\r t
\r t
\a showClickInfo()
\i 18.9:35.1
\o 
\o metal2 drawing -> net: "A" height: 1.20  width: 1.20
\r window:3
\a leHiMove()
\p > 
\a mouseAddPt()
\i 18.9:35.1
\r t
\a mouseAddPt()
\i 19.5:35.1
\r t
\r t
\a showClickInfo()
\i 36.6:36.6
\r window:3
\a showClickInfo()
\i 36.6:36.6
\r window:3
\a leHiStretch()
\p > 
\a mouseAddPt()
\i 17.4:35.1
\r t
\a mouseAddPt()
\i 18:35.1
\r t
\a cancelEnterFun()
\r t
\r nil
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:44:45 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:44:45 2015
\o     completed ....Sat Jan 31 13:44:45 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********  Summary of rule violations for cell "minority layout"  *********
\o  # errors  Violated Rules
\o         1  (SCMOS Rule 8.5) via to poly edge spacing: 2 lambda (1.20 um)
\o         1  Total errors found
\o 
\r t
\a showClickInfo()
\i 38.1:37.2
\r window:3
\a leHiMove()
\p > 
\a mouseAddPt()
\i 14.4:35.7
\r t
\a mouseAddPt()
\i 14.1:35.7
\r t
\a leHiMove()
\r t
\a mouseAddPt()
\i 15.3:43.5
\r t
\a mouseAddPt()
\i 15:43.5
\r t
\a geScroll(nil "n" nil)
\r t
\a mouseAddPt()
\i 16.2:51
\r t
\a mouseAddPt()
\i 15.9:51
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a mouseAddPt()
\i 18.3:17.7
\r t
\a mouseAddPt()
\i 15.3:17.7
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a mouseAddPt()
\i 18:35.7
\r t
\a mouseAddPt()
\i 17.7:35.7
\r t
\a mouseAddPt()
\i 19.5:36
\w *WARNING* (LE-104010): All selected points are locked. No wires can be stretched.
\r t
\a leHiMove()
\w *WARNING* (LE-104010): All selected points are locked. No wires can be stretched.
\w *WARNING* (LE-104010): All selected points are locked. No wires can be stretched.
\r t
\a mouseAddPt()
\i 18.9:36
\r t
\a mouseAddPt()
\i 18.6:36
\r t
\a cancelEnterFun()
\r t
\r nil
\a showClickInfo()
\i 19.8:35.1
\o 
\o metal2 drawing -> net: "A" height: 1.20  width: 1.20
\r window:3
\a leHiMove()
\p > 
\a mouseAddPt()
\i 19.8:35.1
\r t
\a mouseAddPt()
\i 19.5:35.1
\r t
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:45:33 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:45:33 2015
\o     completed ....Sat Jan 31 13:45:33 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a showClickInfo()
\i 38.4:36.3
\r window:3
\a geScroll(nil "n" nil)
\r t
\a leHiCreateRuler()
\p > 
\a mouseAddPt()
\i 29.1:50.1
\r t
\a mouseAddPt()
\i 30.3:49.8
\r t
\a leHiStretch()
\r t
\p > 
\a mouseAddPt()
\i 32.1:49.2
\r t
\a mouseAddPt()
\i 30.3:49.5
\r t
\a leHiStretch()
\r t
\a leHiStretch()
\r t
\a cancelEnterFun()
\r t
\r nil
\a leHiStretch()
\p > 
\a leiMouseToggleLayerSelectable(10)
\r t
\a mouseAddPt()
\i 32.4:48
\r t
\a mouseAddPt()
\i 30.3:48
\r t
\a geScroll(nil "n" nil)
\r t
\a mouseAddPt()
\i 32.1:60.6
\r t
\a mouseAddPt()
\i 29.7:60.3
\r t
\a mouseAddPt()
\i 32.4:60.3
\r t
\a mouseAddPt()
\i 30:60.3
\r t
\a mouseAddPt()
\i 30:60.3
\r t
\a mouseAddPt()
\i 29.7:60.3
\r t
\a mouseAddPt()
\i 35.4:59.1
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:46:11 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:46:11 2015
\o     completed ....Sat Jan 31 13:46:12 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:01
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a mouseAddPt()
\i 39:52.2
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a mouseAddPt()
\i 26.7:17.1
\w *WARNING* (LE-104010): All selected points are locked. No wires can be stretched.
\r t
\a leHiMove()
\w *WARNING* (LE-104010): All selected points are locked. No wires can be stretched.
\w *WARNING* (LE-104010): All selected points are locked. No wires can be stretched.
\r t
\a mouseAddPt()
\i 26.7:17.1
\r t
\a mouseAddPt()
\i 26.4:17.1
\r t
\a mouseAddPt()
\i 29.1:17.1
\r t
\a mouseAddPt()
\i 28.8:17.1
\r t
\a leHiStretch()
\r t
\a mouseAddPt()
\i 29.1:16.2
\r t
\a mouseAddPt()
\i 28.8:16.2
\r t
\a mouseAddPt()
\i 29.1:12.9
\r t
\a mouseAddPt()
\i 28.8:12.9
\r t
\a mouseAddPt()
\i 30.3:13.5
\r t
\a mouseAddPt()
\i 30:13.5
\r t
\a leHiStretch()
\r t
\a leiMouseToggleLayerSelectable(9)
\r t
\a mouseAddPt()
\i 30.6:14.1
\r t
\a mouseAddPt()
\i 30:14.1
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a mouseAddPt()
\i 27:52.8
\w *WARNING* (LE-104010): All selected points are locked. No wires can be stretched.
\r t
\a leHiMove()
\w *WARNING* (LE-104010): All selected points are locked. No wires can be stretched.
\w *WARNING* (LE-104010): All selected points are locked. No wires can be stretched.
\r t
\a mouseAddPt()
\i 27:53.1
\r t
\a mouseAddPt()
\i 26.7:53.1
\r t
\a mouseAddPt()
\i 27:54
\r t
\a mouseAddPt()
\i 26.7:54
\r t
\a leHiStretch()
\r t
\a mouseAddPt()
\i 29.1:55.8
\r t
\a mouseAddPt()
\i 28.8:55.8
\r t
\a mouseAddPt()
\i 33:52.2
\r t
\a mouseAddPt()
\i 29.1:51
\r t
\a mouseAddPt()
\i 28.8:51
\r t
\a mouseAddPt()
\i 30.3:50.7
\r t
\a mouseAddPt()
\i 30:50.7
\r t
\a mouseAddPt()
\i 30.3:50.7
\r t
\a mouseAddPt()
\i 30:50.7
\r t
\a leHiClearRuler()
\r t
\a mouseAddPt()
\i 31.8:50.1
\r t
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:47:02 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:47:02 2015
\o     completed ....Sat Jan 31 13:47:03 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:01
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a mouseAddPt()
\i 34.2:42.3
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a hiZoomOutAtMouse()
\i 34.2:27.6
\r t
\a geScroll(nil "e" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a hiZoomOutAtMouse()
\i 10.5:27.6
\r t
\a hiZoomInAtMouse()
\i 32.4:27.6
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a hiZoomInAtMouse()
\i -34.5:23.1
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a leHiStretch()
\r t
\a mouseAddPt()
\i -26.7:58.2
\r t
\a mouseAddPt()
\i -27:58.2
\r t
\a mouseAddPt()
\i -26.7:57.6
\r t
\a mouseAddPt()
\i -27:57.6
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a mouseAddPt()
\i -26.4:60.6
\r t
\a mouseAddPt()
\i -26.7:60.6
\r t
\a mouseAddPt()
\i -26.4:59.4
\r t
\a mouseAddPt()
\i -26.7:59.4
\r t
\a hiZoomOutAtMouse()
\i -27.3:56.7
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "w" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a geScroll(nil "e" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a setExtForm()
\r nil
\a hiiSetCurrentForm('ivExtOptionsForm)
\r t
\a _hiFormApplyCB(ivExtOptionsForm)
\o 
\o Extraction started at Sat Jan 31 13:48:26 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaEXT.rul.
\o Inclusion limit is set to 1000.
\o Running layout Extraction analysis
\o flat mode
\o Full checking.
\o executing: nodrc = geomAndNot("nodrc" "nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: nolpe = geomOr("nolpe")
\o executing: res_id = geomOr("res_id")
\o executing: dio_id = geomOr("dio_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: ca = geomAnd(cc geomAndNot(geomAndNot(active poly) elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: nBulk = geomOr(nwell)
\o executing: pBulk = geomOr(pwell)
\o executing: nOhmic = geomAnd(nActive nwell)
\o executing: pOhmic = geomAnd(pActive pwell)
\o executing: nNotOhmic = geomAnd(nActive pwell)
\o executing: pNotOhmic = geomAnd(pActive nwell)
\o executing: nDiff = geomAndNot(nNotOhmic geomOr(poly elec))
\o executing: pDiff = geomAndNot(pNotOhmic geomOr(poly elec))
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: nElecChannel = geomOutside(geomAnd(nNotOhmic elec) poly)
\o executing: pElecChannel = geomOutside(geomAnd(pNotOhmic elec) poly)
\o executing: nElecChannelTran = geomButting(nElecChannel nDiff (keep == 2))
\o executing: pElecChannelTran = geomButting(pElecChannel pDiff (keep == 2))
\o executing: nChannelTran = geomButting(nChannel nDiff (keep == 2))
\o executing: pChannelTran = geomButting(pChannel pDiff (keep == 2))
\o executing: nDiffContact = geomAnd(ca nDiff)
\o executing: pDiffContact = geomAnd(ca pDiff)
\o executing: nOhmicContact = geomAnd(ca nOhmic)
\o executing: pOhmicContact = geomAnd(ca pOhmic)
\o executing: Gate = geomAnd(geomOr(nNotOhmic pNotOhmic) poly)
\o executing: fieldPoly = geomAvoiding(poly Gate)
\o executing: NPdiode = geomAnd(dio_id geomOutside(nNotOhmic poly))
\o executing: PNdiode = geomAnd(dio_id geomOutside(pNotOhmic poly))
\o executing: elecGate = geomAnd(geomOr(nNotOhmic pNotOhmic) elec)
\o executing: fieldElec = geomAvoiding(elec elecGate)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: npnTran = geomEnclose(nwell geomOr(npnCollector npnBase npnEmitter))
\o executing: fieldPoly = geomAndNot(fieldPoly res_id)
\o executing: poly = geomAndNot(poly res_id)
\o executing: polyRes = geomButting(geomAnd(res_id poly) fieldPoly (keep == 2))
\o executing: fieldElec = geomAndNot(fieldElec res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: elecRes = geomButting(geomAnd(res_id elec) fieldElec (keep == 2))
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: nwellRes = geomButting(geomAnd(res_id nwell) nBulk (keep == 2))
\o executing: geomConnect((via nOhmicContact nOhmic nwell nBulk metal1) (via pOhmicContact pOhmic ...
\o executing: extractMOS(nChannelTran (poly "G") (nDiff "S" "D") (pBulk "B") "nmos4 ivpcell BYU_LI...
\o For layer nChannelTran :
\o     5  shapes encountered.
\o     5  nmos4 ivpcell BYU_LIB devices well formed.
\o executing: saveProperty(nChannelTran "model" "ami12N")
\o executing: extractMOS(pChannelTran (poly "G") (pDiff "S" "D") (nBulk "B") "pmos4 ivpcell BYU_LI...
\o For layer pChannelTran :
\o     5  shapes encountered.
\o     5  pmos4 ivpcell BYU_LIB devices well formed.
\o executing: saveProperty(pChannelTran "model" "ami12P")
\o executing: extractMOS(nElecChannelTran (elec "G") (nDiff "S" "D") (pBulk "B") "nmos4_elec ivpce...
\o executing: saveProperty(nElecChannelTran "model" "ami12NE")
\o executing: extractMOS(pElecChannelTran (elec "G") (nDiff "S" "D") (nBulk "B") "pmos4_elec ivpce...
\o executing: saveProperty(pElecChannelTran "model" "ami12PE")
\o executing: nDiffArea = measureParasitic(area (nDiff not_over nolpe) 1e-12 figure)
\o executing: attachParasitic(nDiffArea ("as" "S") ("ad" "D") nChannelTran shared)
\o executing: pDiffArea = measureParasitic(area (pDiff not_over nolpe) 1e-12 figure)
\o executing: attachParasitic(pDiffArea ("as" "S") ("ad" "D") pChannelTran shared)
\o executing: attachParasitic(nDiffArea ("as" "S") ("ad" "D") nElecChannelTran shared)
\o executing: attachParasitic(pDiffArea ("as" "S") ("ad" "D") pElecChannelTran shared)
\o executing: nDiffPerimeter = measureParasitic(length (nDiff outside poly outside elec not_over n...
\o executing: attachParasitic(nDiffPerimeter ("ps" "S") ("pd" "D") nChannelTran shared)
\o executing: attachParasitic(nDiffPerimeter ("ps" "S") ("pd" "D") nElecChannelTran shared)
\o executing: pDiffPerimeter = measureParasitic(length (pDiff outside poly outside elec not_over n...
\o executing: attachParasitic(pDiffPerimeter ("ps" "S") ("pd" "D") pChannelTran shared)
\o executing: attachParasitic(pDiffPerimeter ("ps" "S") ("pd" "D") pElecChannelTran shared)
\o executing: extractDevice(npnTran (npnCollector "C") (npnBaseTap "B") (npnEmitter "E") "npn ivpc...
\o executing: saveProperty(npnTran "model" "Generic_NPN")
\o executing: extractDevice(polyRes (poly "PLUS" "MINUS") "res ivpcell BYU_LIB")
\o executing: extractDevice(elecRes (elec "PLUS" "MINUS") "res ivpcell BYU_LIB")
\o executing: extractDevice(nwellRes (nBulk "PLUS" "MINUS") "res ivpcell BYU_LIB")
\o executing: resWidth = measureParameter(length (polyRes butting poly) 1e-06)
\o            resPerim = measureParameter(perimeter polyRes 1e-06)
\o executing: resLength = calculateParameter(((resPerim - resWidth) / 2.0))
\o executing: fullCorners = measureParameter(bends_full polyRes)
\o executing: res = calculateParameter((sheetRes * ((resLength / (resWidth / 2.0)) - (fullCorners ...
\o executing: saveParameter(res "r")
\o executing: resWidth = measureParameter(length (elecRes butting elec) 1e-06)
\o            resPerim = measureParameter(perimeter elecRes 1e-06)
\o executing: resLength = calculateParameter(((resPerim - resWidth) / 2.0))
\o executing: fullCorners = measureParameter(bends_full elecRes)
\o executing: res = calculateParameter((sheetRes * ((resLength / (resWidth / 2.0)) - (fullCorners ...
\o executing: saveParameter(res "r")
\o executing: resWidth = measureParameter(length (nwellRes butting nBulk) 1e-06)
\o            resPerim = measureParameter(perimeter nwellRes 1e-06)
\o executing: resLength = calculateParameter(((resPerim - resWidth) / 2.0))
\o executing: fullCorners = measureParameter(bends_full nwellRes)
\o executing: res = calculateParameter((sheetRes * ((resLength / (resWidth / 2.0)) - (fullCorners ...
\o executing: saveParameter(res "r")
\o executing: extractDevice(CapacitorElec (elec "PLUS") (poly "MINUS") "cap ivpcell BYU_LIB")
\o executing: saveRecognition(CapacitorElec "electrode")
\o executing: capacitance = measureParameter(area CapacitorElec (1e-18 * areaCap))
\o executing: saveParameter(capacitance "c")
\o executing: extractDevice(NPdiode (pBulk "PLUS") (nDiff "MINUS") "diode ivpcell BYU_LIB")
\o executing: saveProperty(NPdiode "model" "ami12NP")
\o executing: extractDevice(PNdiode (pDiff "PLUS") (nBulk "MINUS") "diode ivpcell BYU_LIB")
\o executing: saveProperty(PNdiode "model" "ami12PN")
\o executing: saveRecognition(nChannelTran "poly")
\o executing: saveRecognition(pChannelTran "poly")
\o executing: saveRecognition(nElecChannelTran "electrode")
\o executing: saveRecognition(pElecChannelTran "electrode")
\o executing: saveInterconnect((elec "electrode"))
\o executing: saveInterconnect((ce "contact"))
\o executing: saveInterconnect((npnCollectorContact "contact"))
\o executing: saveInterconnect((npnCollector "nwell"))
\o executing: saveInterconnect((npnEmitterContact "contact"))
\o executing: saveInterconnect((npnBaseContact "contact"))
\o executing: saveInterconnect((npnBase "pbase"))
\o executing: saveInterconnect((nBulk "nwell"))
\o executing: saveInterconnect((pBulk "pwell"))
\o executing: saveInterconnect((nOhmic "active"))
\o executing: saveInterconnect((pOhmic "active"))
\o executing: saveInterconnect((nDiff "active"))
\o executing: saveInterconnect((pDiff "active"))
\o executing: saveInterconnect((poly "poly"))
\o executing: saveInterconnect((metal1 "metal1"))
\o executing: saveInterconnect((nOhmicContact "contact"))
\o executing: saveInterconnect((pOhmicContact "contact"))
\o executing: saveInterconnect((nDiffContact "contact"))
\o executing: saveInterconnect((pDiffContact "contact"))
\o executing: saveInterconnect((cp "contact"))
\o executing: saveInterconnect((metal2 "metal2"))
\o executing: saveInterconnect((via "via"))
\o executing: saveInterconnect((nwellRes "res_id"))
\o executing: saveInterconnect((polyRes "res_id"))
\o executing: saveInterconnect((elecRes "res_id"))
\o executing: saveDerived(metal1 ("metal1" "net") cell_view)
\o executing: saveDerived(metal2 ("metal2" "net") cell_view)
\o executing: saveDerived(via ("via" "net") cell_view)
\o Extraction started.......Sat Jan 31 13:48:26 2015
\o            completed ....Sat Jan 31 13:48:26 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\o saving rep MYLIB/minority/extracted
\r t
\a hiFormDone(ivExtOptionsForm)
\o 
\o Extraction started at Sat Jan 31 13:48:28 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaEXT.rul.
\o Inclusion limit is set to 1000.
\o Running layout Extraction analysis
\o flat mode
\o Full checking.
\o executing: nodrc = geomAndNot("nodrc" "nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: nolpe = geomOr("nolpe")
\o executing: res_id = geomOr("res_id")
\o executing: dio_id = geomOr("dio_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: ca = geomAnd(cc geomAndNot(geomAndNot(active poly) elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: nBulk = geomOr(nwell)
\o executing: pBulk = geomOr(pwell)
\o executing: nOhmic = geomAnd(nActive nwell)
\o executing: pOhmic = geomAnd(pActive pwell)
\o executing: nNotOhmic = geomAnd(nActive pwell)
\o executing: pNotOhmic = geomAnd(pActive nwell)
\o executing: nDiff = geomAndNot(nNotOhmic geomOr(poly elec))
\o executing: pDiff = geomAndNot(pNotOhmic geomOr(poly elec))
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: nElecChannel = geomOutside(geomAnd(nNotOhmic elec) poly)
\o executing: pElecChannel = geomOutside(geomAnd(pNotOhmic elec) poly)
\o executing: nElecChannelTran = geomButting(nElecChannel nDiff (keep == 2))
\o executing: pElecChannelTran = geomButting(pElecChannel pDiff (keep == 2))
\o executing: nChannelTran = geomButting(nChannel nDiff (keep == 2))
\o executing: pChannelTran = geomButting(pChannel pDiff (keep == 2))
\o executing: nDiffContact = geomAnd(ca nDiff)
\o executing: pDiffContact = geomAnd(ca pDiff)
\o executing: nOhmicContact = geomAnd(ca nOhmic)
\o executing: pOhmicContact = geomAnd(ca pOhmic)
\o executing: Gate = geomAnd(geomOr(nNotOhmic pNotOhmic) poly)
\o executing: fieldPoly = geomAvoiding(poly Gate)
\o executing: NPdiode = geomAnd(dio_id geomOutside(nNotOhmic poly))
\o executing: PNdiode = geomAnd(dio_id geomOutside(pNotOhmic poly))
\o executing: elecGate = geomAnd(geomOr(nNotOhmic pNotOhmic) elec)
\o executing: fieldElec = geomAvoiding(elec elecGate)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: npnTran = geomEnclose(nwell geomOr(npnCollector npnBase npnEmitter))
\o executing: fieldPoly = geomAndNot(fieldPoly res_id)
\o executing: poly = geomAndNot(poly res_id)
\o executing: polyRes = geomButting(geomAnd(res_id poly) fieldPoly (keep == 2))
\o executing: fieldElec = geomAndNot(fieldElec res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: elecRes = geomButting(geomAnd(res_id elec) fieldElec (keep == 2))
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: nwellRes = geomButting(geomAnd(res_id nwell) nBulk (keep == 2))
\o executing: geomConnect((via nOhmicContact nOhmic nwell nBulk metal1) (via pOhmicContact pOhmic ...
\o executing: extractMOS(nChannelTran (poly "G") (nDiff "S" "D") (pBulk "B") "nmos4 ivpcell BYU_LI...
\o For layer nChannelTran :
\o     5  shapes encountered.
\o     5  nmos4 ivpcell BYU_LIB devices well formed.
\o executing: saveProperty(nChannelTran "model" "ami12N")
\o executing: extractMOS(pChannelTran (poly "G") (pDiff "S" "D") (nBulk "B") "pmos4 ivpcell BYU_LI...
\o For layer pChannelTran :
\o     5  shapes encountered.
\o     5  pmos4 ivpcell BYU_LIB devices well formed.
\o executing: saveProperty(pChannelTran "model" "ami12P")
\o executing: extractMOS(nElecChannelTran (elec "G") (nDiff "S" "D") (pBulk "B") "nmos4_elec ivpce...
\o executing: saveProperty(nElecChannelTran "model" "ami12NE")
\o executing: extractMOS(pElecChannelTran (elec "G") (nDiff "S" "D") (nBulk "B") "pmos4_elec ivpce...
\o executing: saveProperty(pElecChannelTran "model" "ami12PE")
\o executing: nDiffArea = measureParasitic(area (nDiff not_over nolpe) 1e-12 figure)
\o executing: attachParasitic(nDiffArea ("as" "S") ("ad" "D") nChannelTran shared)
\o executing: pDiffArea = measureParasitic(area (pDiff not_over nolpe) 1e-12 figure)
\o executing: attachParasitic(pDiffArea ("as" "S") ("ad" "D") pChannelTran shared)
\o executing: attachParasitic(nDiffArea ("as" "S") ("ad" "D") nElecChannelTran shared)
\o executing: attachParasitic(pDiffArea ("as" "S") ("ad" "D") pElecChannelTran shared)
\o executing: nDiffPerimeter = measureParasitic(length (nDiff outside poly outside elec not_over n...
\o executing: attachParasitic(nDiffPerimeter ("ps" "S") ("pd" "D") nChannelTran shared)
\o executing: attachParasitic(nDiffPerimeter ("ps" "S") ("pd" "D") nElecChannelTran shared)
\o executing: pDiffPerimeter = measureParasitic(length (pDiff outside poly outside elec not_over n...
\o executing: attachParasitic(pDiffPerimeter ("ps" "S") ("pd" "D") pChannelTran shared)
\o executing: attachParasitic(pDiffPerimeter ("ps" "S") ("pd" "D") pElecChannelTran shared)
\o executing: extractDevice(npnTran (npnCollector "C") (npnBaseTap "B") (npnEmitter "E") "npn ivpc...
\o executing: saveProperty(npnTran "model" "Generic_NPN")
\o executing: extractDevice(polyRes (poly "PLUS" "MINUS") "res ivpcell BYU_LIB")
\o executing: extractDevice(elecRes (elec "PLUS" "MINUS") "res ivpcell BYU_LIB")
\o executing: extractDevice(nwellRes (nBulk "PLUS" "MINUS") "res ivpcell BYU_LIB")
\o executing: resWidth = measureParameter(length (polyRes butting poly) 1e-06)
\o            resPerim = measureParameter(perimeter polyRes 1e-06)
\o executing: resLength = calculateParameter(((resPerim - resWidth) / 2.0))
\o executing: fullCorners = measureParameter(bends_full polyRes)
\o executing: res = calculateParameter((sheetRes * ((resLength / (resWidth / 2.0)) - (fullCorners ...
\o executing: saveParameter(res "r")
\o executing: resWidth = measureParameter(length (elecRes butting elec) 1e-06)
\o            resPerim = measureParameter(perimeter elecRes 1e-06)
\o executing: resLength = calculateParameter(((resPerim - resWidth) / 2.0))
\o executing: fullCorners = measureParameter(bends_full elecRes)
\o executing: res = calculateParameter((sheetRes * ((resLength / (resWidth / 2.0)) - (fullCorners ...
\o executing: saveParameter(res "r")
\o executing: resWidth = measureParameter(length (nwellRes butting nBulk) 1e-06)
\o            resPerim = measureParameter(perimeter nwellRes 1e-06)
\o executing: resLength = calculateParameter(((resPerim - resWidth) / 2.0))
\o executing: fullCorners = measureParameter(bends_full nwellRes)
\o executing: res = calculateParameter((sheetRes * ((resLength / (resWidth / 2.0)) - (fullCorners ...
\o executing: saveParameter(res "r")
\o executing: extractDevice(CapacitorElec (elec "PLUS") (poly "MINUS") "cap ivpcell BYU_LIB")
\o executing: saveRecognition(CapacitorElec "electrode")
\o executing: capacitance = measureParameter(area CapacitorElec (1e-18 * areaCap))
\o executing: saveParameter(capacitance "c")
\o executing: extractDevice(NPdiode (pBulk "PLUS") (nDiff "MINUS") "diode ivpcell BYU_LIB")
\o executing: saveProperty(NPdiode "model" "ami12NP")
\o executing: extractDevice(PNdiode (pDiff "PLUS") (nBulk "MINUS") "diode ivpcell BYU_LIB")
\o executing: saveProperty(PNdiode "model" "ami12PN")
\o executing: saveRecognition(nChannelTran "poly")
\o executing: saveRecognition(pChannelTran "poly")
\o executing: saveRecognition(nElecChannelTran "electrode")
\o executing: saveRecognition(pElecChannelTran "electrode")
\o executing: saveInterconnect((elec "electrode"))
\o executing: saveInterconnect((ce "contact"))
\o executing: saveInterconnect((npnCollectorContact "contact"))
\o executing: saveInterconnect((npnCollector "nwell"))
\o executing: saveInterconnect((npnEmitterContact "contact"))
\o executing: saveInterconnect((npnBaseContact "contact"))
\o executing: saveInterconnect((npnBase "pbase"))
\o executing: saveInterconnect((nBulk "nwell"))
\o executing: saveInterconnect((pBulk "pwell"))
\o executing: saveInterconnect((nOhmic "active"))
\o executing: saveInterconnect((pOhmic "active"))
\o executing: saveInterconnect((nDiff "active"))
\o executing: saveInterconnect((pDiff "active"))
\o executing: saveInterconnect((poly "poly"))
\o executing: saveInterconnect((metal1 "metal1"))
\o executing: saveInterconnect((nOhmicContact "contact"))
\o executing: saveInterconnect((pOhmicContact "contact"))
\o executing: saveInterconnect((nDiffContact "contact"))
\o executing: saveInterconnect((pDiffContact "contact"))
\o executing: saveInterconnect((cp "contact"))
\o executing: saveInterconnect((metal2 "metal2"))
\o executing: saveInterconnect((via "via"))
\o executing: saveInterconnect((nwellRes "res_id"))
\o executing: saveInterconnect((polyRes "res_id"))
\o executing: saveInterconnect((elecRes "res_id"))
\o executing: saveDerived(metal1 ("metal1" "net") cell_view)
\o executing: saveDerived(metal2 ("metal2" "net") cell_view)
\o executing: saveDerived(via ("via" "net") cell_view)
\o Extraction started.......Sat Jan 31 13:48:28 2015
\o            completed ....Sat Jan 31 13:48:28 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\o saving rep MYLIB/minority/extracted
\r t
\a hiiSetCurrentForm('leStretchForm)
\r t
\a cancelEnterFun(leStretchForm)
\r t
\r nil
\a setLVSForm()
\r "         ivLVSEnvForm->rulesLibName->editable = ivLVSEnvForm->rulesLibButton->value         if( ivLVSEnvForm->rulesLibButton->value == t then             ddsSyncWithForm( ivLVSEnvForm 'libBrowse 'rulesLibName                                            'nil 'nil nil )         )"
\a ivLVSRun()
\p > 
\a hiiSetCurrentForm('simSaveAllForm)
\r t
\a hiFormDone(simSaveAllForm)
\r t
\o LVS job is now started...
\r nil
\o The LVS job has completed. The net-lists match.
\o 
\o Run Directory: /auto/fsg/lhsiao/cadence/LVS
\p > 
\a hiDBoxOK(ivDBox)
\r t
\a showClickInfo()
\i 36.3:21.9
\r window:3
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a hiZoomOutAtMouse()
\i 35.7:21.6
\r t
\a hiZoomInAtMouse()
\i 41.7:21
\r t
\a hiZoomOutAtMouse()
\i 42:21
\r t
\a leHiSubmitPlot()
\o Loading /ee2/Cadence/ic/tools/plot/.cdsplotinit
\w *WARNING* Paper size 'A' is unknown to plotter 'default'.
\w 
\w *WARNING* Load template file aborted.
\w 
\p > 
\a hiiSetCurrentForm('lePlotSubmitForm)
\r t
\a leiDisplayPlotOptionsForm()
\p > 
\a hiiSetCurrentForm('lePlotOptionsForm)
\r t
\a lePlotOptionsForm->plotPlotterCyclic->value="cb425cps"
\r "cb425cps"
\a lePlotOptionsForm->plotOrientationRadio->value= "Portrait"
\r "Portrait"
\a lePlotOptionsForm->plotOrientationRadio->value= "Automatic"
\r "Automatic"
\a lePlotOptionsForm->plotFitToggle->fit->value =  t
\r t
\a lePlotOptionsForm->plotCenter->center->value =  nil
\r nil
\a lePlotOptionsForm->plotFitToggle->fit->value =  nil
\r nil
\a lePlotOptionsForm->plotScale->value=500.0
\r 500.0
\a hiFormDone(lePlotOptionsForm)
\r t
\r t
\a hiiSetCurrentForm('lePlotSubmitForm)
\r t
\a leiDisplayPlotOptionsForm()
\p > 
\a hiiSetCurrentForm('lePlotOptionsForm)
\r t
\a hiiSetCurrentForm('lePlotSubmitForm)
\r t
\a hiiSetCurrentForm('lePlotOptionsForm)
\r t
\a lePlotOptionsForm->plotScale->value=500.0
\r 500.0
\a _hiFormApplyCB(lePlotOptionsForm)
\r t
\a lePlotOptionsForm->plotScale->value=1000.0
\r 1000.0
\a lePlotOptionsForm->plotCenter->center->value =  t
\r t
\a hiiSetCurrentForm('lePlotSubmitForm)
\r t
\a hiiSetCurrentForm('lePlotOptionsForm)
\r t
\a lePlotOptionsForm->plotScale->value=3000.0
\r 3000.0
\a _hiFormApplyCB(lePlotOptionsForm)
\r t
\a _hiFormApplyCB(lePlotOptionsForm)
\r t
\a hiFormDone(lePlotOptionsForm)
\r t
\r t
\a hiiSetCurrentForm('lePlotSubmitForm)
\r t
\a leiDisplayPlotOptionsForm()
\p > 
\a hiiSetCurrentForm('lePlotOptionsForm)
\r t
\a lePlotOptionsForm->plotScale->value=1000.0
\r 1000.0
\a _hiFormApplyCB(lePlotOptionsForm)
\r t
\a lePlotOptionsForm->plotScale->value=3000.0
\r 3000.0
\a _hiFormApplyCB(lePlotOptionsForm)
\r t
\a hiFormDone(lePlotOptionsForm)
\r t
\r t
\a hiiSetCurrentForm('lePlotSubmitForm)
\r t
\a leiDisplayPlotOptionsForm()
\p > 
\a hiiSetCurrentForm('lePlotOptionsForm)
\r t
\a lePlotOptionsForm->plotScale->value=3000.0
\r 3000.0
\a hiFormDone(lePlotOptionsForm)
\r t
\r t
\a hiiSetCurrentForm('lePlotSubmitForm)
\r t
\a leiDisplayPlotOptionsForm()
\p > 
\a hiiSetCurrentForm('lePlotOptionsForm)
\r t
\a lePlotOptionsForm->plotScale->value=3000.0
\r 3000.0
\a _hiFormApplyCB(lePlotOptionsForm)
\r t
\a hiFormDone(lePlotOptionsForm)
\r t
\r t
\a hiiSetCurrentForm('lePlotSubmitForm)
\r t
\a _hiFormApplyCB(lePlotSubmitForm)
\o Start Plotting ...
\o 
\o plotServ 7.02, build a, 03.01, static
\o   "MYLIB minority layout" 
\o 
\o Getting layout propert bagGetting layout propert bagplotServ 7.02, build a, 03.01, static
\o ... End Plotting
\o 
\o Successfully plotted 1 cellview(s)
\o 
\r t
\a hiFormCancel(lePlotSubmitForm)
\r t
\r t
\a _pipoStreamOutFormDisplay()
\o Loading transUI.cxt 
\p > 
\a hiiSetCurrentForm('xStreamOutForm)
\r t
\a xStreamOutForm->strmOutbuttons->value= "StrmOut From Virtual Memory"
\r "StrmOut From Virtual Memory"
\a xStreamOutForm->strmOutbuttons->value= "Strmout From Disk"
\r "Strmout From Disk"
\a hiFormDone(xStreamOutForm)
\o XStream/strmoutui is running (PID = ipc:1 )...
\r t
\r t
\o *WARNING* (icLic-3) Could not get license Virtuoso_Layout_Suite_L
\o *WARNING* (icLic-3) Could not get license Virtuoso_Layout_Suite_XL
\o 
\a hiDisplaySaveForRestoreDialog()
\r nil
\a (hiFileDialogSetSelection hiiSaveForRestoreDlg '("." "cdsSession.save") 'done)
\r t
\a (hiFileDialogDone hiiSaveForRestoreDlg t)
\r t
\a showClickInfo()
\i -64.2:75.3
\r window:3
\a setDRCForm()
\r nil
\a hiiSetCurrentForm('ivDRCOptionsForm)
\r t
\a hiFormDone(ivDRCOptionsForm)
\o DRC started at Sat Jan 31 13:57:17 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaDRC.rul.
\o Inclusion limit is set to 1000.
\o Running layout DRC analysis
\o Flat mode
\o Full checking.
\o executing: nodrc = geomOr("nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: glass = geomOr(geomAndNot(("glass" "drawing") nodrc))
\o executing: pad = geomOr(geomAndNot(("pad" "drawing") nodrc))
\o executing: res_id = geomOr("res_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: diff = geomAndNot(geomAndNot(active elec) poly)
\o executing: ca = geomAnd(cc diff)
\o executing: diffContact = geomAnd(ca geomOr(geomAnd(nselect pwell) geomAnd(pselect nwell)))
\o executing: nOhmicContact = geomAnd(ca geomAnd(nselect nwell))
\o executing: pOhmicContact = geomAnd(ca geomAnd(pselect pwell))
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: geomConnect((via nOhmicContact diff nwell metal1) (via pOhmicContact diff pwell meta...
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: sdActive = geomOr(geomAnd(nActive pwell) geomAnd(pActive nwell))
\o executing: conActive = geomOr(geomAnd(nActive nwell) geomAnd(pActive pwell))
\o executing: nDiff = geomAnd(diff nselect)
\o executing: pDiff = geomAnd(diff pselect)
\o executing: nBulk = geomAnd(nwell)
\o executing: pBulk = geomAnd(pwell)
\o executing: nOhmic = geomAnd(nDiff nwell)
\o executing: pOhmic = geomAnd(pDiff pwell)
\o executing: nNotOhmic = geomAnd(nDiff pwell)
\o executing: pNotOhmic = geomAnd(pDiff nwell)
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: Gate = geomAnd(active poly)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: TransistorElec = geomOverlap(elec geomNot(poly))
\o executing: poly = geomAndNot(poly res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: dubiousData(("nwell" "drawing") "Improperly formed shape - nwell")
\o executing: dubiousData(("pwell" "drawing") "Improperly formed shape - pwell")
\o executing: dubiousData(("active" "drawing") "Improperly formed shape - active")
\o executing: dubiousData(("nselect" "drawing") "Improperly formed shape - nselect")
\o executing: dubiousData(("pselect" "drawing") "Improperly formed shape - pselect")
\o executing: dubiousData(("poly" "drawing") "Improperly formed shape - poly")
\o executing: dubiousData(("metal1" "drawing") "Improperly formed shape - metal1")
\o executing: dubiousData(("contact" "drawing") "Improperly formed shape - contact")
\o executing: dubiousData(("metal2" "drawing") "Improperly formed shape - metal2")
\o executing: dubiousData(("via" "drawing") "Improperly formed shape - via")
\o executing: dubiousData(("glass" "drawing") "Improperly formed shape - glass")
\o executing: saveDerived(geomGetNon45(nwell) "Non-Manhattan shape - nwell")
\o executing: saveDerived(geomGetNon45(pwell) "Non-Manhattan shape - pwell")
\o executing: saveDerived(geomGetNon45(active) "Non-Manhattan shape - active")
\o executing: saveDerived(geomGetNon45(nselect) "Non-Manhattan shape - nselect")
\o executing: saveDerived(geomGetNon45(pselect) "Non-Manhattan shape - pselect")
\o executing: saveDerived(geomGetNon45(poly) "Non-Manhattan shape - poly")
\o executing: saveDerived(geomGetNon45(metal1) "Non-Manhattan shape - metal1")
\o executing: saveDerived(geomGetNon45(ca) "Non-Manhattan shape - ca")
\o executing: saveDerived(geomGetNon45(cp) "Non-Manhattan shape - cp")
\o executing: saveDerived(geomGetNon45(cc) "Non-Manhatten shape - contact")
\o executing: saveDerived(geomGetNon45(metal2) "Non-Manhattan shape - metal2")
\o executing: saveDerived(geomGetNon45(via) "Non-Manhattan shape - via")
\o executing: saveDerived(geomGetNon45(glass) "Non-Manhattan shape - glass")
\o executing: offGrid(nwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pwell gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(active gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(nselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(pselect gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(poly gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal1 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ca gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cp gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(cc gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(metal2 gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(via gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(glass gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("pbase" "drawing") "Improperly formed shape - pbase")
\o executing: saveDerived(geomGetNon45(pbase) "Non-Manhattan shape - pbase")
\o executing: offGrid(pbase gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("cactive" "drawing") "Improperly formed shape - cactive")
\o executing: saveDerived(geomGetNon45(cactive) "Non-Manhattan shape - cactive")
\o executing: offGrid(cactive gridRes "(SCMOS Inst) Edge not on grid")
\o executing: dubiousData(("electrode" "drawing") "Improperly formed shape - elec")
\o executing: saveDerived(geomGetNon45(elec) "Non-Manhattan shape - elec")
\o executing: saveDerived(geomGetNon45(ce) "Non-Manhattan shape - ce")
\o executing: offGrid(elec gridRes "(SCMOS Inst) Edge not on grid")
\o executing: offGrid(ce gridRes "(SCMOS Inst) Edge not on grid")
\o executing: nwellEdge = geomGetEdge(nwell)
\o executing: pwellEdge = geomGetEdge(pwell)
\o executing: activeEdge = geomGetEdge(active)
\o executing: nselectEdge = geomGetEdge(nselect)
\o executing: pselectEdge = geomGetEdge(pselect)
\o executing: polyEdge = geomGetEdge(poly)
\o executing: metal1Edge = geomGetEdge(metal1)
\o executing: caEdge = geomGetEdge(ca)
\o executing: cpEdge = geomGetEdge(cp)
\o executing: metal2Edge = geomGetEdge(metal2)
\o executing: viaEdge = geomGetEdge(via)
\o executing: glassEdge = geomGetEdge(glass)
\o executing: pbaseEdge = geomGetEdge(pbase)
\o executing: cactiveEdge = geomGetEdge(cactive)
\o executing: ceEdge = geomGetEdge(ce)
\o executing: nBulkEdge = geomGetEdge(nBulk)
\o executing: pBulkEdge = geomGetEdge(pBulk)
\o executing: nOhmicEdge = geomGetEdge(nOhmic)
\o executing: pOhmicEdge = geomGetEdge(pOhmic)
\o executing: nNotOhmicEdge = geomGetEdge(nNotOhmic)
\o executing: pNotOhmicEdge = geomGetEdge(pNotOhmic)
\o executing: GateEdge = geomGetEdge(Gate)
\o executing: CapacitorElecEdge = geomGetEdge(CapacitorElec)
\o executing: TransistorElecEdge = geomGetEdge(TransistorElec)
\o executing: npnCollectorEdge = geomGetEdge(npnCollector)
\o executing: npnCollectorContactEdge = geomGetEdge(npnCollectorContact)
\o executing: npnEmitterEdge = geomGetEdge(npnEmitter)
\o executing: npnBaseTapEdge = geomGetEdge(npnBaseTap)
\o executing: npnBaseContactEdge = geomGetEdge(npnBaseContact)
\o executing: npnEmitterContactEdge = geomGetEdge(npnEmitterContact)
\o executing: saveDerived(geomAndNot(active geomOr(nwell pwell)) "(DBM Rule 1.0) Active must be in...
\o executing: saveDerived(geomAndNot(active geomOr(nselect pselect)) "(DBM Rule 1.1) Active must b...
\o executing: saveDerived(geomAnd(poly nOhmic) "(DBM Rule 2.0) P transistor should be in P-select")
\o executing: saveDerived(geomAnd(poly pOhmic) "(DBM Rule 2.0) N transistor should be in N-select")
\o executing: saveDerived(geomAnd(elec nOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(elec pOhmic) "(DBM Rule 2.1) Elec cannot overlap ohmic diffusion")
\o executing: saveDerived(geomAnd(pselect nselect) "(DBM Rule 3.1) Pselect and Nselect may not ove...
\o executing: drc(nwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(nwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(pwellEdge (width < (lambda * 10.0)) errMesg)
\o            drc(pwellEdge (notch < (lambda * 6.0)) errMesg)
\o executing: drc(nwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(nwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: drc(pwell (sep < (lambda * 9.0)) diffNet errMesg)
\o            drc(pwell (sep < (lambda * 6.0)) sameNet errMesg)
\o executing: saveDerived(geomAnd(nwell pwell) "(SCMOS Rule 1 note) n-wells and p-wells may not ov...
\o executing: drc(activeEdge (width < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(activeEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(sdActive nBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(sdActive pBulkEdge (enc < (lambda * 5.0)) errMesg)
\o executing: drc(conActive nBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(conActive pBulkEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(nNotOhmicEdge pOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(pNotOhmicEdge nOhmicEdge ((0 < sep) < (lambda * 4.0)) errMesg)
\o executing: drc(polyEdge (width < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(polyEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(activeEdge polyEdge (enc < (lambda * 3.0)) errMesg)
\o            drc(polyEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside pNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(nselectEdge geomGetEdge(polyEdge inside nNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside nNotOhmic) (sep < (lambda * 3.0)) (app >...
\o executing: drc(pselectEdge geomGetEdge(polyEdge inside pNotOhmic) (enc < (lambda * 3.0)) (app >...
\o executing: drc(geomOr(nselectEdge pselectEdge) activeEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(geomOr(nselectEdge pselectEdge) activeEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(nselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(pselectEdge caEdge (sep < (lambda * 1.0)) errMesg)
\o            drc(pselectEdge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomButting(geomAnd(ca nselect) geomAnd(ca pselect)) errMesg)
\o executing: drc(nselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(pselectEdge (width < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(nselect pselect) errMesg)
\o executing: drc(cpEdge (width < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cpEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(cp (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(polyEdge cpEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAndNot(cp poly) errMesg)
\o executing: drc(cpEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(cp pChannel) errMesg)
\o executing: saveDerived(geomAnd(cp nChannel) errMesg)
\o executing: drc(caEdge (width < (lambda * 2.0)) errMesg)
\o            drc(caEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(caEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ca (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(activeEdge caEdge (enc < (lambda * 1.5)) errMesg)
\o executing: saveDerived(geomAnd(geomAndNot(ca cactive) geomAndNot(ca active)) errMesg)
\o executing: drc(caEdge GateEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(ca Gate) errMesg)
\o executing: drc(metal1Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (sep < (lambda * 3.0)) errMesg)
\o            drc(metal1Edge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(metal1Edge cpEdge (enc < (lambda * 1.0)) errMesg)
\o executing: drc(metal1Edge caEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(cp metal1) errMesg)
\o executing: saveDerived(geomAndNot(ca metal1) errMesg)
\o executing: drc(viaEdge (width < (lambda * 2.0)) errMesg)
\o            drc(viaEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(via (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1))))...
\o executing: drc(metal1Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal1) errMesg)
\o executing: drc(viaEdge caEdge (sep < (lambda * 2.0)) errMesg)
\o executing: drc(viaEdge cpEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(via geomOr(ca cp)) errMesg)
\o executing: drc(polyEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(polyEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via poly) errMesg)
\o executing: drc(activeEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(activeEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via active) errMesg)
\o executing: drc(cactiveEdge viaEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(cactiveEdge viaEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(via cactive) errMesg)
\o executing: drc(metal2Edge (width < (lambda * 3.0)) errMesg)
\o            drc(metal2Edge (sep < (lambda * 4.0)) errMesg)
\o            drc(metal2Edge (notch < (lambda * 4.0)) errMesg)
\o executing: drc(metal2Edge viaEdge (enc < (lambda * 1.0)) errMesg)
\o executing: saveDerived(geomAndNot(via metal2) errMesg)
\o executing: BondingGlass = geomInside(glass pad)
\o            ProbeGlass = geomOutside(glass pad)
\o executing: saveDerived(geomStraddle(glass pad))
\o executing: BondingPad = geomAndNot(geomSize(BondingGlass 6.0) geomHoles(BondingGlass))
\o executing: ProbePad = geomAndNot(geomSize(ProbeGlass 6.0) geomHoles(ProbeGlass))
\o executing: Pad = geomOr(BondingPad ProbePad)
\o executing: BondingPadEdge = geomGetEdge(BondingPad not_over "nodrc")
\o executing: ProbePadEdge = geomGetEdge(ProbePad not_over "nodrc")
\o executing: PadEdge = geomGetEdge(Pad not_over "nodrc")
\o executing: Metal2EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal2" "glass" 36.0)) not_ov...
\o executing: Metal1EdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("metal1" "glass" 21.0)) not_ov...
\o executing: PolyEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("poly" "glass" 21.0)) not_over "...
\o executing: ActiveEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("active" "glass" 21.0)) not_ov...
\o executing: ElecEdgeNearPad = geomGetEdge(geomOr(geomGetByLayer("electrode" "glass" 21.0)) not_o...
\o executing: drc(BondingPadEdge (width < 60.0) "(SCMOS Rule 10.1) bonding pad width: 60 um")
\o executing: drc(ProbePadEdge (width < 20.0) "(SCMOS Rule 10.2) probe pad width: 20 um")
\o executing: drc(Metal2EdgeNearPad glassEdge (enc < 6.0) "(SCMOS Rule 10.3) pad enclosure of glas...
\o executing: saveDerived(geomAndNot(glass metal2) "(SCMOS Rule 10.3) pad enclosure of glass: 6 um")
\o executing: drc(PadEdge Metal2EdgeNearPad (sep < 30.0) "(SCMOS Rule 10.4) pad to unrelated metal...
\o executing: drc(PadEdge Metal1EdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated metal...
\o executing: drc(PadEdge PolyEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated poly sp...
\o executing: drc(PadEdge ActiveEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated activ...
\o executing: drc(PadEdge ElecEdgeNearPad (sep < 15.0) "(SCMOS Rule 10.5) pad to unrelated elec sp...
\o executing: drc(CapacitorElecEdge (width < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(CapacitorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(polyEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge nBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(nBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(CapacitorElecEdge pBulkEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(pBulkEdge CapacitorElecEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec nBulk) errMesg)
\o executing: saveDerived(geomStraddle(CapacitorElec pBulk) errMesg)
\o executing: drc(CapacitorElecEdge activeEdge (sep < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAnd(CapacitorElec active) errMesg)
\o executing: drc(CapacitorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge (width < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge (sep < (lambda * 3.0)) errMesg)
\o            drc(TransistorElecEdge (notch < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge activeEdge (enc < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge activeEdge (sep < (lambda * 1.0)) errMesg)
\o executing: drc(TransistorElecEdge polyEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(TransistorElecEdge polyEdge (ovlp < (lambda * 2.0)) errMesg)
\o executing: drc(TransistorElecEdge cpEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec cp) errMesg)
\o executing: drc(TransistorElecEdge caEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(TransistorElec ca) errMesg)
\o executing: drc(ceEdge (width < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (sep < (lambda * 2.0)) errMesg)
\o            drc(ceEdge (notch < (lambda * 2.0)) errMesg)
\o executing: drc(ce (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambda * 0.1)))) ...
\o executing: drc(CapacitorElecEdge ceEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(TransistorElecEdge ceEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(ce elec) "(SCMOS Rules 13.3,13.4) electrode enclosure of cont...
\o executing: drc(ceEdge polyEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomOutside(geomAnd(ce poly) CapacitorElec) errMesg)
\o executing: drc(ceEdge activeEdge (sep < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAnd(ce active) errMesg)
\o executing: drc(npnCollectorContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnCollectorContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (...
\o executing: drc(npnEmitterContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (la...
\o executing: drc(npnBaseContactEdge (width < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseContact (area > ((lambda * 2.0 * (lambda * 2.0)) + (lambda * 0.1 * (lambd...
\o executing: drc(npnEmitterEdge npnEmitterContactEdge (enc < (lambda * 3.0)) errMesg)
\o executing: drc(pbaseEdge npnEmitterEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnEmitterEdge npnBaseTapEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(pbaseEdge npnBaseTapEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(npnBaseTapEdge npnBaseContactEdge (enc < (lambda * 2.0)) errMesg)
\o executing: drc(nwellEdge pbaseEdge (enc < (lambda * 6.0)) errMesg)
\o executing: saveDerived(geomAndNot(pbase nwell) errMesg)
\o executing: drc(npnCollectorEdge pbaseEdge (sep < (lambda * 4.0)) errMesg)
\o executing: drc(nwellEdge npnCollectorEdge (enc < (lambda * 3.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nwell) errMesg)
\o executing: drc(nselectEdge npnCollectorEdge (enc < (lambda * 2.0)) errMesg)
\o executing: saveDerived(geomAndNot(cactive nselect) errMesg)
\o DRC started.......Sat Jan 31 13:57:17 2015
\o     completed ....Sat Jan 31 13:57:17 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\r t
\a hiResizeWindow(window(1) list(0:25 717:722))
\r t
\a hiResizeWindow(window(1) list(0:25 717:769))
\r t
\a hiResizeWindow(window(1) list(0:25 717:832))
\r t
\a hiResizeWindow(window(1) list(0:25 717:880))
\r t
\a hiResizeWindow(window(1) list(0:25 717:926))
\r t
\a hiResizeWindow(window(1) list(0:25 717:956))
\r t
\a hiResizeWindow(window(1) list(0:25 717:988))
\r t
\a hiResizeWindow(window(1) list(0:25 717:1021))
\r t
\a hiResizeWindow(window(1) list(0:25 717:1046))
\r t
\a hiResizeWindow(window(1) list(0:25 717:1069))
\r t
\a hiResizeWindow(window(1) list(0:25 717:1081))
\r t
\a hiResizeWindow(window(1) list(0:25 717:1093))
\r t
\a hiResizeWindow(window(1) list(0:25 717:1102))
\r t
\a hiResizeWindow(window(1) list(0:25 717:1112))
\r t
\a hiResizeWindow(window(1) list(0:25 717:1124))
\r t
\a hiResizeWindow(window(1) list(0:25 717:1132))
\r t
\a hiResizeWindow(window(1) list(0:25 717:1141))
\r t
\a hiResizeWindow(window(1) list(0:25 717:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 718:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 727:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 740:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 751:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 768:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 781:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 792:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 799:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 812:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 825:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 842:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 854:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 865:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 873:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 880:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 888:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 897:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 905:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 916:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 924:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 940:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 954:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 967:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 980:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 991:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 1002:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 1012:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 1022:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 1032:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 1035:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 1037:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 1039:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 1038:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 1008:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 998:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 994:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 973:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 941:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 910:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 883:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 873:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 855:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 851:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 850:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 846:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 841:1145))
\r t
\a hiResizeWindow(window(1) list(0:25 838:1145))
\r t
\a showClickInfo()
\i 14.1:84
\r window:3
\a setExtForm()
\r nil
\a hiiSetCurrentForm('ivExtOptionsForm)
\r t
\a hiFormDone(ivExtOptionsForm)
\o 
\o Extraction started at Sat Jan 31 13:58:35 2015
\o 
\o Validating hierarchy instantiation for:
\o library: MYLIB
\o cell:    minority
\o view:    layout
\o Rules come from library AMI12.
\o Rules path is divaEXT.rul.
\o Inclusion limit is set to 1000.
\o Running layout Extraction analysis
\o flat mode
\o Full checking.
\o executing: nodrc = geomAndNot("nodrc" "nodrc")
\o executing: nwell = geomOr(geomAndNot(("nwell" "drawing") nodrc))
\o executing: pwell = geomOr(geomAndNot(("pwell" "drawing") nodrc))
\o executing: active = geomOr(geomAndNot(("active" "drawing") nodrc))
\o executing: nselect = geomOr(geomAndNot(("nselect" "drawing") nodrc))
\o executing: pselect = geomOr(geomAndNot(("pselect" "drawing") nodrc))
\o executing: nActive = geomAnd(active nselect)
\o executing: pActive = geomAnd(active pselect)
\o executing: poly = geomOr(geomAndNot(("poly" "drawing") nodrc))
\o executing: metal1 = geomOr(geomAndNot(("metal1" "drawing") nodrc))
\o executing: cc = geomOr(geomAndNot(("contact" "drawing") nodrc))
\o executing: metal2 = geomOr(geomAndNot(("metal2" "drawing") nodrc))
\o executing: via = geomOr(geomAndNot(("via" "drawing") nodrc))
\o executing: nolpe = geomOr("nolpe")
\o executing: res_id = geomOr("res_id")
\o executing: dio_id = geomOr("dio_id")
\o executing: elec = geomAndNot(("electrode" "drawing") nodrc)
\o executing: ce = geomAnd(cc elec)
\o executing: cp = geomAnd(cc geomAndNot(poly elec))
\o executing: ca = geomAnd(cc geomAndNot(geomAndNot(active poly) elec))
\o executing: pbase = geomOr(geomAndNot(("pbase" "drawing") nodrc))
\o executing: cactive = geomOr(geomAndNot(("cactive" "drawing") nodrc))
\o executing: ca = geomOr(ca geomAnd(cc cactive))
\o executing: nBulk = geomOr(nwell)
\o executing: pBulk = geomOr(pwell)
\o executing: nOhmic = geomAnd(nActive nwell)
\o executing: pOhmic = geomAnd(pActive pwell)
\o executing: nNotOhmic = geomAnd(nActive pwell)
\o executing: pNotOhmic = geomAnd(pActive nwell)
\o executing: nDiff = geomAndNot(nNotOhmic geomOr(poly elec))
\o executing: pDiff = geomAndNot(pNotOhmic geomOr(poly elec))
\o executing: nChannel = geomOutside(geomAnd(nNotOhmic poly) elec)
\o executing: pChannel = geomOutside(geomAnd(pNotOhmic poly) elec)
\o executing: nElecChannel = geomOutside(geomAnd(nNotOhmic elec) poly)
\o executing: pElecChannel = geomOutside(geomAnd(pNotOhmic elec) poly)
\o executing: nElecChannelTran = geomButting(nElecChannel nDiff (keep == 2))
\o executing: pElecChannelTran = geomButting(pElecChannel pDiff (keep == 2))
\o executing: nChannelTran = geomButting(nChannel nDiff (keep == 2))
\o executing: pChannelTran = geomButting(pChannel pDiff (keep == 2))
\o executing: nDiffContact = geomAnd(ca nDiff)
\o executing: pDiffContact = geomAnd(ca pDiff)
\o executing: nOhmicContact = geomAnd(ca nOhmic)
\o executing: pOhmicContact = geomAnd(ca pOhmic)
\o executing: Gate = geomAnd(geomOr(nNotOhmic pNotOhmic) poly)
\o executing: fieldPoly = geomAvoiding(poly Gate)
\o executing: NPdiode = geomAnd(dio_id geomOutside(nNotOhmic poly))
\o executing: PNdiode = geomAnd(dio_id geomOutside(pNotOhmic poly))
\o executing: elecGate = geomAnd(geomOr(nNotOhmic pNotOhmic) elec)
\o executing: fieldElec = geomAvoiding(elec elecGate)
\o executing: CapacitorElec = geomInside(elec poly)
\o executing: npnCollector = geomAnd(nwell geomAnd(nselect cactive))
\o executing: npnCollectorContact = geomAnd(ca npnCollector)
\o executing: npnBaseImplant = geomAnd(nwell pbase)
\o executing: npnEmitter = geomAnd(nselect npnBaseImplant)
\o executing: npnBase = geomAndNot(npnBaseImplant npnEmitter)
\o executing: npnBaseTap = geomAnd(npnBase pselect)
\o executing: npnBaseContact = geomAnd(geomOr(cc ca) npnBaseTap)
\o executing: npnEmitterContact = geomAnd(geomOr(cc ca) npnEmitter)
\o executing: npnTran = geomEnclose(nwell geomOr(npnCollector npnBase npnEmitter))
\o executing: fieldPoly = geomAndNot(fieldPoly res_id)
\o executing: poly = geomAndNot(poly res_id)
\o executing: polyRes = geomButting(geomAnd(res_id poly) fieldPoly (keep == 2))
\o executing: fieldElec = geomAndNot(fieldElec res_id)
\o executing: elec = geomAndNot(elec res_id)
\o executing: elecRes = geomButting(geomAnd(res_id elec) fieldElec (keep == 2))
\o executing: nBulk = geomAndNot(nBulk res_id)
\o executing: nwell = geomAndNot(nwell res_id)
\o executing: nwellRes = geomButting(geomAnd(res_id nwell) nBulk (keep == 2))
\o executing: geomConnect((via nOhmicContact nOhmic nwell nBulk metal1) (via pOhmicContact pOhmic ...
\o executing: extractMOS(nChannelTran (poly "G") (nDiff "S" "D") (pBulk "B") "nmos4 ivpcell BYU_LI...
\o For layer nChannelTran :
\o     5  shapes encountered.
\o     5  nmos4 ivpcell BYU_LIB devices well formed.
\o executing: saveProperty(nChannelTran "model" "ami12N")
\o executing: extractMOS(pChannelTran (poly "G") (pDiff "S" "D") (nBulk "B") "pmos4 ivpcell BYU_LI...
\o For layer pChannelTran :
\o     5  shapes encountered.
\o     5  pmos4 ivpcell BYU_LIB devices well formed.
\o executing: saveProperty(pChannelTran "model" "ami12P")
\o executing: extractMOS(nElecChannelTran (elec "G") (nDiff "S" "D") (pBulk "B") "nmos4_elec ivpce...
\o executing: saveProperty(nElecChannelTran "model" "ami12NE")
\o executing: extractMOS(pElecChannelTran (elec "G") (nDiff "S" "D") (nBulk "B") "pmos4_elec ivpce...
\o executing: saveProperty(pElecChannelTran "model" "ami12PE")
\o executing: nDiffArea = measureParasitic(area (nDiff not_over nolpe) 1e-12 figure)
\o executing: attachParasitic(nDiffArea ("as" "S") ("ad" "D") nChannelTran shared)
\o executing: pDiffArea = measureParasitic(area (pDiff not_over nolpe) 1e-12 figure)
\o executing: attachParasitic(pDiffArea ("as" "S") ("ad" "D") pChannelTran shared)
\o executing: attachParasitic(nDiffArea ("as" "S") ("ad" "D") nElecChannelTran shared)
\o executing: attachParasitic(pDiffArea ("as" "S") ("ad" "D") pElecChannelTran shared)
\o executing: nDiffPerimeter = measureParasitic(length (nDiff outside poly outside elec not_over n...
\o executing: attachParasitic(nDiffPerimeter ("ps" "S") ("pd" "D") nChannelTran shared)
\o executing: attachParasitic(nDiffPerimeter ("ps" "S") ("pd" "D") nElecChannelTran shared)
\o executing: pDiffPerimeter = measureParasitic(length (pDiff outside poly outside elec not_over n...
\o executing: attachParasitic(pDiffPerimeter ("ps" "S") ("pd" "D") pChannelTran shared)
\o executing: attachParasitic(pDiffPerimeter ("ps" "S") ("pd" "D") pElecChannelTran shared)
\o executing: extractDevice(npnTran (npnCollector "C") (npnBaseTap "B") (npnEmitter "E") "npn ivpc...
\o executing: saveProperty(npnTran "model" "Generic_NPN")
\o executing: extractDevice(polyRes (poly "PLUS" "MINUS") "res ivpcell BYU_LIB")
\o executing: extractDevice(elecRes (elec "PLUS" "MINUS") "res ivpcell BYU_LIB")
\o executing: extractDevice(nwellRes (nBulk "PLUS" "MINUS") "res ivpcell BYU_LIB")
\o executing: resWidth = measureParameter(length (polyRes butting poly) 1e-06)
\o            resPerim = measureParameter(perimeter polyRes 1e-06)
\o executing: resLength = calculateParameter(((resPerim - resWidth) / 2.0))
\o executing: fullCorners = measureParameter(bends_full polyRes)
\o executing: res = calculateParameter((sheetRes * ((resLength / (resWidth / 2.0)) - (fullCorners ...
\o executing: saveParameter(res "r")
\o executing: resWidth = measureParameter(length (elecRes butting elec) 1e-06)
\o            resPerim = measureParameter(perimeter elecRes 1e-06)
\o executing: resLength = calculateParameter(((resPerim - resWidth) / 2.0))
\o executing: fullCorners = measureParameter(bends_full elecRes)
\o executing: res = calculateParameter((sheetRes * ((resLength / (resWidth / 2.0)) - (fullCorners ...
\o executing: saveParameter(res "r")
\o executing: resWidth = measureParameter(length (nwellRes butting nBulk) 1e-06)
\o            resPerim = measureParameter(perimeter nwellRes 1e-06)
\o executing: resLength = calculateParameter(((resPerim - resWidth) / 2.0))
\o executing: fullCorners = measureParameter(bends_full nwellRes)
\o executing: res = calculateParameter((sheetRes * ((resLength / (resWidth / 2.0)) - (fullCorners ...
\o executing: saveParameter(res "r")
\o executing: extractDevice(CapacitorElec (elec "PLUS") (poly "MINUS") "cap ivpcell BYU_LIB")
\o executing: saveRecognition(CapacitorElec "electrode")
\o executing: capacitance = measureParameter(area CapacitorElec (1e-18 * areaCap))
\o executing: saveParameter(capacitance "c")
\o executing: extractDevice(NPdiode (pBulk "PLUS") (nDiff "MINUS") "diode ivpcell BYU_LIB")
\o executing: saveProperty(NPdiode "model" "ami12NP")
\o executing: extractDevice(PNdiode (pDiff "PLUS") (nBulk "MINUS") "diode ivpcell BYU_LIB")
\o executing: saveProperty(PNdiode "model" "ami12PN")
\o executing: saveRecognition(nChannelTran "poly")
\o executing: saveRecognition(pChannelTran "poly")
\o executing: saveRecognition(nElecChannelTran "electrode")
\o executing: saveRecognition(pElecChannelTran "electrode")
\o executing: saveInterconnect((elec "electrode"))
\o executing: saveInterconnect((ce "contact"))
\o executing: saveInterconnect((npnCollectorContact "contact"))
\o executing: saveInterconnect((npnCollector "nwell"))
\o executing: saveInterconnect((npnEmitterContact "contact"))
\o executing: saveInterconnect((npnBaseContact "contact"))
\o executing: saveInterconnect((npnBase "pbase"))
\o executing: saveInterconnect((nBulk "nwell"))
\o executing: saveInterconnect((pBulk "pwell"))
\o executing: saveInterconnect((nOhmic "active"))
\o executing: saveInterconnect((pOhmic "active"))
\o executing: saveInterconnect((nDiff "active"))
\o executing: saveInterconnect((pDiff "active"))
\o executing: saveInterconnect((poly "poly"))
\o executing: saveInterconnect((metal1 "metal1"))
\o executing: saveInterconnect((nOhmicContact "contact"))
\o executing: saveInterconnect((pOhmicContact "contact"))
\o executing: saveInterconnect((nDiffContact "contact"))
\o executing: saveInterconnect((pDiffContact "contact"))
\o executing: saveInterconnect((cp "contact"))
\o executing: saveInterconnect((metal2 "metal2"))
\o executing: saveInterconnect((via "via"))
\o executing: saveInterconnect((nwellRes "res_id"))
\o executing: saveInterconnect((polyRes "res_id"))
\o executing: saveInterconnect((elecRes "res_id"))
\o executing: saveDerived(metal1 ("metal1" "net") cell_view)
\o executing: saveDerived(metal2 ("metal2" "net") cell_view)
\o executing: saveDerived(via ("via" "net") cell_view)
\o Extraction started.......Sat Jan 31 13:58:35 2015
\o            completed ....Sat Jan 31 13:58:35 2015
\o     CPU TIME = 00:00:00  TOTAL TIME = 00:00:00
\o *********   Summary of rule violations for cell "minority layout"   *********
\o    Total errors found: 0
\o 
\o saving rep MYLIB/minority/extracted
\r t
\a showClickInfo()
\i -42.9:55.8
\r window:3
\a setLVSForm()
\r "         ivLVSEnvForm->rulesLibName->editable = ivLVSEnvForm->rulesLibButton->value         if( ivLVSEnvForm->rulesLibButton->value == t then             ddsSyncWithForm( ivLVSEnvForm 'libBrowse 'rulesLibName                                            'nil 'nil nil )         )"
\a ivLVSRun()
\p > 
\a hiiSetCurrentForm('simSaveAllForm)
\r t
\a hiFormDone(simSaveAllForm)
\r t
\o LVS job is now started...
\r nil
\o The LVS job has completed. The net-lists match.
\o 
\o Run Directory: /auto/fsg/lhsiao/cadence/LVS
\p > 
\a hiDBoxOK(ivDBox)
\r t
\a showClickInfo()
\i 69.6:30.3
\r window:3
\a hiZoomInAtMouse()
\i 14.1:50.4
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a leHiSplit()
\p > 
\a cancelEnterFun(leSplitForm)
\r t
\r nil
\a hiQuit()
\p > 
\a hiDBoxCancel(hiQuitDBox)
\r t
\r nil
\a showClickInfo()
\i -38.4:33.3
\r window:3
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a geScroll(nil "s" nil)
\r t
\a geScroll(nil "n" nil)
\r t
\a hiQuit()
\p > 
\a hiDBoxOK(hiQuitDBox)
\r t
\o 
